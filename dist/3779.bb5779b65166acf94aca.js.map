{"version":3,"file":"3779.bb5779b65166acf94aca.js","mappings":"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/kE,EAAK,YAER,mBAAC+iB,GAAA,EAAD,CACE9hB,KAAK,SACLP,QAAS,IAAM83C,EAAeusB,EAAAA,GAAAA,eAE7B/kE,EAAK,iBAER,mBAAC+iB,GAAA,EAAD,CACE9hB,KAAK,SACLP,QAAS,IAAM83C,EAAeusB,EAAAA,GAAAA,MAE7B/kE,EAAK,c,gBCvEhB,MA2lEA,GA3lEiB,KACf,MAAMA,GAAOC,EAAAA,EAAAA,KAqjEb,OACE,0BAAKQ,UAAU,aArjEC,68GAsjEJgzC,MAAM,MAAMxtC,KAAKhF,GAErB,mBAAC8hB,GAAA,EAAD,CAAUriB,QAAS,MACjBskE,EAAAA,GAAAA,IAAoB/jE,IACpB1B,EAAAA,EAAAA,MAAa+mB,iBAAiB,CAC5BhrB,QAAS0E,EAAKiB,EAAO,eAGvB,wBAAGR,UAAWQ,EAAKyzB,OAAQ1pB,IAAK/J,IAChC,+BAAOA,MAx6DF,CAAC,IAChB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,eACA,eACA,eACA,eACA,QACA,eACA,gBACA,aACA,cACA,SACA,sBACA,4BACA,sBACA,cACA,aACA,aACA,cACA,WACA,cACA,oBACA,cACA,oBACA,eACA,qBACA,YACA,kBACA,OACA,cACA,YACA,UACA,aACA,iBACA,mBACA,oBACA,iBACA,oBACA,wBACA,iBACA,iBACA,kBACA,kBACA,kBACA,wBACA,mBACA,uBACA,4BACA,qBACA,wBACA,kBACA,mBACA,iBACA,kBACA,sBACA,aACA,kBACA,kBACA,gBACA,gBACA,cACA,yBACA,WACA,2BACA,WACA,mBACA,mBACA,yBACA,UACA,sBACA,oBACA,oBACA,oBACA,wBACA,OACA,qBACA,qBACA,uBACA,OACA,mBACA,iBACA,kBACA,aACA,gBACA,WACA,WACA,eACA,kBACA,eACA,sBACA,eACA,gBACA,wBACA,6BACA,2BACA,gBACA,gBACA,sBACA,6BACA,gBACA,sBACA,qBACA,sBACA,iBACA,eACA,oBACA,sBACA,wBACA,oBACA,WACA,4BACA,gBACA,UACA,OACA,cACA,2BACA,mBACA,gBACA,gBACA,oBACA,sBACA,iBACA,WACA,4BACA,SACA,oBACA,WACA,KACA,OACA,oBACA,eACA,QACA,IACA,OACA,gBACA,gBACA,WACA,gBACA,gBACA,gBACA,gBACA,QACA,WACA,YACA,eACA,eACA,QACA,SACA,YACA,MACA,SACA,cACA,cACA,UACA,WACA,UACA,OACA,UACA,gBACA,YACA,iBACA,UACA,SACA,WACA,gBACA,oBACA,kBACA,kBACA,aACA,kBACA,OACA,UACA,gBACA,YACA,eACA,UACA,YACA,eACA,YACA,kBACA,YACA,yBACA,YACA,MACA,YACA,aACA,iBACA,OACA,OACA,iBACA,iBACA,aACA,eACA,UACA,aACA,YACA,eACA,UACA,gBACA,OACA,OACA,OACA,MACA,iBACA,OACA,OACA,OACA,OACA,aACA,QACA,aACA,QACA,gBACA,sBACA,iBACA,eACA,YACA,mBACA,cACA,aACA,QACA,aACA,YACA,cACA,SACA,WACA,aACA,cACA,kBACA,eACA,YACA,iBACA,eACA,YACA,YACA,eACA,MACA,cACA,UACA,WACA,aACA,gBACA,gBACA,QACA,YACA,UACA,QACA,sBACA,cACA,SACA,sBACA,4BACA,sBACA,cACA,eACA,YACA,oBACA,QACA,aACA,YACA,uBACA,QACA,SACA,MACA,YACA,OACA,WACA,8BACA,wBACA,8BACA,wBACA,mBACA,OACA,cACA,SACA,aACA,gBACA,gBACA,eACA,kBACA,cACA,gBACA,iBACA,WACA,WACA,SACA,YACA,QACA,MACA,aACA,UACA,gBACA,kBACA,IACA,YACA,OACA,eACA,gBACA,OACA,aACA,WACA,iBACA,eACA,gBACA,eACA,iBACA,gBACA,gBACA,iBACA,iBACA,SACA,aACA,eACA,gBACA,aACA,aACA,WACA,WACA,MACA,aACA,cACA,cACA,YACA,YACA,SACA,WACA,UACA,WACA,aACA,UACA,aACA,aACA,cACA,WACA,SACA,kBACA,eACA,gBACA,wBACA,eACA,YACA,gBACA,gBACA,gBACA,MACA,YACA,YACA,cACA,QACA,aACA,aACA,kBACA,qBACA,oBACA,eACA,mBACA,aACA,aACA,YACA,YACA,eACA,cACA,aACA,aACA,YACA,YACA,eACA,QACA,eACA,gBACA,WACA,SACA,QACA,eACA,cACA,aACA,eACA,aACA,cACA,aACA,eACA,eACA,gBACA,aACA,QACA,cACA,iBACA,cACA,WACA,SACA,SACA,oBACA,oBACA,oBACA,oBACA,qBACA,qBACA,kBACA,kBACA,eACA,eACA,sBACA,sBACA,sBACA,sBACA,uBACA,uBACA,oBACA,oBACA,wBACA,SACA,aACA,aACA,cACA,wBACA,qBACA,qBACA,WACA,kBACA,qBACA,SACA,cACA,cACA,cACA,wBACA,eACA,eACA,eACA,eACA,eACA,eACA,cACA,cACA,cACA,cACA,kBACA,kBACA,mBACA,gBACA,eACA,yBACA,cACA,cACA,YACA,sBACA,cACA,cACA,eACA,eACA,eACA,OACA,eACA,YACA,kBACA,iBACA,qBACA,iBACA,QACA,aACA,oBACA,UACA,QACA,oBACA,QACA,mBACA,iBACA,qBACA,iBACA,eACA,mBACA,aACA,eACA,iBACA,aACA,kBACA,aACA,sBACA,sBACA,YACA,iBACA,SACA,OACA,cACA,cACA,eACA,YACA,aACA,oBACA,QACA,aACA,UACA,iBACA,eACA,aACA,kBACA,gBACA,cACA,MACA,WACA,kBACA,eACA,UACA,mBACA,mBACA,WACA,WACA,iBACA,QACA,SACA,cACA,OACA,YACA,QACA,MACA,cACA,kBACA,OACA,cACA,WACA,QACA,aACA,OACA,QACA,SACA,gBACA,OACA,QACA,gBACA,IACA,WACA,cACA,YACA,WACA,UACA,cACA,eACA,eACA,sBACA,kBACA,kBACA,oBACA,UACA,qBACA,aACA,OACA,WACA,UACA,YACA,YACA,WACA,WACA,aACA,WACA,UACA,UACA,SACA,MACA,MACA,cACA,SACA,MACA,QACA,YACA,YACA,cACA,YACA,OACA,mCACA,eACA,YACA,sBACA,WACA,SACA,eACA,UACA,OACA,gBACA,aACA,OACA,gBACA,iBACA,WACA,WACA,gBACA,UACA,IACA,WACA,OACA,WACA,kBACA,aACA,8BACA,eACA,eACA,iBACA,QACA,gBACA,iBACA,aACA,aACA,eACA,eACA,gBACA,gBACA,MACA,QACA,WACA,WACA,aACA,oBACA,aACA,WACA,wBACA,gBACA,qBACA,iBACA,YACA,SACA,SACA,WACA,YACA,MACA,OACA,cACA,SACA,YACA,MACA,cACA,oBACA,aACA,iBACA,aACA,YACA,IACA,aACA,QACA,aACA,QACA,eACA,UACA,aACA,QACA,kBACA,aACA,eACA,UACA,YACA,OACA,iBACA,YACA,uBACA,kBACA,mBACA,cACA,mBACA,cACA,yBACA,oBACA,kBACA,aACA,kBACA,aACA,mBACA,cACA,0BACA,qBACA,wBACA,mBACA,iBACA,WACA,iBACA,YACA,YACA,OACA,iBACA,YACA,uBACA,kBACA,aACA,QACA,kBACA,aACA,oBACA,eACA,kBACA,aACA,WACA,MACA,iBACA,YACA,oBACA,mBACA,eACA,UACA,gBACA,WACA,aACA,QACA,kBACA,aACA,kBACA,aACA,gBACA,WACA,aACA,QACA,MACA,SACA,cACA,MACA,UACA,kBACA,cACA,QACA,OACA,kBACA,gBACA,gBACA,cACA,aACA,oBACA,0BACA,oBACA,mBACA,uBACA,oBACA,YACA,gBACA,WACA,aACA,cACA,wBACA,aACA,cACA,sBACA,eACA,sBACA,aACA,WACA,YACA,eACA,WACA,WACA,YACA,kBACA,oBACA,cACA,iBACA,aACA,gBACA,mBACA,YACA,cACA,eACA,OACA,YACA,OACA,SACA,uBACA,gBACA,sBACA,cACA,OACA,cACA,oBACA,oBACA,WACA,oBACA,OACA,OACA,YACA,OACA,iBACA,WACA,QACA,aACA,cACA,OACA,cACA,SACA,eACA,gBACA,eACA,cACA,cACA,cACA,OACA,WACA,gBACA,UACA,eACA,eACA,eACA,eACA,aACA,OACA,SACA,cACA,cACA,IACA,UACA,WACA,QACA,YACA,YACA,yBACA,aACA,iBACA,sBACA,eACA,mBACA,qBACA,oBACA,aACA,kBACA,QACA,QACA,OACA,MACA,QACA,OACA,MACA,aACA,QACA,OACA,QACA,cACA,sBACA,UACA,QACA,gBACA,YACA,UACA,iBACA,eACA,eACA,qBACA,OACA,kBACA,aACA,sBACA,gBACA,sBACA,eACA,SACA,MACA,IACA,SACA,QACA,OACA,aACA,iBACA,YACA,YACA,YACA,YACA,cACA,eACA,sBACA,mBACA,uBACA,qBACA,oBACA,qBACA,uBACA,cACA,qBACA,aACA,kBACA,kBACA,mBACA,gBACA,eACA,gBACA,gBACA,aACA,YACA,QACA,gBACA,UACA,yBACA,sCACA,mBACA,4CACA,cACA,gBACA,aACA,iBACA,gBACA,sBACA,uBACA,gBACA,gBACA,YACA,kBACA,gBACA,mBACA,gBACA,yBACA,sBACA,kBACA,WACA,aACA,MACA,UACA,aACA,kBACA,aACA,kBACA,wBACA,iBACA,kBACA,UACA,SACA,aACA,oBACA,iBACA,UACA,QACA,oBACA,qBACA,2BACA,qBACA,oBACA,qBACA,cACA,eACA,cACA,YACA,aACA,oBACA,gBACA,WACA,WACA,YACA,cACA,iBACA,iBACA,QACA,cACA,cACA,QACA,aACA,WACA,eACA,gBACA,gBACA,iBACA,UACA,SACA,QACA,YACA,kBACA,gBACA,cACA,iBACA,cACA,kBACA,cACA,QACA,OACA,WACA,cACA,gBACA,UACA,sBACA,eACA,wBACA,iBACA,qBACA,uBACA,qBACA,2BACA,qBACA,cACA,aACA,aACA,oBACA,uCACA,eACA,eACA,aACA,gBACA,6BACA,mCACA,6BACA,qBACA,eACA,gBACA,aACA,YACA,eACA,UACA,YACA,IACA,WACA,YACA,UACA,QACA,0BACA,WACA,UACA,kBACA,eACA,cACA,QACA,QACA,iBACA,WACA,SACA,QACA,SACA,oBACA,eACA,MACA,WACA,WACA,OACA,SACA,IACA,MACA,YACA,OACA,cACA,cACA,iBACA,QACA,gBACA,IACA,QACA,MACA,WACA,SACA,WACA,cACA,YACA,cACA,YACA,IACA,eACA,WACA,gBACA,eACA,gBACA,WACA,SACA,cACA,cACA,iBACA,YACA,cACA,OACA,YACA,sBACA,aACA,eACA,QACA,YACA,kBACA,YACA,YACA,gBACA,OACA,QACA,aACA,eACA,cACA,SACA,YACA,OACA,eACA,aACA,QACA,UACA,WACA,eACA,UACA,YACA,gBACA,iBACA,sBACA,WACA,eACA,iBACA,eACA,aACA,oBACA,OACA,YACA,SACA,QACA,cACA,IACA,SACA,mBACA,SACA,+BACA,yBACA,0BACA,gBACA,4BACA,kBACA,yBACA,eACA,wBACA,cACA,aACA,MACA,eACA,aACA,mBACA,iBACA,UACA,SACA,OACA,iBACA,uBACA,cACA,cACA,oBACA,gBACA,iBACA,gBACA,gBACA,oBACA,uBACA,WACA,sBACA,gBACA,OACA,YACA,kBACA,gBACA,gBACA,kBACA,WACA,oBACA,QACA,SACA,UACA,UACA,UACA,cACA,SACA,YACA,aACA,mBACA,iBACA,yBACA,uBACA,mBACA,aACA,YACA,WACA,sBACA,QACA,WACA,SACA,SACA,iBACA,eACA,gBACA,eACA,gBACA,qBACA,uBACA,aACA,aACA,eACA,iBACA,oBACA,sBACA,sBACA,sBACA,kBACA,mBACA,cACA,cACA,qBACA,kBACA,WACA,OACA,gBACA,SACA,WACA,eACA,aACA,QACA,WACA,gBACA,eACA,UACA,aACA,SACA,QACA,IACA,aACA,gBACA,SACA,YACA,YACA,SACA,cACA,cACA,gBACA,IACA,eACA,iBACA,UACA,WACA,KACA,QACA,UACA,SACA,IACA,QACA,eACA,aACA,cACA,UACA,SACA,WACA,cACA,YACA,gBACA,YACA,WACA,QACA,iBACA,QACA,MACA,QACA,MACA,WACA,UACA,YACA,UACA,YACA,eACA,gBACA,OACA,SACA,aACA,gBACA,2BACA,mBACA,eACA,eACA,cACA,iBACA,iBACA,cACA,aACA,UACA,aACA,SACA,OACA,4BACA,4BACA,gBACA,SACA,eACA,uBACA,eACA,cACA,oBACA,sBACA,4BACA,sBACA,qBACA,yBACA,sBACA,iBACA,UACA,wBACA,YACA,eACA,SACA,qBACA,kBACA,iBACA,uBACA,oBACA,mBACA,gBACA,SACA,2BACA,wBACA,4BACA,iBACA,OACA,kBACA,cACA,eACA,iBACA,UACA,iBACA,iBACA,UACA,gBACA,SACA,uBACA,gBACA,sBACA,eACA,kBACA,UACA,wBACA,iBACA,UACA,iCACA,6BACA,yCACA,yBACA,2BACA,QACA,cACA,YACA,QACA,aACA,YACA,cACA,eACA,uBACA,aACA,cACA,aACA,QACA,cACA,mBACA,QACA,gBACA,qBACA,2BACA,qBACA,kBACA,aACA,cACA,WACA,aACA,cACA,OACA,OACA,mBACA,oBACA,0BACA,oBACA,mBACA,oBACA,OACA,MACA,aACA,UACA,MACA,YACA,WACA,OACA,YACA,eACA,sBACA,8BACA,0BACA,QACA,eACA,YACA,eACA,IACA,SACA,WACA,aACA,iBACA,cACA,kBACA,IACA,YACA,QACA,UACA,eACA,UACA,eACA,eACA,KACA,iBACA,WACA,kBACA,kBACA,kBACA,eACA,UACA,aACA,SACA,QACA,aACA,YACA,iBACA,aACA,WACA,UACA,SACA,qBACA,eACA,aACA,eACA,aACA,uBACA,mBACA,cACA,OACA,OACA,eACA,cACA,oBACA,0BACA,oBACA,YACA,cACA,QACA,SACA,SACA,WACA,cACA,cACA,kBACA,WACA,eACA,WACA,iBACA,QACA,MACA,OACA,aACA,SACA,MACA,QACA,MACA,QACA,iBACA,mBACA,iBACA,aACA,QACA,cACA,IACA,cACA,aACA,WACA,YACA,iBACA,iBACA,gBACA,mBACA,qBACA,wBACA,sBACA,SACA,sBACA,4BACA,sBACA,cACA,cACA,WACA,MACA,cACA,qBACA,QACA,SACA,eACA,QACA,UACA,UACA,WACA,SACA,SACA,SACA,yBACA,QACA,mBACA,eACA,oBACA,eACA,cACA,YACA,gBACA,cACA,MACA,SACA,SACA,cACA,SACA,eACA,aACA,aACA,gBACA,aACA,eACA,eACA,OACA,QACA,UACA,SACA,cACA,OACA,YACA,YACA,aACA,kBACA,SACA,SACA,UACA,SACA,gBACA,gBACA,eACA,OACA,SACA,WACA,iBACA,YACA,aACA,YACA,WACA,OACA,UACA,QACA,mBACA,QACA,SACA,UACA,YACA,OACA,UACA,YACA,UACA,WACA,OACA,QACA,cACA,OACA,WACA,YACA,YACA,UACA,WACA,MACA,2BACA,iBACA,cACA,SACA,UACA,UACA,QACA,gBACA,YACA,qBACA,gBACA,SACA,wBACA,uBACA,oBACA,oBACA,oBACA,oBACA,qBACA,qBACA,kBACA,kBACA,eACA,eACA,kBACA,kBACA,cACA,WACA,WACA,eACA,eACA,aACA,iBACA,UACA,aACA,aACA,gBACA,yBACA,eACA,eACA,oBACA,mBACA,cACA,cACA,yBACA,SACA,uBACA,OACA,uBACA,kBACA,aACA,aACA,qBACA,mBACA,kBACA,2BACA,eACA,eACA,eACA,eACA,cACA,gBACA,YACA,oBACA,SACA,QACA,UACA,OACA,oBACA,YACA,mBACA,gBACA,gBACA,eACA,gBACA,MACA,aACA,cACA,OACA,YACA,eACA,QACA,cACA,cACA,gBACA,cACA,YACA,WACA,mBACA,SACA,mBACA,MACA,iBACA,cACA,aACA,YACA,UACA,IACA,QACA,cACA,KACA,oBACA,WACA,gBACA,UACA,aACA,UACA,2BACA,wBACA,eACA,SACA,iBACA,gBACA,uBACA,aACA,UACA,qBACA,qBACA,MACA,OACA,OACA,OACA,eACA,OACA,MACA,QACA,aACA,yBACA,mBACA,uBACA,iBACA,oBACA,gBACA,gBACA,oBACA,mBACA,gBACA,gBACA,mBACA,mBACA,gBACA,gBACA,mBACA,mBACA,kBACA,sBACA,gBACA,gBACA,sBACA,6BACA,gBACA,gBACA,6BACA,aACA,QACA,OACA,0BACA,wBACA,uBACA,mBACA,QACA,WACA,cACA,aACA,gBACA,aACA,cACA,cACA,YACA,YACA,aACA,SACA,gBACA,aACA,WACA,aACA,YACA,SACA,eACA,qBACA,kBACA,mBACA,UACA,QACA,aACA,UACA,kBACA,kBACA,aACA,oBACA,UACA,YACA,gBACA,UACA,QACA,eACA,SACA,aACA,cACA,kBACA,QACA,iBACA,gBACA,YACA,YACA,qBACA,oBACA,OACA,YACA,uBACA,uBACA,UACA,SACA,SACA,gBACA,QACA,oBACA,gBACA,aACA,gBACA,cACA,iBACA,cACA,gBACA,YACA,gBACA,eACA,eACA,cACA,iBACA,gBACA,MACA,WACA,oBACA,MACA,eACA,YACA,iBACA,UACA,eACA,KACA,aACA,SACA,IACA,WACA,iBACA,YACA,mBACA,SACA,iBACA,aACA,UACA,eACA,qBACA,aACA,UACA,oBACA,qCACA,aACA,uBACA,oBACA,SACA,OACA,iBACA,aACA,aACA,cACA,UACA,YACA,WACA,gBACA,aACA,eACA,eACA,aACA,WACA,mBACA,iBACA,YACA,aACA,aACA,aACA,WACA,YACA,YACA,cACA,cACA,aACA,WACA,WACA,aACA,aACA,QACA,sBACA,aACA,YACA,aACA,aACA,kBACA,cACA,mBACA,WACA,UACA,IACA,cACA,cACA,QACA,gBACA,QACA,eACA,aACA,OACA,eACA,OACA,oBACA,aACA,QACA,QACA,eACA,cACA,SACA,QACA,cACA,oBACA,cACA,UACA,YACA,UACA,aACA,kBACA,cACA,YACA,aACA,cACA,aACA,eACA,cACA,eACA,eACA,IACA,gBACA,SACA,aACA,QACA,sBACA,sBACA,gBACA,YACA,QACA,eACA,eACA,gBACA,cACA,iBACA,eACA,SACA,YACA,YACA,+BACA,aACA,kBACA,iBACA,gBACA,gBACA,OACA,SACA,cACA,OACA,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SAAU,GACV7mE,SAAU,GACVuL,MAAO,GACPjnB,MAAO,GACPwiF,SAAU,GACVN,WAAY,GACZO,WAAY,GACZC,OAAQ,GACRC,IAAK,GACLC,eAAgB,GAChBC,WAAY,GACZC,UAAU,EACVC,iBAAiB,EACjBC,WAAY,IAGRC,GAAgD,CAAC97D,EAAOrwB,KAC5D,OAAQA,EAAOpS,MACb,IAAK,iBACH,MAAO,IACFyiC,EACHg7D,YAAarrF,EAAOswB,QACpB47D,WAAY,IACP77D,EAAM67D,WACTb,iBAAaz2G,IAGnB,IAAK,iBACH,MAAO,IACFy7C,EACHi7D,YAAatrF,EAAOswB,QACpB47D,WAAY,IACP77D,EAAM67D,WACTZ,iBAAa12G,IAGnB,IAAK,aACH,MAAO,IACFy7C,EACHk7D,KAAMvrF,EAAOswB,QACb47D,WAAY,IACP77D,EAAM67D,WACTX,UAAM32G,IAGZ,IAAK,cACH,MAAO,IACFy7C,EACHA,MAAOrwB,EAAOswB,QACd47D,WAAY,IACP77D,EAAM67D,WACT77D,WAAOz7C,IAGb,IAAK,gBACH,MAAO,IACFy7C,EACHm7D,YAAaxrF,EAAOswB,QAAQ87D,KAC5BN,eAAgB9rF,EAAOswB,QAAQ+7D,YAC/BH,WAAY,IACP77D,EAAM67D,WACTV,iBAAa52G,IAGnB,IAAK,iBACH,MAAO,IACFy7C,EACHo7D,SAAUzrF,EAAOswB,QACjB47D,WAAY,IACP77D,EAAM67D,WACTT,cAAU72G,IAGhB,IAAK,iBACH,MAAO,IACFy7C,EACHzL,SAAU5kB,EAAOswB,QACjB47D,WAAY,IACP77D,EAAM67D,WACTtnE,cAAUhwC,IAGhB,IAAK,cACH,MAAO,IACFy7C,EACHF,MAAOnwB,EAAOswB,QACd47D,WAAY,IACP77D,EAAM67D,WACT/7D,WAAOv7C,IAGb,IAAK,cACH,MAAO,IACFy7C,EACHnnB,MAAOlJ,EAAOswB,QACd47D,WAAY,IACP77D,EAAM67D,WACThjF,WAAOt0B,IAGb,IAAK,iBACH,MAAO,IAAKy7C,EAAOq7D,SAAU1rF,EAAOswB,SACtC,IAAK,mBACH,MAAO,IACFD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","sources":["webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/hooks/useFullscreen.ts","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/common/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/main/ForwardPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/main/UrlAuthModal.module.scss?b72e","webpack://telegram-t/./src/components/main/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/components/main/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/main/WebAppModal.tsx","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/main/BotAttachModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewReactions.module.scss?a2dc","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewReactions.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/AboutAdsModal.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.tsx","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/ui/TextArea.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/ui/ShowMoreButton.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatsPicker.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/middle/composer/StickerSetCoverAnimated.tsx","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickerSet.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/components/ComponentsHeader.tsx","webpack://telegram-t/./src/components/left/components/ComponentsMain.tsx","webpack://telegram-t/./src/components/left/components/component/IconView.tsx","webpack://telegram-t/./src/components/left/components/component/ComponentIcons.tsx","webpack://telegram-t/./src/components/left/components/component/ComponentButtons.tsx","webpack://telegram-t/./src/components/left/components/component/ComponentDropdownMenu.tsx","webpack://telegram-t/./src/components/left/components/component/ComponentTab.tsx","webpack://telegram-t/./src/components/left/main/ChatItem.tsx","webpack://telegram-t/./src/components/left/components/component/ComponentUi.tsx","webpack://telegram-t/./src/components/left/components/Components.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/components/middle/message/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelector.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/MobileSearch.tsx","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/isFullyVisible.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/middle/composer/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommand.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/RightSearch.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupRecentActions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.tsx","webpack://telegram-t/./src/components/ui/Select.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/components/ui/CropModal.tsx","webpack://telegram-t/./src/components/ui/AvatarEditable.tsx"],"sourcesContent":["import type { ApiMessage, ApiDimensions } from '../../../api/types';\n\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\nimport windowSize from '../../../util/windowSize';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../../util/environment';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { isElementInViewport } from '../../../util/isElementInViewport';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  const ghost = createGhost(bestImageData || fromImage);\n  applyStyles(ghost, {\n    top: `${toTop}px`,\n    left: `${toLeft}px`,\n    width: `${toWidth}px`,\n    height: `${toHeight}px`,\n    transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n  });\n  applyShape(ghost, origin);\n\n  document.body.classList.add('ghost-animating');\n\n  requestAnimationFrame(() => {\n    document.body.appendChild(ghost);\n\n    requestAnimationFrame(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestAnimationFrame(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage) {\n  const { container, mediaEl: toImage } = getNodes(origin, message);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [MediaViewerOrigin.Inline, MediaViewerOrigin.ScheduledInline].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  ) || (\n    [MediaViewerOrigin.Album, MediaViewerOrigin.ScheduledAlbum].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n  if (!existingGhost) {\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n  }\n\n  requestAnimationFrame(() => {\n    if (existingGhost) {\n      const {\n        top,\n        left,\n        width,\n        height,\n      } = existingGhost.getBoundingClientRect();\n      const scaleX = width / toWidth;\n      const scaleY = height / toHeight;\n\n      applyStyles(ghost, {\n        transition: 'none',\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        transformOrigin: 'top left',\n        transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n        width: `${toWidth}px`,\n        height: `${toHeight}px`,\n      });\n    }\n    document.body.classList.add('ghost-animating');\n    if (!existingGhost) document.body.appendChild(ghost);\n\n    requestAnimationFrame(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestAnimationFrame(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(container: HTMLElement, imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition__slide--active > .MessageList')!;\n  let imgOffsetTop = container.offsetTop + imageEl.closest<HTMLDivElement>('.content-inner, .WebPage')!.offsetTop;\n  if (container.id.includes('album-media-')) {\n    imgOffsetTop += container.parentElement!.offsetTop + container.closest<HTMLDivElement>('.Message')!.offsetTop;\n  }\n\n  return imgOffsetTop > messageListElement.scrollTop\n    && imgOffsetTop + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction applyStyles(element: HTMLElement, styles: Record<string, string>) {\n  Object.assign(element.style, styles);\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      containerSelector = `.Transition__slide--active > .MessageList #album-media-${getMessageHtmlId(message!.id)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition__slide--active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition__slide--active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition__slide--active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition__slide--active > .MessageList #${getMessageHtmlId(message!.id)}`;\n      mediaSelector = '.message-content .full-media, .message-content .thumbnail';\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[mediaEls.length - 1],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      ghost.classList.add('circle');\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport useOnChange from './useOnChange';\nimport useBlur from './useBlur';\nimport { imgToCanvas } from '../util/files';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useOnChange(() => {\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback,\n  useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../util/environment';\nimport { getMessageMediaHash } from '../../global/helpers';\nimport useLang from '../../hooks/useLang';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport { selectIsDownloading, selectIsMessageProtected } from '../../global/selectors';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  isDownloading: boolean;\n  isProtected?: boolean;\n};\n\ntype OwnProps = {\n  mediaData?: string;\n  isVideo: boolean;\n  zoomLevelChange: number;\n  message?: ApiMessage;\n  fileName?: string;\n  isAvatar?: boolean;\n  canReport?: boolean;\n  onReport: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n  setZoomLevelChange: (change: number) => void;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  mediaData,\n  isVideo,\n  message,\n  fileName,\n  isAvatar,\n  isDownloading,\n  isProtected,\n  canReport,\n  onReport,\n  onCloseMediaViewer,\n  zoomLevelChange,\n  setZoomLevelChange,\n  onForward,\n}) => {\n  const {\n    downloadMessageMedia,\n    cancelMessageMediaDownload,\n  } = getActions();\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    message && getMessageMediaHash(message, 'download'),\n    !isDownloading,\n  );\n\n  const handleDownloadClick = useCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message: message! });\n    } else {\n      downloadMessageMedia({ message: message! });\n    }\n  }, [cancelMessageMediaDownload, downloadMessageMedia, isDownloading, message]);\n\n  const handleZoomOut = useCallback(() => {\n    const change = zoomLevelChange < 0 ? zoomLevelChange : 0;\n    setZoomLevelChange(change - 1);\n  }, [setZoomLevelChange, zoomLevelChange]);\n\n  const handleZoomIn = useCallback(() => {\n    const change = zoomLevelChange > 0 ? zoomLevelChange : 0;\n    setZoomLevelChange(change + 1);\n  }, [setZoomLevelChange, zoomLevelChange]);\n\n  const lang = useLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon-more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDownloadButton() {\n    if (isProtected) {\n      return undefined;\n    }\n\n    return isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <i className=\"icon-download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <i className=\"icon-download\" />\n      </Button>\n    );\n  }\n\n  if (IS_SINGLE_COLUMN_LAYOUT) {\n    if (isProtected) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {!isAvatar && (\n            <MenuItem\n              icon=\"forward\"\n              onClick={onForward}\n            >\n              {lang('Forward')}\n            </MenuItem>\n          )}\n          {isVideo ? (\n            <MenuItem\n              icon={isDownloading ? 'close' : 'download'}\n              onClick={handleDownloadClick}\n            >\n              {isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download'}\n            </MenuItem>\n          ) : (\n            <MenuItem\n              icon=\"download\"\n              href={mediaData}\n              download={fileName}\n            >\n              {lang('AccActionDownload')}\n            </MenuItem>\n          )}\n          {canReport && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={onReport}\n            >\n              {lang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {!isAvatar && !isProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <i className=\"icon-forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <i className=\"icon-zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <i className=\"icon-zoom-in\" />\n      </Button>\n      {canReport && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <i className=\"icon-flag\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <i className=\"icon-close\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message }): StateProps => {\n    const isDownloading = message ? selectIsDownloading(global, message) : false;\n    const isProtected = selectIsMessageProtected(global, message);\n\n    return {\n      isDownloading,\n      isProtected,\n    };\n  },\n)(MediaViewerActions));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../util/environment';\nimport { throttle } from '../../util/schedulers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  onClick: () => void;\n  isHidden?: boolean;\n  isForVideo: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', isHidden, isForVideo, onClick,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {text && (\n        <div className=\"media-viewer-footer-content\" onClick={!IS_SINGLE_COLUMN_LAYOUT ? onClick : undefined}>\n          <p className={`media-text custom-scroll ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">{text}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useLayoutEffect, useState } from '../lib/teact/teact';\nimport { PLATFORM_ENV } from '../util/environment';\n\ntype RefType = {\n  current: HTMLElement | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreenStatus(elRef: RefType, setIsPlayed: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || PLATFORM_ENV === 'iOS')) {\n      return;\n    }\n\n    if (elRef.current.requestFullscreen) {\n      elRef.current.requestFullscreen();\n    } else if (elRef.current.webkitRequestFullscreen) {\n      elRef.current.webkitRequestFullscreen();\n    } else if (elRef.current.webkitEnterFullscreen) {\n      elRef.current.webkitEnterFullscreen();\n    } else if (elRef.current.mozRequestFullScreen) {\n      elRef.current.mozRequestFullScreen();\n    }\n\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.webkitCancelFullScreen) {\n      document.webkitCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    }\n\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const listener = () => { setIsFullscreen(Boolean(prop && document[prop])); };\n    const listenerEnter = () => { setIsFullscreen(true); };\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      setIsPlayed(false);\n    };\n    const video = elRef.current;\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (video) {\n      video.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      video.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (video) {\n        video.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        video.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && PLATFORM_ENV !== 'iOS') {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n\n  return '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useRef, useCallback, useMemo,\n} from '../../lib/teact/teact';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport { IS_IOS, IS_SINGLE_COLUMN_LAYOUT } from '../../util/environment';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\nimport useLang from '../../hooks/useLang';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport { captureEvents } from '../../util/captureEvents';\n\nimport Button from '../ui/Button';\nimport RangeSlider from '../ui/RangeSlider';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  currentTime: number;\n  duration: number;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlayed: boolean;\n  isFullscreenSupported: boolean;\n  isFullscreen: boolean;\n  isVisible: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  setVisibility: (isVisible: boolean) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 1500;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  bufferedRanges,\n  bufferedProgress,\n  currentTime,\n  duration,\n  fileSize,\n  isForceMobileVersion,\n  isPlayed,\n  isFullscreenSupported,\n  isFullscreen,\n  isVisible,\n  isBuffered,\n  volume,\n  isMuted,\n  playbackRate,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  onPlayPause,\n  setVisibility,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const isSeekingRef = useRef<boolean>(false);\n  const isSeeking = isSeekingRef.current;\n\n  useEffect(() => {\n    let timeout: number | undefined;\n    if (!isVisible || !isPlayed || isSeeking || isPlaybackMenuOpen) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlayed, isVisible, isSeeking, setVisibility, isPlaybackMenuOpen]);\n\n  useEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useLang();\n\n  const handleSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeekingRef.current && seekerRef.current) {\n      const {\n        width,\n        left,\n      } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      onSeek(Math.max(Math.min(duration * ((clientX - left) / width), duration), 0));\n    }\n  }, [duration, onSeek]);\n\n  const handleStartSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    isSeekingRef.current = true;\n    handleSeek(e);\n  }, [handleSeek]);\n\n  const handleStopSeek = useCallback(() => {\n    isSeekingRef.current = false;\n  }, []);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isVisible) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [isVisible, handleStartSeek, handleSeek, handleStopSeek]);\n\n  const volumeIcon = useMemo(() => {\n    if (volume === 0 || isMuted) return 'icon-muted';\n    if (volume < 0.3) return 'icon-volume-1';\n    if (volume < 0.6) return 'icon-volume-2';\n    return 'icon-volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      {renderSeekLine(currentTime, duration, bufferedRanges, seekerRef)}\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!IS_SINGLE_COLUMN_LAYOUT}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <i className={isPlayed ? 'icon-pause' : 'icon-play'} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <i className={volumeIcon} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <i className={isFullscreen ? 'icon-smallscreen' : 'icon-fullscreen'} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className=\"playback-rate-menu\"\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nfunction renderSeekLine(\n  currentTime: number, duration: number, bufferedRanges: BufferedRange[], seekerRef: React.RefObject<HTMLDivElement>,\n) {\n  const percentagePlayed = (currentTime / duration) * 100;\n\n  return (\n    <div className=\"player-seekline\" ref={seekerRef}>\n      <div className=\"player-seekline-track\">\n        {bufferedRanges.map(({ start, end }) => (\n          <div\n            className=\"player-seekline-buffered\"\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n        <div\n          className=\"player-seekline-played\"\n          style={`width: ${percentagePlayed || 0}%`}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default VideoPlayerControls;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useFullscreenStatus from '../../hooks/useFullscreen';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport { IS_IOS, IS_SINGLE_COLUMN_LAYOUT, IS_TOUCH_ENV } from '../../util/environment';\nimport safePlay from '../../util/safePlay';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './VideoPlayer.scss';\n\nimport VideoPlayerControls from './VideoPlayerControls';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  areControlsVisible: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  toggleControls: (isVisible: boolean) => void;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n};\n\nconst MOBILE_VERSION_CONTROL_WIDTH = 400;\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  onClose,\n  toggleControls,\n  areControlsVisible,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlayed, setIsPlayed] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreenStatus(videoRef, setIsPlayed);\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(!isBuffered, undefined, undefined, 'slow');\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(IS_IOS && !isPlayed && !shouldRenderSpinner, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url]);\n\n  useEffect(() => {\n    if (videoRef.current!.currentTime === videoRef.current!.duration) {\n      setCurrentTime(0);\n      setIsPlayed(false);\n    } else {\n      setCurrentTime(videoRef.current!.currentTime);\n    }\n  }, [currentTime]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  const togglePlayState = useCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlayed) {\n      videoRef.current!.pause();\n      setIsPlayed(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlayed(true);\n    }\n  }, [isPlayed]);\n\n  useVideoCleanup(videoRef, []);\n\n  const handleMouseMove = useCallback(() => {\n    toggleControls(true);\n  }, [toggleControls]);\n\n  const handleMouseOut = useCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (e.target === videoRef.current) {\n      toggleControls(false);\n    }\n  }, [toggleControls]);\n\n  const handleTimeUpdate = useCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setCurrentTime(e.currentTarget.currentTime);\n  }, []);\n\n  const handleEnded = useCallback(() => {\n    setCurrentTime(0);\n    setIsPlayed(false);\n    toggleControls(true);\n  }, [toggleControls]);\n\n  const handleFullscreenChange = useCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  }, [exitFullscreen, isFullscreen, setFullscreen]);\n\n  const handleSeek = useCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  }, []);\n\n  const handleVolumeChange = useCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  }, [setMediaViewerVolume]);\n\n  const handleVolumeMuted = useCallback(() => {\n    setMediaViewerMuted({ isMuted: !isMuted });\n  }, [isMuted, setMediaViewerMuted]);\n\n  const handlePlaybackRateChange = useCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  }, [setMediaViewerPlaybackRate]);\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const togglePayingStateBySpace = (e: KeyboardEvent) => {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault();\n        togglePlayState(e);\n      }\n    };\n\n    document.addEventListener('keydown', togglePayingStateBySpace, false);\n\n    return () => {\n      document.removeEventListener('keydown', togglePayingStateBySpace, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n\n  return (\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={!isGif && !IS_TOUCH_ENV ? handleMouseMove : undefined}\n      onMouseOut={!isGif && !IS_TOUCH_ENV ? handleMouseOut : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          playsInline\n          loop={isGif}\n          // This is to force auto playing on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onPlay={IS_IOS ? () => setIsPlayed(true) : undefined}\n          onEnded={handleEnded}\n          onClick={!IS_SINGLE_COLUMN_LAYOUT ? togglePlayState : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onTimeUpdate={handleTimeUpdate}\n        >\n          {url && <source src={url} />}\n        </video>\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <i className=\"icon-play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            square\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !shouldRenderSpinner && (\n        <VideoPlayerControls\n          isPlayed={isPlayed}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          currentTime={currentTime}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isFullscreen={isFullscreen}\n          fileSize={fileSize}\n          duration={videoRef.current ? videoRef.current.duration || 0 : 0}\n          isVisible={areControlsVisible}\n          setVisibility={toggleControls}\n          isForceMobileVersion={posterSize && posterSize.width < MOBILE_VERSION_CONTROL_WIDTH}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiDimensions, ApiMessage, ApiUser,\n} from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../util/environment';\nimport useBlurSync from '../../hooks/useBlurSync';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport {\n  getChatAvatarHash,\n  getMessageDocument,\n  getMessageFileSize,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoFullDimensions, getVideoAvatarMediaHash,\n  getVideoDimensions,\n  isMessageDocumentPhoto,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport {\n  selectChat, selectChatMessage, selectIsMessageProtected, selectScheduledMessage, selectUser,\n} from '../../global/selectors';\nimport {\n  AVATAR_FULL_DIMENSIONS, calculateMediaViewerDimensions, VIDEO_AVATAR_FULL_DIMENSIONS,\n} from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport stopEvent from '../../util/stopEvent';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  chatId?: string;\n  threadId?: number;\n  avatarOwnerId?: string;\n  profilePhotoIndex?: number;\n  origin?: MediaViewerOrigin;\n  isActive?: boolean;\n  animationLevel: 0 | 1 | 2;\n  onClose: () => void;\n  onFooterClick: () => void;\n  setIsFooterHidden?: (isHidden: boolean) => void;\n  isFooterHidden?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  senderId?: string;\n  threadId?: number;\n  avatarOwner?: ApiChat | ApiUser;\n  profilePhotoIndex?: number;\n  message?: ApiMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n};\n\nconst ANIMATION_DURATION = 350;\n\nconst MediaViewerContent: FC<OwnProps & StateProps> = (props) => {\n  const {\n    messageId,\n    isActive,\n    avatarOwner,\n    chatId,\n    message,\n    profilePhotoIndex,\n    origin,\n    animationLevel,\n    isFooterHidden,\n    isProtected,\n    volume,\n    playbackRate,\n    isMuted,\n    onClose,\n    onFooterClick,\n    setIsFooterHidden,\n  } = props;\n  /* Content */\n  const photo = message ? getMessagePhoto(message) : undefined;\n  const video = message ? getMessageVideo(message) : undefined;\n  const webPagePhoto = message ? getMessageWebPagePhoto(message) : undefined;\n  const webPageVideo = message ? getMessageWebPageVideo(message) : undefined;\n  const isDocumentPhoto = message ? isMessageDocumentPhoto(message) : false;\n  const isDocumentVideo = message ? isMessageDocumentVideo(message) : false;\n  const isVideo = Boolean(video || webPageVideo || isDocumentVideo);\n  const isPhoto = Boolean(!isVideo && (photo || webPagePhoto || isDocumentPhoto));\n  const { isGif } = video || webPageVideo || {};\n\n  const isOpen = Boolean(avatarOwner || messageId);\n  const isAvatar = Boolean(avatarOwner);\n  const isVideoAvatar = isAvatar && avatarOwner.hasVideoAvatar;\n\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const isGhostAnimation = animationLevel === 2;\n\n  /* Media data */\n  function getMediaHash(isFull?: boolean) {\n    if (isAvatar && profilePhotoIndex !== undefined) {\n      const { photos, hasVideoAvatar } = avatarOwner!;\n      const avatarPhoto = photos && photos[profilePhotoIndex];\n      return avatarPhoto ? (hasVideoAvatar ? getVideoAvatarMediaHash(avatarPhoto) : `photo${avatarPhoto.id}?size=c`)\n        : getChatAvatarHash(avatarOwner!, isFull ? 'big' : 'normal');\n    }\n\n    return message && getMessageMediaHash(message, isFull ? 'viewerFull' : 'viewerPreview');\n  }\n\n  const pictogramBlobUrl = useMedia(\n    message && (isFromSharedMedia || isFromSearch) && getMessageMediaHash(message, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    undefined,\n    isGhostAnimation && ANIMATION_DURATION,\n  );\n  const previewMediaHash = getMediaHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    undefined,\n    isGhostAnimation && ANIMATION_DURATION,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaHash(true),\n    undefined,\n    message && getMessageMediaFormat(message, 'viewerFull'),\n    undefined,\n    isGhostAnimation && ANIMATION_DURATION,\n  );\n\n  const toggleControls = useCallback((isVisible) => {\n    setIsFooterHidden?.(!isVisible);\n  }, [setIsFooterHidden]);\n\n  const localBlobUrl = (photo || video) ? (photo || video)!.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && message && getMessageMediaThumbDataUri(message));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n\n  const videoSize = message ? getMessageFileSize(message) : undefined;\n\n  let dimensions!: ApiDimensions;\n  if (message) {\n    if (isDocumentPhoto || isDocumentVideo) {\n      dimensions = getMessageDocument(message)!.mediaSize!;\n    } else if (photo || webPagePhoto) {\n      dimensions = getPhotoFullDimensions((photo || webPagePhoto)!)!;\n    } else if (video || webPageVideo) {\n      dimensions = getVideoDimensions((video || webPageVideo)!)!;\n    }\n  } else {\n    dimensions = isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n  }\n\n  if (isAvatar) {\n    if (!isVideoAvatar) {\n      return (\n        <div key={chatId} className=\"MediaViewerContent\">\n          {renderPhoto(\n            fullMediaBlobUrl || previewBlobUrl,\n            calculateMediaViewerDimensions(dimensions, false),\n            !IS_SINGLE_COLUMN_LAYOUT && !isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={chatId} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={messageId}\n            url={localBlobUrl || fullMediaBlobUrl}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={videoSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            areControlsVisible={!isFooterHidden}\n            toggleControls={toggleControls}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            volume={0}\n            playbackRate={1}\n          />\n        </div>\n      );\n    }\n  }\n\n  if (!message) return undefined;\n  const textParts = renderMessageText(message);\n  const hasFooter = Boolean(textParts);\n\n  return (\n    <div\n      className={`MediaViewerContent ${hasFooter ? 'has-footer' : ''}`}\n    >\n      {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n      {isPhoto && renderPhoto(\n        localBlobUrl || fullMediaBlobUrl || previewBlobUrl || pictogramBlobUrl,\n        message && calculateMediaViewerDimensions(dimensions!, hasFooter),\n        !IS_SINGLE_COLUMN_LAYOUT && !isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        message && calculateMediaViewerDimensions(dimensions!, hasFooter, true),\n        !IS_SINGLE_COLUMN_LAYOUT && !isProtected,\n      ) : (\n        <VideoPlayer\n          key={messageId}\n          url={localBlobUrl || fullMediaBlobUrl}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={message && calculateMediaViewerDimensions(dimensions!, hasFooter, true)}\n          loadProgress={loadProgress}\n          fileSize={videoSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          areControlsVisible={!isFooterHidden}\n          toggleControls={toggleControls}\n          noPlay={!isActive}\n          onClose={onClose}\n          isMuted={isMuted}\n          volume={volume}\n          playbackRate={playbackRate}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          onClick={onFooterClick}\n          isHidden={isFooterHidden}\n          isForVideo={isVideo && !isGif}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): StateProps => {\n    const {\n      chatId,\n      threadId,\n      messageId,\n      avatarOwnerId,\n      profilePhotoIndex,\n      origin,\n    } = ownProps;\n\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n    } = global.mediaViewer;\n\n    if (origin === MediaViewerOrigin.SearchResult) {\n      if (!(chatId && messageId)) {\n        return { volume, isMuted, playbackRate };\n      }\n\n      const message = selectChatMessage(global, chatId, messageId);\n      if (!message) {\n        return { volume, isMuted, playbackRate };\n      }\n\n      return {\n        chatId,\n        messageId,\n        senderId: message.senderId,\n        origin,\n        message,\n        isProtected: selectIsMessageProtected(global, message),\n        volume,\n        isMuted,\n        playbackRate,\n      };\n    }\n\n    if (avatarOwnerId) {\n      const sender = selectUser(global, avatarOwnerId) || selectChat(global, avatarOwnerId);\n\n      return {\n        messageId: -1,\n        senderId: avatarOwnerId,\n        avatarOwner: sender,\n        profilePhotoIndex: profilePhotoIndex || 0,\n        origin,\n        volume,\n        isMuted,\n        playbackRate,\n      };\n    }\n\n    if (!(chatId && threadId && messageId)) {\n      return { volume, isMuted, playbackRate };\n    }\n\n    let message: ApiMessage | undefined;\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      message = selectScheduledMessage(global, chatId, messageId);\n    } else {\n      message = selectChatMessage(global, chatId, messageId);\n    }\n\n    if (!message) {\n      return { volume, isMuted, playbackRate };\n    }\n\n    return {\n      chatId,\n      threadId,\n      messageId,\n      senderId: message.senderId,\n      origin,\n      message,\n      isProtected: selectIsMessageProtected(global, message),\n      volume,\n      isMuted,\n      playbackRate,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean) {\n  return blobUrl\n    ? (\n      <img\n        src={blobUrl}\n        alt=\"\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n        draggable={Boolean(canDrag)}\n      />\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, IOS_SCREEN_EDGE_THRESHOLD } from '../../util/captureEvents';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/environment';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useTimeout from '../../hooks/useTimeout';\nimport useWindowSize from '../../hooks/useWindowSize';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  messageId?: number;\n  getMessageId: (fromId?: number, direction?: number) => number | undefined;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  selectMessage: (id?: number) => void;\n  chatId?: string;\n  threadId?: number;\n  isActive?: boolean;\n  avatarOwnerId?: string;\n  profilePhotoIndex?: number;\n  origin?: MediaViewerOrigin;\n  animationLevel: 0 | 1 | 2;\n  onClose: () => void;\n  hasFooter?: boolean;\n  onFooterClick: () => void;\n  zoomLevelChange: number;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_MESSAGE = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  messageId,\n  getMessageId,\n  selectMessage,\n  isVideo,\n  isGif,\n  isPhoto,\n  isOpen,\n  isActive,\n  hasFooter,\n  zoomLevelChange,\n  animationLevel,\n  ...rest\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  const transformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isActiveRef = useRef(true);\n  const isReleasedRef = useRef(false);\n  const [activeMessageId, setActiveMessageId] = useState<number | undefined>(messageId);\n  const prevZoomLevelChange = usePrevious(zoomLevelChange);\n  const hasZoomChanged = prevZoomLevelChange !== undefined && prevZoomLevelChange !== zoomLevelChange;\n  const forceUpdate = useForceUpdate();\n  const [isFooterHidden, setIsFooterHidden] = useState(true);\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const { onClose } = rest;\n\n  const lang = useLang();\n\n  const setTransform = useCallback((value: Transform) => {\n    transformRef.current = value;\n    forceUpdate();\n  }, [forceUpdate]);\n\n  const selectMessageDebounced = useDebouncedCallback(selectMessage, [], DEBOUNCE_MESSAGE, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n  const setIsActiveDebounced = useDebouncedCallback((value: boolean) => {\n    isActiveRef.current = value;\n    forceUpdate();\n  }, [forceUpdate], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = isGif && !IS_IOS;\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleToggleFooterVisibility = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setIsFooterHidden(!isFooterHidden);\n  }, [clickXThreshold, isFooterHidden, windowHeight, windowWidth]);\n\n  useTimeout(() => setIsFooterHidden(false), ANIMATION_DURATION - 150);\n\n  useEffect(() => {\n    if (!containerRef.current || !activeMessageId) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let initialContentRect: DOMRect;\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const mId = getMessageId(activeMessageId, direction);\n      if (mId) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        transformRef.current.x += offset;\n        isActiveRef.current = false;\n        setActiveMessageId(mId);\n        selectMessageDebounced(mId);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (animationLevel === 0) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: transformRef.current.x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      if (transformRef.current.scale !== 1) return [false, false];\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (transformRef.current.scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ):[Transform, boolean, boolean] => {\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const absX = Math.abs(transformRef.current.x);\n      const absY = Math.abs(transformRef.current.y);\n      const {\n        scale,\n        x,\n        y,\n      } = transformRef.current;\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const mId = getMessageId(activeMessageId, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (mId && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        transformRef.current.x += offset;\n        setActiveMessageId(mId);\n        selectMessageDebounced(mId);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: transformRef.current.x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: transformRef.current.scale,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (transformRef.current.scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        const { x, y, scale } = transformRef.current;\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRect = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const {\n          scale,\n          x,\n          y,\n        } = transformRef.current;\n        const threshold = 10;\n        const tolerance = 1.5;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > threshold || absOffsetX / absOffsetY > tolerance) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            isActiveRef.current = false;\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > threshold || absOffsetY / absOffsetX > tolerance) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [\n    onClose,\n    setTransform,\n    getMessageId,\n    activeMessageId,\n    windowWidth,\n    windowHeight,\n    clickXThreshold,\n    shouldCloseOnVideo,\n    selectMessageDebounced,\n    setIsActiveDebounced,\n    clearSwipeDirectionDebounced,\n    animationLevel,\n    setIsMouseDown,\n  ]);\n\n  useEffect(() => {\n    if (!containerRef.current || !hasZoomChanged) return;\n    const { scale } = transformRef.current;\n    const dir = zoomLevelChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.5;\n    const maxZoom = MAX_ZOOM * 3;\n    const steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [zoomLevelChange, hasZoomChanged]);\n\n  if (!activeMessageId) return undefined;\n\n  const nextMessageId = getMessageId(activeMessageId, 1);\n  const previousMessageId = getMessageId(activeMessageId, -1);\n  const offsetX = transformRef.current.x;\n  const offsetY = transformRef.current.y;\n  const { scale } = transformRef.current;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      {previousMessageId && scale === 1 && !isResizing && (\n        <div className=\"MediaViewerSlide\" style={getAnimationStyle(-windowWidth + offsetX - SLIDES_GAP)}>\n          <MediaViewerContent\n            /* eslint-disable-next-line react/jsx-props-no-spreading */\n            {...rest}\n            animationLevel={animationLevel}\n            isFooterHidden={isFooterHidden}\n            messageId={previousMessageId}\n          />\n        </div>\n      )}\n      {activeMessageId && (\n        <div\n          className={buildClassName(\n            'MediaViewerSlide',\n            isActive && 'MediaViewerSlide--active',\n            isMouseDown && scale > 1 && 'MediaViewerSlide--moving',\n          )}\n          onClick={handleToggleFooterVisibility}\n          ref={activeSlideRef}\n          style={getAnimationStyle(offsetX, offsetY, scale)}\n        >\n          <MediaViewerContent\n            /* eslint-disable-next-line react/jsx-props-no-spreading */\n            {...rest}\n            messageId={activeMessageId}\n            animationLevel={animationLevel}\n            isActive={isActive && isActiveRef.current}\n            setIsFooterHidden={setIsFooterHidden}\n            isFooterHidden={isFooterHidden || scale !== 1}\n          />\n        </div>\n      )}\n      {nextMessageId && scale === 1 && !isResizing && (\n        <div className=\"MediaViewerSlide\" style={getAnimationStyle(windowWidth + offsetX + SLIDES_GAP)}>\n          <MediaViewerContent\n            /* eslint-disable-next-line react/jsx-props-no-spreading */\n            {...rest}\n            animationLevel={animationLevel}\n            isFooterHidden={isFooterHidden}\n            messageId={nextMessageId}\n          />\n        </div>\n      )}\n      {previousMessageId && scale === 1 && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {nextMessageId && scale === 1 && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getAnimationStyle(x = 0, y = 0, scale = 1) {\n  return `transform: translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)});`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage, ApiUser } from '../../api/types';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../util/environment';\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport { formatMediaDateTime } from '../../util/dateFormat';\nimport renderText from '../common/helpers/renderText';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectSender,\n  selectUser,\n} from '../../global/selectors';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  messageId?: number;\n  isAvatar?: boolean;\n};\n\ntype StateProps = {\n  sender?: ApiUser | ApiChat;\n  message?: ApiMessage;\n};\n\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  messageId,\n  sender,\n  isAvatar,\n  message,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const handleFocusMessage = useCallback(() => {\n    closeMediaViewer();\n\n    if (IS_SINGLE_COLUMN_LAYOUT) {\n      setTimeout(() => {\n        toggleChatInfo(false, { forceSyncOnIOs: true });\n        focusMessage({ chatId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, messageId });\n    }\n  }, [chatId, focusMessage, toggleChatInfo, messageId, closeMediaViewer]);\n\n  const lang = useLang();\n\n  if (!sender || (!message && !isAvatar)) {\n    return undefined;\n  }\n\n  const senderTitle = getSenderTitle(lang, sender);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      {isUserId(sender.id) ? (\n        <Avatar key={sender.id} size=\"medium\" user={sender as ApiUser} />\n      ) : (\n        <Avatar key={sender.id} size=\"medium\" chat={sender as ApiChat} />\n      )}\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {isAvatar\n            ? lang('lng_mediaview_profile_photo')\n            : formatMediaDateTime(lang, message!.date * 1000, true)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { chatId, messageId, isAvatar }): StateProps => {\n    if (isAvatar && chatId) {\n      return {\n        sender: isUserId(chatId) ? selectUser(global, chatId) : selectChat(global, chatId),\n      };\n    }\n\n    if (!messageId || !chatId) {\n      return {};\n    }\n\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      message,\n      sender: message && selectSender(global, message),\n    };\n  },\n)(SenderInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type {\n  ApiChat, ApiDimensions, ApiMessage, ApiUser,\n} from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { getActions, withGlobal } from '../../global';\nimport {\n  getChatAvatarHash,\n  getChatMediaMessageIds,\n  getMessageDocument,\n  getMessageFileName,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoFullDimensions, getVideoAvatarMediaHash,\n  getVideoDimensions,\n  isMessageDocumentPhoto,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectChatMessages,\n  selectCurrentMediaSearch,\n  selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingIds,\n  selectScheduledMessage,\n  selectScheduledMessages,\n  selectUser,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../util/environment';\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  AVATAR_FULL_DIMENSIONS, MEDIA_VIEWER_MEDIA_QUERY, VIDEO_AVATAR_FULL_DIMENSIONS,\n} from '../common/helpers/mediaDimensions';\nimport windowSize from '../../util/windowSize';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\n\nimport useBlurSync from '../../hooks/useBlurSync';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: number;\n  messageId?: number;\n  senderId?: string;\n  isChatWithSelf?: boolean;\n  origin?: MediaViewerOrigin;\n  avatarOwner?: ApiChat | ApiUser;\n  profilePhotoIndex?: number;\n  message?: ApiMessage;\n  chatMessages?: Record<number, ApiMessage>;\n  collectionIds?: number[];\n  animationLevel: 0 | 1 | 2;\n};\n\nconst ANIMATION_DURATION = 350;\n\nconst MediaViewer: FC<StateProps> = ({\n  chatId,\n  threadId,\n  messageId,\n  senderId,\n  isChatWithSelf,\n  origin,\n  avatarOwner,\n  profilePhotoIndex,\n  message,\n  chatMessages,\n  collectionIds,\n  animationLevel,\n}) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || messageId);\n\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  /* Content */\n  const photo = message ? getMessagePhoto(message) : undefined;\n  const video = message ? getMessageVideo(message) : undefined;\n  const webPagePhoto = message ? getMessageWebPagePhoto(message) : undefined;\n  const webPageVideo = message ? getMessageWebPageVideo(message) : undefined;\n  const isDocumentPhoto = message ? isMessageDocumentPhoto(message) : false;\n  const isDocumentVideo = message ? isMessageDocumentVideo(message) : false;\n  const isVideo = Boolean(video || webPageVideo || isDocumentVideo);\n  const { isGif } = video || webPageVideo || {};\n  const isPhoto = Boolean(!isVideo && (photo || webPagePhoto || isDocumentPhoto));\n  const isAvatar = Boolean(avatarOwner);\n\n  /* Navigation */\n  const singleMessageId = webPagePhoto || webPageVideo ? messageId : undefined;\n\n  const messageIds = useMemo(() => {\n    return singleMessageId\n      ? [singleMessageId]\n      : getChatMediaMessageIds(chatMessages || {}, collectionIds || [], isFromSharedMedia);\n  }, [singleMessageId, chatMessages, collectionIds, isFromSharedMedia]);\n\n  const selectedMediaMessageIndex = messageId ? messageIds.indexOf(messageId) : -1;\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const prevSenderId = usePrevious<string | undefined>(senderId);\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || !animationKey.current)) {\n    animationKey.current = selectedMediaMessageIndex;\n  }\n  const headerAnimation = animationLevel === 2 ? 'slide-fade' : 'none';\n  const isGhostAnimation = animationLevel === 2;\n\n  /* Controls */\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [zoomLevelChange, setZoomLevelChange] = useState<number>(1);\n\n  /* Media data */\n  function getMediaHash(isFull?: boolean) {\n    if (isAvatar && profilePhotoIndex !== undefined) {\n      const { photos } = avatarOwner!;\n      const avatarPhoto = photos && photos[profilePhotoIndex];\n      return avatarPhoto\n        // Video for avatar should be used only for full size\n        ? (avatarPhoto.isVideo && isFull ? getVideoAvatarMediaHash(avatarPhoto) : `photo${avatarPhoto.id}?size=c`)\n        : getChatAvatarHash(avatarOwner!, isFull ? 'big' : 'normal');\n    }\n\n    return message && getMessageMediaHash(message, isFull ? 'viewerFull' : 'viewerPreview');\n  }\n\n  const pictogramBlobUrl = useMedia(\n    message && (isFromSharedMedia || isFromSearch) && getMessageMediaHash(message, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    undefined,\n    isGhostAnimation && ANIMATION_DURATION,\n  );\n  const previewMediaHash = getMediaHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    undefined,\n    isGhostAnimation && ANIMATION_DURATION,\n  );\n  const { mediaData: fullMediaBlobUrl } = useMediaWithLoadProgress(\n    getMediaHash(true),\n    undefined,\n    message && getMessageMediaFormat(message, 'viewerFull'),\n    undefined,\n    isGhostAnimation && ANIMATION_DURATION,\n  );\n  const avatarPhoto = avatarOwner?.photos?.[profilePhotoIndex!];\n  const isVideoAvatar = Boolean(isAvatar && avatarPhoto?.isVideo);\n  const canReport = !!avatarPhoto && profilePhotoIndex! > 0 && !isChatWithSelf;\n\n  const localBlobUrl = (photo || video) ? (photo || video)!.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && message && getMessageMediaThumbDataUri(message));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n\n  const fileName = message\n    ? getMessageFileName(message)\n    : isAvatar\n      ? `avatar${avatarOwner!.id}-${profilePhotoIndex}.${avatarOwner?.hasVideoAvatar ? 'mp4' : 'jpg'}`\n      : undefined;\n\n  let dimensions!: ApiDimensions;\n  if (message) {\n    if (isDocumentPhoto || isDocumentVideo) {\n      dimensions = getMessageDocument(message)!.mediaSize!;\n    } else if (photo || webPagePhoto) {\n      dimensions = getPhotoFullDimensions((photo || webPagePhoto)!)!;\n    } else if (video || webPageVideo) {\n      dimensions = getVideoDimensions((video || webPageVideo)!)!;\n    }\n  } else {\n    dimensions = isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n  }\n\n  useEffect(() => {\n    if (!IS_SINGLE_COLUMN_LAYOUT) {\n      return;\n    }\n\n    document.body.classList.toggle('is-media-viewer-open', isOpen);\n  }, [isOpen]);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    if (typeof mql.addEventListener === 'function') {\n      mql.addEventListener('change', forceUpdate);\n    } else if (typeof mql.addListener === 'function') {\n      mql.addListener(forceUpdate);\n    }\n\n    return () => {\n      if (typeof mql.removeEventListener === 'function') {\n        mql.removeEventListener('change', forceUpdate);\n      } else if (typeof mql.removeListener === 'function') {\n        mql.removeListener(forceUpdate);\n      }\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePrevious<ApiMessage | undefined>(message);\n  const prevOrigin = usePrevious(origin);\n  const prevAvatarOwner = usePrevious<ApiChat | ApiUser | undefined>(avatarOwner);\n  const prevBestImageData = usePrevious(bestImageData);\n  const textParts = message ? renderMessageText(message) : undefined;\n  const hasFooter = Boolean(textParts);\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && !prevMessage && !prevAvatarOwner) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions, isVideo, message);\n    }\n\n    if (isGhostAnimation && !isOpen && (prevMessage || prevAvatarOwner)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage || undefined);\n    }\n  }, [\n    isGhostAnimation, isOpen, origin, prevOrigin, message, prevMessage, prevAvatarOwner,\n    bestImageData, prevBestImageData, dimensions, isVideo, hasFooter,\n  ]);\n\n  const close = useCallback(() => {\n    closeMediaViewer();\n  }, [closeMediaViewer]);\n\n  const handleFooterClick = useCallback(() => {\n    close();\n\n    if (IS_SINGLE_COLUMN_LAYOUT) {\n      setTimeout(() => {\n        toggleChatInfo(false, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId });\n    }\n  }, [close, chatId, threadId, focusMessage, toggleChatInfo, messageId]);\n\n  const handleForward = useCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId,\n      messageIds: [messageId],\n    });\n  }, [openForwardMenu, chatId, messageId]);\n\n  const selectMessage = useCallback((id?: number) => openMediaViewer({\n    chatId,\n    threadId,\n    messageId: id,\n    origin,\n  }, {\n    forceOnHeavyAnimation: true,\n  }), [chatId, openMediaViewer, origin, threadId]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    close();\n  }) : undefined), [close, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  // Prevent refresh when rotating device to watch a video\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    windowSize.disableRefresh();\n\n    return () => {\n      windowSize.enableRefresh();\n    };\n  }, [isOpen]);\n\n  const getMessageId = useCallback((fromId?: number, direction?: number): number | undefined => {\n    if (!fromId) return undefined;\n    const index = messageIds.indexOf(fromId);\n    if ((direction === -1 && index > 0) || (direction === 1 && index < messageIds.length - 1)) {\n      return messageIds[index + direction];\n    }\n    return undefined;\n  }, [messageIds]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: closeMediaViewer,\n  });\n\n  function renderSenderInfo() {\n    return isAvatar ? (\n      <SenderInfo\n        key={avatarOwner!.id}\n        chatId={avatarOwner!.id}\n        isAvatar\n      />\n    ) : (\n      <SenderInfo\n        key={messageId}\n        chatId={chatId}\n        messageId={messageId}\n      />\n    );\n  }\n\n  return (\n    <ShowTransition id=\"MediaViewer\" isOpen={isOpen}>\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {IS_SINGLE_COLUMN_LAYOUT && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={close}\n          >\n            <i className=\"icon-close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          {renderSenderInfo()}\n        </Transition>\n        <MediaViewerActions\n          mediaData={fullMediaBlobUrl || previewBlobUrl}\n          isVideo={isVideo}\n          message={message}\n          fileName={fileName}\n          canReport={canReport}\n          onReport={openReportModal}\n          onCloseMediaViewer={close}\n          onForward={handleForward}\n          zoomLevelChange={zoomLevelChange}\n          setZoomLevelChange={setZoomLevelChange}\n          isAvatar={isAvatar}\n        />\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          subject=\"media\"\n          photo={avatarPhoto}\n          chatId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        messageId={messageId}\n        getMessageId={getMessageId}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner && avatarOwner.id}\n        profilePhotoIndex={profilePhotoIndex}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        zoomLevelChange={zoomLevelChange}\n        isActive\n        isVideo={isVideo}\n        animationLevel={animationLevel}\n        onClose={close}\n        selectMessage={selectMessage}\n        onFooterClick={handleFooterClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      chatId,\n      threadId,\n      messageId,\n      avatarOwnerId,\n      profilePhotoIndex,\n      origin,\n    } = global.mediaViewer;\n    const {\n      animationLevel,\n    } = global.settings.byKey;\n\n    let isChatWithSelf = !!chatId && selectIsChatWithSelf(global, chatId);\n\n    if (origin === MediaViewerOrigin.SearchResult) {\n      if (!(chatId && messageId)) {\n        return { animationLevel };\n      }\n\n      const message = selectChatMessage(global, chatId, messageId);\n      if (!message) {\n        return { animationLevel };\n      }\n\n      return {\n        chatId,\n        messageId,\n        senderId: message.senderId,\n        isChatWithSelf,\n        origin,\n        message,\n        animationLevel,\n      };\n    }\n\n    if (avatarOwnerId) {\n      const sender = selectUser(global, avatarOwnerId) || selectChat(global, avatarOwnerId);\n      isChatWithSelf = selectIsChatWithSelf(global, avatarOwnerId);\n\n      return {\n        messageId: -1,\n        senderId: avatarOwnerId,\n        avatarOwner: sender,\n        isChatWithSelf,\n        profilePhotoIndex: profilePhotoIndex || 0,\n        animationLevel,\n        origin,\n      };\n    }\n\n    if (!(chatId && threadId && messageId)) {\n      return { animationLevel };\n    }\n\n    let message: ApiMessage | undefined;\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      message = selectScheduledMessage(global, chatId, messageId);\n    } else {\n      message = selectChatMessage(global, chatId, messageId);\n    }\n\n    if (!message) {\n      return { animationLevel };\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      chatMessages = selectScheduledMessages(global, chatId);\n    } else {\n      chatMessages = selectChatMessages(global, chatId);\n    }\n    let collectionIds: number[] | undefined;\n\n    if (origin === MediaViewerOrigin.Inline || origin === MediaViewerOrigin.Album) {\n      collectionIds = selectOutlyingIds(global, chatId, threadId) || selectListedIds(global, chatId, threadId);\n    } else if (origin === MediaViewerOrigin.SharedMedia) {\n      const currentSearch = selectCurrentMediaSearch(global);\n      const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n      collectionIds = foundIds;\n    }\n\n    return {\n      chatId,\n      threadId,\n      messageId,\n      senderId: message.senderId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      collectionIds,\n      animationLevel,\n    };\n  },\n)(MediaViewer));\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef, useCallback } from '../../lib/teact/teact';\n\nimport { CHAT_HEIGHT_PX } from '../../config';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\nimport { isUserId } from '../../global/helpers';\n\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\nimport InputText from '../ui/InputText';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport GroupChatInfo from './GroupChatInfo';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  isOpen: boolean;\n  filterRef: RefObject<HTMLInputElement>;\n  filterPlaceholder: string;\n  filter: string;\n  loadMore?: NoneToVoidFunction;\n  onFilterChange: (filter: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  filterRef,\n  filter,\n  filterPlaceholder,\n  loadMore,\n  onFilterChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useLang();\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(filter));\n\n  const resetFilter = useCallback(() => {\n    onFilterChange('');\n  }, [onFilterChange]);\n  useInputFocusOnOpen(filterRef, isOpen, resetFilter);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onFilterChange(e.currentTarget.value);\n  }, [onFilterChange]);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      onSelectChatOrUser(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const modalHeader = (\n    <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        ariaLabel={lang('Close')}\n        onClick={onClose}\n      >\n        <i className=\"icon-close\" />\n      </Button>\n      <InputText\n        ref={filterRef}\n        value={filter}\n        onChange={handleFilterChange}\n        onKeyDown={handleKeyDown}\n        placeholder={filterPlaceholder}\n      />\n    </div>\n  );\n\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"ChatOrUserPicker\"\n      header={modalHeader}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          ref={containerRef}\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          withAbsolutePositioning\n          maxHeight={chatOrUserIds!.length * CHAT_HEIGHT_PX}\n          onKeyDown={handleKeyDown}\n        >\n          {viewportIds.map((id, i) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable force-rounded-corners\"\n              style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onSelectChatOrUser(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo status={id === currentUserId ? lang('SavedMessagesInfo') : undefined} userId={id} />\n              ) : (\n                <GroupChatInfo chatId={id} />\n              )}\n            </ListItem>\n          ))}\n        </InfiniteScroll>\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n      ) : (\n        <Loading />\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useMemo, useState, memo, useRef, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  getCanPostInChat,\n  sortChatIds,\n} from '../../global/helpers';\nimport { unique } from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\n\nimport ChatOrUserPicker from '../common/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  chatsById: Record<string, ApiChat>;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n  currentUserId?: string;\n  switchBotInline?: GlobalState['switchBotInline'];\n};\n\nconst ForwardPicker: FC<OwnProps & StateProps> = ({\n  chatsById,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  currentUserId,\n  isOpen,\n  switchBotInline,\n}) => {\n  const {\n    setForwardChatId,\n    exitForwardMode,\n    openChatWithText,\n    resetSwitchBotInline,\n  } = getActions();\n\n  const lang = useLang();\n  const [filter, setFilter] = useState('');\n  // eslint-disable-next-line no-null/no-null\n  const filterRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const chatAndContactIds = useMemo(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    const chatIds = [\n      ...(activeListIds || []),\n      ...((filter && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = chatsById[id];\n\n      return chat && getCanPostInChat(chat, MAIN_THREAD_ID);\n    });\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n\n    return sortChatIds(unique([\n      ...filterChatsByName(lang, chatIds, chatsById, filter, currentUserId),\n      ...(contactIds ? filterUsersByName(contactIds, usersById, filter) : []),\n    ]), chatsById, undefined, priorityIds);\n  }, [activeListIds, archivedListIds, chatsById, contactIds, currentUserId, filter, isOpen, lang, pinnedIds]);\n\n  const handleSelectUser = useCallback((userId: string) => {\n    if (switchBotInline) {\n      const text = `@${switchBotInline.botUsername} ${switchBotInline.query}`;\n      openChatWithText({ chatId: userId, text });\n      resetSwitchBotInline();\n    } else {\n      setForwardChatId({ id: userId });\n    }\n  }, [openChatWithText, resetSwitchBotInline, setForwardChatId, switchBotInline]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n    resetSwitchBotInline();\n  }, [exitForwardMode, resetSwitchBotInline]);\n\n  const renderingChatAndContactIds = useCurrentOrPrev(chatAndContactIds, true)!;\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <ChatOrUserPicker\n      currentUserId={currentUserId}\n      isOpen={isOpen}\n      chatOrUserIds={renderingChatAndContactIds}\n      filterRef={filterRef}\n      filterPlaceholder={lang('ForwardTo')}\n      filter={filter}\n      onFilterChange={setFilter}\n      onSelectChatOrUser={handleSelectUser}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsById,\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n      switchBotInline,\n    } = global;\n\n    return {\n      chatsById,\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n      switchBotInline,\n    };\n  },\n)(ForwardPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError, ApiInviteInfo, ApiPhoto,\n} from '../../api/types';\n\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport Avatar from '../common/Avatar';\n\nimport './Dialogs.scss';\n\ntype StateProps = {\n  dialogs: (ApiError | ApiInviteInfo)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs }) => {\n  const {\n    dismissDialog,\n    acceptInviteConfirmation,\n    sendMessage,\n    showNotification,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  function renderInviteHeader(title: string, photo?: ApiPhoto) {\n    return (\n      <div className=\"modal-header\">\n        {photo && <Avatar size=\"small\" photo={photo} />}\n        <div className=\"modal-title\">\n          {renderText(title)}\n        </div>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={closeModal}>\n          <i className=\"icon-close\" />\n        </Button>\n      </div>\n    );\n  }\n\n  const renderInvite = (invite: ApiInviteInfo) => {\n    const {\n      hash, title, about, participantsCount, isChannel, photo, isRequestNeeded,\n    } = invite;\n\n    const handleJoinClick = () => {\n      acceptInviteConfirmation({\n        hash,\n      });\n      if (isRequestNeeded) {\n        showNotification({\n          message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n        });\n      }\n      closeModal();\n    };\n\n    const participantsText = isChannel\n      ? lang('Subscribers', participantsCount, 'i')\n      : lang('Members', participantsCount, 'i');\n\n    const joinText = isChannel ? lang('ChannelJoin') : lang('JoinGroup');\n    const requestToJoinText = isChannel\n      ? lang('MemberRequests.RequestToJoinChannel') : lang('MemberRequests.RequestToJoinGroup');\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"error\"\n        header={renderInviteHeader(title, photo)}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {participantsCount !== undefined && <p className=\"modal-help\">{participantsText}</p>}\n        {about && <p className=\"modal-about\">{renderText(about, ['br'])}</p>}\n        {isRequestNeeded && (\n          <p className=\"modal-help\">\n            {isChannel\n              ? lang('MemberRequests.RequestToJoinDescriptionChannel')\n              : lang('MemberRequests.RequestToJoinDescriptionGroup')}\n          </p>\n        )}\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleJoinClick}\n        >\n          {isRequestNeeded ? requestToJoinText : joinText}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={closeModal}>{lang('Cancel')}</Button>\n      </Modal>\n    );\n  };\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      sendMessage({\n        contact: pick(contactRequest, ['firstName', 'lastName', 'phoneNumber']),\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error) : renderText(error.message!, ['emoji', 'br'])}\n        <div>\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiInviteInfo | ApiContact) => {\n    if ('hash' in dialog) {\n      return renderInvite(dialog);\n    }\n\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return (\n    <div id=\"Dialogs\">\n      {Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1])}\n    </div>\n  );\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['dialogs']),\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  const { dismissNotification } = getActions();\n\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map(({\n        message, className, localId, action, actionText, title,\n      }) => (\n        <Notification\n          title={title ? renderText(title, ['emoji', 'br', 'links', 'simple_markdown']) : undefined}\n          action={action}\n          actionText={actionText}\n          className={className}\n          message={renderText(message, ['emoji', 'br', 'links', 'simple_markdown'])}\n          // eslint-disable-next-line react/jsx-no-bind\n          onDismiss={() => dismissNotification({ localId })}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/ensureProtocol';\nimport renderText from '../common/helpers/renderText';\nimport useLang from '../../hooks/useLang';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useLang();\n\n  const handleOpen = useCallback(() => {\n    window.open(ensureProtocol(url), '_blank', 'noopener');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlAlert2', renderingUrl), ['links'])}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkbox\":\"src-components-main-UrlAuthModal-module__checkbox\"};","import React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ensureProtocol } from '../../util/ensureProtocol';\nimport renderText from '../common/helpers/renderText';\nimport { getUserFullName } from '../../global/helpers';\n\nimport useLang from '../../hooks/useLang';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Checkbox from '../ui/Checkbox';\n\nimport styles from './UrlAuthModal.module.scss';\n\nexport type OwnProps = {\n  urlAuth?: GlobalState['urlAuth'];\n  currentUser?: ApiUser;\n};\n\nconst UrlAuthModal: FC<OwnProps> = ({\n  urlAuth, currentUser,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(urlAuth, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useLang();\n\n  const handleOpen = useCallback(() => {\n    if (urlAuth?.url && isLoginChecked) {\n      const acceptAction = urlAuth.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else {\n      window.open(ensureProtocol(currentAuth?.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    urlAuth, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(urlAuth?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, getUserFullName(currentUser)]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(UrlAuthModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useState, useEffect, useMemo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatTime, formatDateToString, getDayStart } from '../../util/dateFormat';\nimport type { LangFn } from '../../hooks/useLang';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useFlag from '../../hooks/useFlag';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = 2147483647 * 1000; // API has int for dates\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePrevious(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused, unmarkTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    onSubmit(selectedDate);\n  }, [onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n          onBlur={unmarkTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n          onBlur={unmarkTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <i className=\"icon-close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <i className=\"icon-previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <i className=\"icon-next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <Button onClick={handleSubmit}>\n          {submitLabel}\n        </Button>\n        {secondButtonLabel && (\n          <Button onClick={onSecondButtonClick} isText>\n            {secondButtonLabel}\n          </Button>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: LangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport useLang from '../../hooks/useLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.valueOf() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: global.historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\n\nimport Modal from '../ui/Modal';\nimport Avatar from '../common/Avatar';\nimport InputText from '../ui/InputText';\nimport Checkbox from '../ui/Checkbox';\nimport Button from '../ui/Button';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n  serverTimeOffset?: number;\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n  serverTimeOffset,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar size=\"jumbo\" user={renderingUser} text={`${firstName} ${lastName}`} />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus, serverTimeOffset!)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    return {\n      user: userId ? selectUser(global, userId) : undefined,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      serverTimeOffset: global.serverTimeOffset,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import useWindowSize from '../../../hooks/useWindowSize';\nimport { useCallback, useEffect, useRef } from '../../../lib/teact/teact';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nexport type WebAppInboundEvent = {\n  eventType: 'web_app_data_send';\n  eventData: {\n    data: string;\n  };\n} | {\n  eventType: 'web_app_setup_main_button';\n  eventData: {\n    is_visible: boolean;\n    is_active: boolean;\n    text: string;\n    color: string;\n    text_color: string;\n    is_progress_visible: boolean;\n  };\n} | {\n  eventType: 'web_app_setup_back_button';\n  eventData: {\n    is_visible: boolean;\n  };\n} | {\n  eventType: 'web_app_open_link';\n  eventData: {\n    url: string;\n  };\n} | {\n  eventType: 'web_app_open_tg_link';\n  eventData: {\n    path_full: string;\n  };\n} | {\n  eventType: 'web_app_open_invoice';\n  eventData: {\n    slug: string;\n  };\n} | {\n  eventType: 'web_app_trigger_haptic_feedback';\n  eventData: {\n    type: 'impact' | 'notification' | 'selection_change';\n    impact_style?: 'light' | 'medium' | 'heavy';\n    notification_type?: 'error' | 'success' | 'warning';\n  };\n} | {\n  eventType: 'web_app_set_background_color';\n  eventData: {\n    color: string;\n  };\n} | {\n  eventType: 'web_app_set_header_color';\n  eventData: {\n    color_key: 'bg_color' | 'secondary_bg_color';\n  };\n} | {\n  eventType: 'web_app_request_viewport' | 'web_app_request_theme' | 'web_app_ready' | 'web_app_expand'\n  | 'web_app_close' | 'iframe_ready';\n  eventData: null;\n};\n\ntype WebAppOutboundEvent = {\n  eventType: 'viewport_changed';\n  eventData: {\n    height: number;\n    width?: number;\n    is_expanded?: boolean;\n  };\n} | {\n  eventType: 'theme_changed';\n  eventData: {\n    theme_params: {\n      bg_color: string;\n      text_color: string;\n      hint_color: string;\n      link_color: string;\n      button_color: string;\n      button_text_color: string;\n      secondary_bg_color: string;\n    };\n  };\n} | {\n  eventType: 'set_custom_style';\n  eventData: string;\n} | {\n  eventType: 'invoice_closed';\n  eventData: {\n    slug: string;\n    status: 'paid' | 'cancelled' | 'pending' | 'failed';\n  };\n} | {\n  eventType: 'main_button_pressed' | 'back_button_pressed' | 'settings_button_pressed';\n};\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst useWebAppFrame = (isOpen: boolean, isSimpleView: boolean, onEvent: (event: WebAppInboundEvent) => void) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLIFrameElement>(null);\n  const ignoreEventsRef = useRef<boolean>(false);\n  const windowSize = useWindowSize();\n\n  const reloadFrame = useCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  }, []);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, []);\n\n  const sendViewport = useCallback(() => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n      },\n    });\n  }, [sendEvent]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      // Handle some app requests here to simplify hook usage\n      if (data.eventType === 'web_app_request_viewport') {\n        sendViewport();\n      }\n\n      if (data.eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (data.eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n      }\n\n      if (data.eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [isSimpleView, onEvent, sendCustomStyle, sendTheme, sendViewport]);\n\n  useEffect(() => {\n    if (windowSize) {\n      sendViewport();\n    }\n  }, [sendViewport, windowSize]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      ignoreEventsRef.current = false;\n    }\n  }, [isOpen, sendViewport]);\n\n  return {\n    ref, sendEvent, reloadFrame, sendViewport, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiAttachMenuBot, ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport type { ThemeKey } from '../../types';\n\nimport windowSize from '../../util/windowSize';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../util/environment';\nimport { selectCurrentChat, selectTheme, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { extractCurrentThemeParams, validateHexColor } from '../../util/themeStyle';\n\nimport useInterval from '../../hooks/useInterval';\nimport useLang from '../../hooks/useLang';\nimport useOnChange from '../../hooks/useOnChange';\nimport type { WebAppInboundEvent } from './hooks/useWebAppFrame';\nimport useWebAppFrame from './hooks/useWebAppFrame';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Spinner from '../ui/Spinner';\n\nimport './WebAppModal.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n};\n\nexport type OwnProps = {\n  webApp?: GlobalState['webApp'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachMenuBot?: ApiAttachMenuBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: GlobalState['payment']['status'];\n};\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst PROLONG_INTERVAL = 45000; // 45s\nconst ANIMATION_WAIT = 400;\nconst LINK_PREFIX = 'https://t.me/';\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  webApp,\n  chat,\n  bot,\n  attachMenuBot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n}) => {\n  const {\n    closeWebApp,\n    sendWebViewData,\n    prolongWebView,\n    toggleBotInAttachMenu,\n    openTelegramLink,\n    openChat,\n    openInvoice,\n    setWebAppPaymentSlug,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n  const [isBackButtonVisible, setIsBackButtonVisible] = useState(false);\n  const [backgroundColor, setBackgroundColor] = useState(extractCurrentThemeParams().bg_color);\n  const [headerColor, setHeaderColor] = useState(extractCurrentThemeParams().bg_color);\n  const lang = useLang();\n  const {\n    url, buttonText, queryId,\n  } = webApp || {};\n  const isOpen = Boolean(url);\n  const isSimple = !queryId;\n\n  const handleEvent = useCallback((event: WebAppInboundEvent) => {\n    const { eventType, eventData } = event;\n    if (eventType === 'web_app_close') {\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_open_invoice') {\n      setWebAppPaymentSlug({\n        slug: eventData.slug,\n      });\n      openInvoice({\n        slug: eventData.slug,\n      });\n    }\n\n    if (eventType === 'web_app_open_tg_link') {\n      const linkUrl = LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl });\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_open_link') {\n      const linkUrl = eventData.url;\n      window.open(linkUrl, '_blank', 'noreferrer');\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      setIsBackButtonVisible(eventData.is_visible);\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.bg_color;\n      setBackgroundColor(color);\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      const themeParams = extractCurrentThemeParams();\n      const key = eventData.color_key;\n      const newColor = themeParams[key];\n      const color = validateHexColor(newColor) ? newColor : themeParams.bg_color;\n      setHeaderColor(color);\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.button_color;\n      const textColor = validateHexColor(eventData.text_color) ? eventData.text_color : themeParams.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text || '',\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n  }, [bot, buttonText, closeWebApp, openInvoice, openTelegramLink, sendWebViewData, setWebAppPaymentSlug]);\n\n  const {\n    ref, reloadFrame, sendEvent, sendViewport, sendTheme,\n  } = useWebAppFrame(isOpen, isSimple, handleEvent);\n\n  const shouldShowMainButton = mainButton?.isVisible && mainButton.text.trim().length > 0;\n\n  useInterval(() => {\n    prolongWebView({\n      botId: bot!.id,\n      queryId: queryId!,\n      peerId: chat!.id,\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  const handleMainButtonClick = useCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  }, [sendEvent]);\n\n  const handleSettingsButtonClick = useCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  }, [sendEvent]);\n\n  const handleRefreshClick = useCallback(() => {\n    reloadFrame(webApp!.url);\n  }, [reloadFrame, webApp]);\n\n  // Notify view that height changed\n  useOnChange(() => {\n    setTimeout(() => {\n      sendViewport();\n    }, ANIMATION_WAIT);\n  }, [mainButton?.isVisible, sendViewport]);\n\n  // Notify view that theme changed\n  useOnChange(() => {\n    setTimeout(() => {\n      sendTheme();\n    }, ANIMATION_WAIT);\n  }, [theme, sendTheme]);\n\n  // Prevent refresh when rotating device\n  useEffect(() => {\n    if (!isOpen) return undefined;\n    windowSize.disableRefresh();\n\n    return () => {\n      windowSize.enableRefresh();\n    };\n  }, [isOpen]);\n\n  useOnChange(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (webApp?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: webApp.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, setWebAppPaymentSlug, webApp] as const);\n\n  const handleToggleClick = useCallback(() => {\n    toggleBotInAttachMenu({\n      botId: bot!.id,\n      isEnabled: !attachMenuBot,\n    });\n  }, [bot, attachMenuBot, toggleBotInAttachMenu]);\n\n  const handleBackClick = useCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      closeWebApp();\n    }\n  }, [closeWebApp, isBackButtonVisible, sendEvent]);\n\n  const openBotChat = useCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n    closeWebApp();\n  }, [bot, closeWebApp, openChat]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!IS_SINGLE_COLUMN_LAYOUT}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon-more\" />\n      </Button>\n    );\n  }, []);\n\n  const backButtonClassName = buildClassName(\n    'animated-close-icon',\n    isBackButtonVisible && 'state-back',\n  );\n\n  const header = useMemo(() => {\n    return (\n      <div className=\"modal-header\" style={`background-color: ${headerColor}`}>\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{bot?.firstName}</div>\n        <DropdownMenu\n          className=\"web-app-more-menu\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          {chat && bot && chat.id !== bot.id && (\n            <MenuItem icon=\"bots\" onClick={openBotChat}>{lang('BotWebViewOpenBot')}</MenuItem>\n          )}\n          <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{lang('WebApp.ReloadPage')}</MenuItem>\n          {bot?.isAttachMenuBot && (\n            <MenuItem\n              icon={attachMenuBot ? 'stop' : 'install'}\n              onClick={handleToggleClick}\n              destructive={Boolean(attachMenuBot)}\n            >\n              {lang(attachMenuBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n            </MenuItem>\n          )}\n          {attachMenuBot?.hasSettings && (\n            <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n              {lang('Settings')}\n            </MenuItem>\n          )}\n        </DropdownMenu>\n      </div>\n    );\n  }, [\n    lang, handleBackClick, bot, MoreMenuButton, chat, openBotChat, handleRefreshClick, attachMenuBot,\n    handleToggleClick, handleSettingsButtonClick, isBackButtonVisible, headerColor, backButtonClassName,\n  ]);\n\n  const prevMainButtonColor = usePrevious(mainButton?.color, true);\n  const prevMainButtonTextColor = usePrevious(mainButton?.textColor, true);\n  const prevMainButtonIsActive = usePrevious(mainButton && Boolean(mainButton.isActive), true);\n  const prevMainButtonText = usePrevious(mainButton?.text, true);\n\n  const mainButtonCurrentColor = mainButton?.color || prevMainButtonColor;\n  const mainButtonCurrentTextColor = mainButton?.textColor || prevMainButtonTextColor;\n  const mainButtonCurrentIsActive = mainButton?.isActive !== undefined ? mainButton.isActive : prevMainButtonIsActive;\n  const mainButtonCurrentText = mainButton?.text || prevMainButtonText;\n\n  useEffect(() => {\n    if (!isOpen) {\n      const themeParams = extractCurrentThemeParams();\n      setMainButton(undefined);\n      setIsBackButtonVisible(false);\n      setBackgroundColor(themeParams.bg_color);\n      setHeaderColor(themeParams.bg_color);\n    }\n  }, [isOpen]);\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideButton, setShouldHideButton] = useState(true);\n\n  const buttonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (buttonChangeTimeout.current) clearTimeout(buttonChangeTimeout.current);\n    if (!shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldHideButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    } else {\n      setShouldHideButton(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowMainButton]);\n\n  return (\n    <Modal\n      className=\"WebAppModal\"\n      isOpen={isOpen}\n      onClose={closeWebApp}\n      header={header}\n      hasCloseButton\n      style={`background-color: ${backgroundColor}`}\n    >\n      {isOpen && (\n        <>\n          <iframe\n            ref={ref}\n            className={buildClassName('web-app-frame', shouldDecreaseWebFrameSize && 'with-button')}\n            src={url}\n            title={`${bot?.firstName} Web App`}\n            sandbox=\"allow-scripts allow-same-origin allow-popups allow-forms allow-modals\"\n            allow=\"camera; microphone; geolocation;\"\n            allowFullScreen\n          />\n          <Button\n            className={buildClassName(\n              'web-app-button',\n              shouldShowMainButton && 'visible',\n              shouldHideButton && 'hidden',\n            )}\n            style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n            disabled={!mainButtonCurrentIsActive}\n            onClick={handleMainButtonClick}\n          >\n            {mainButtonCurrentText}\n            {mainButton?.isProgressVisible && <Spinner color=\"white\" />}\n          </Button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { webApp }): StateProps => {\n    const { botId } = webApp || {};\n    const attachMenuBot = botId ? global.attachMenu.bots[botId] : undefined;\n    const bot = botId ? selectUser(global, botId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status } = global.payment;\n\n    return {\n      attachMenuBot,\n      bot,\n      chat,\n      theme,\n      isPaymentModalOpen,\n      paymentStatus: status,\n    };\n  },\n)(WebAppModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp';\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n  const lang = useLang();\n  // Keep props a little bit longer, to show correct text on closing animation\n  const previousBot = usePrevious(bot, false);\n  const previousType = usePrevious(type, false);\n  const currentBot = bot || previousBot;\n  const currentType = type || previousType;\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id });\n  }, [markBotTrusted, bot]);\n\n  const title = currentType === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = currentType === 'game' ? lang('BotPermissionGameAlert', getUserFullName(currentBot))\n    : lang('BotOpenPageMessage', getUserFullName(currentBot));\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelBotTrustRequest}\n      confirmHandler={handleBotTrustAccept}\n      title={title}\n      textParts={renderText(text, ['br', 'simple_markdown'])}\n    />\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n};\n\nconst BotAttachModal: FC<OwnProps> = ({\n  bot,\n}) => {\n  const { closeBotAttachRequestModal, confirmBotAttachRequest } = getActions();\n\n  const lang = useLang();\n\n  const name = bot?.firstName;\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={closeBotAttachRequestModal}\n      confirmHandler={confirmBotAttachRequest}\n      title={name}\n      textParts={lang('WebApp.AddToAttachmentText', name)}\n    />\n  );\n};\n\nexport default BotAttachModal;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  deleteFolderDialogId?: number;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  deleteFolderDialogId,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder } = getActions();\n  const lang = useLang();\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    deleteChatFolder({ id: deleteFolderDialogId });\n  }, [closeDeleteChatFolderModal, deleteChatFolder, deleteFolderDialogId]);\n\n  return (\n    <ConfirmDialog\n      isOpen={deleteFolderDialogId !== undefined}\n      onClose={closeDeleteChatFolderModal}\n      text={lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"src-components-main-premium-common-PremiumLimitsCompare-module__root\",\"floating-badge\":\"src-components-main-premium-common-PremiumLimitsCompare-module__floating-badge\",\"floatingBadge\":\"src-components-main-premium-common-PremiumLimitsCompare-module__floating-badge\",\"floating-badge-triangle\":\"src-components-main-premium-common-PremiumLimitsCompare-module__floating-badge-triangle\",\"floatingBadgeTriangle\":\"src-components-main-premium-common-PremiumLimitsCompare-module__floating-badge-triangle\",\"floating-badge-icon\":\"src-components-main-premium-common-PremiumLimitsCompare-module__floating-badge-icon\",\"floatingBadgeIcon\":\"src-components-main-premium-common-PremiumLimitsCompare-module__floating-badge-icon\",\"text\":\"src-components-main-premium-common-PremiumLimitsCompare-module__text\",\"floating-badge-value\":\"src-components-main-premium-common-PremiumLimitsCompare-module__floating-badge-value\",\"floatingBadgeValue\":\"src-components-main-premium-common-PremiumLimitsCompare-module__floating-badge-value\",\"left-text\":\"src-components-main-premium-common-PremiumLimitsCompare-module__left-text src-components-main-premium-common-PremiumLimitsCompare-module__text\",\"leftText\":\"src-components-main-premium-common-PremiumLimitsCompare-module__left-text src-components-main-premium-common-PremiumLimitsCompare-module__text\",\"right-value\":\"src-components-main-premium-common-PremiumLimitsCompare-module__right-value src-components-main-premium-common-PremiumLimitsCompare-module__text src-components-main-premium-common-PremiumLimitsCompare-module__text\",\"rightValue\":\"src-components-main-premium-common-PremiumLimitsCompare-module__right-value src-components-main-premium-common-PremiumLimitsCompare-module__text src-components-main-premium-common-PremiumLimitsCompare-module__text\",\"left-value\":\"src-components-main-premium-common-PremiumLimitsCompare-module__left-value src-components-main-premium-common-PremiumLimitsCompare-module__text\",\"leftValue\":\"src-components-main-premium-common-PremiumLimitsCompare-module__left-value src-components-main-premium-common-PremiumLimitsCompare-module__text\",\"right-text\":\"src-components-main-premium-common-PremiumLimitsCompare-module__right-text src-components-main-premium-common-PremiumLimitsCompare-module__text\",\"rightText\":\"src-components-main-premium-common-PremiumLimitsCompare-module__right-text src-components-main-premium-common-PremiumLimitsCompare-module__text\",\"line\":\"src-components-main-premium-common-PremiumLimitsCompare-module__line\",\"left\":\"src-components-main-premium-common-PremiumLimitsCompare-module__left\",\"right\":\"src-components-main-premium-common-PremiumLimitsCompare-module__right\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport useLang from '../../../../hooks/useLang';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\n// eslint-disable-next-line max-len\nconst TRIANGLE_SVG = '<svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\"/></svg>';\n\ntype OwnProps = {\n  floatingBadgeIcon?: string;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <i className={buildClassName(styles.floatingBadgeIcon, floatingBadgeIcon)} />\n          <div className={styles.floatingBadgeValue}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle} dangerouslySetInnerHTML={{ __html: TRIANGLE_SVG }} />\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"src-components-main-premium-common-PremiumLimitPreview-module__root\",\"title\":\"src-components-main-premium-common-PremiumLimitPreview-module__title\",\"description\":\"src-components-main-premium-common-PremiumLimitPreview-module__description\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"src-components-main-premium-previews-PremiumFeaturePreviewVideo-module__root\",\"wrapper\":\"src-components-main-premium-previews-PremiumFeaturePreviewVideo-module__wrapper\",\"down\":\"src-components-main-premium-previews-PremiumFeaturePreviewVideo-module__down\",\"frame\":\"src-components-main-premium-previews-PremiumFeaturePreviewVideo-module__frame\",\"video\":\"src-components-main-premium-previews-PremiumFeaturePreviewVideo-module__video\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport useMedia from '../../../../hooks/useMedia';\nimport buildClassName from '../../../../util/buildClassName';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMediaTransition from '../../../../hooks/useMediaTransition';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <video\n          className={buildClassName(\n            styles.video,\n            transitionClassNames,\n          )}\n          src={mediaData}\n          autoPlay\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"src-components-main-premium-previews-PremiumFeaturePreviewReactions-module__root\",\"sticker\":\"src-components-main-premium-previews-PremiumFeaturePreviewReactions-module__sticker\",\"effect-sticker\":\"src-components-main-premium-previews-PremiumFeaturePreviewReactions-module__effect-sticker src-components-main-premium-previews-PremiumFeaturePreviewReactions-module__sticker\",\"effectSticker\":\"src-components-main-premium-previews-PremiumFeaturePreviewReactions-module__effect-sticker src-components-main-premium-previews-PremiumFeaturePreviewReactions-module__sticker\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { ApiAvailableReaction } from '../../../../api/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\nimport useMedia from '../../../../hooks/useMedia';\nimport useInterval from '../../../../hooks/useInterval';\nimport useFlag from '../../../../hooks/useFlag';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewReactions.module.scss';\n\ntype StateProps = {\n  availableReactions: GlobalState['availableReactions'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.2;\nconst EFFECT_SIZE_MULTIPLIER = 0.6;\nconst ROTATE_INTERVAL = 3000;\nconst CLICK_DELAY = 4000;\nconst MAX_EMOJIS = 15;\n\nconst AnimatedCircleReaction: FC<{\n  size: number;\n  realIndex: number;\n  reaction: ApiAvailableReaction;\n  index: number;\n  maxLength: number;\n  handleClick: (index: number) => void;\n  isActivated: boolean;\n}> = ({\n  size, realIndex, isActivated,\n  reaction, index, maxLength, handleClick,\n}) => {\n  const mediaData = useMedia(`document${reaction.activateAnimation?.id}`);\n  const mediaDataAround = useMedia(`document${reaction.aroundAnimation?.id}`);\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n  const [isEffectEnded, markEffectEnded, unmarkEffectEnded] = useFlag(false);\n\n  const circleSize = (size - size * EMOJI_SIZE_MULTIPLIER) / 2;\n\n  const t = index / maxLength;\n  const angle = t * (Math.PI * 2);\n  const totalAngle = angle - (Math.PI / 6) * Math.cos(angle);\n  const scaleNotFull = 0.2 + (0.7 * (Math.sin(totalAngle) + 1)) / 2;\n  const scale = scaleNotFull > 0.85 ? 1 : scaleNotFull;\n\n  const x = Math.cos(totalAngle) * circleSize;\n  const y = Math.sin(totalAngle) * circleSize * 0.6;\n\n  const handleClickEmoji = useCallback(() => {\n    handleClick(realIndex);\n  }, [handleClick, realIndex]);\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n      unmarkEffectEnded();\n    }\n  }, [isActivated, animate, unmarkEffectEnded]);\n\n  return (\n    <>\n      {isActivated && !isEffectEnded && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: ${x}px; --y: ${y}px; --scale: ${scale};`}\n          onEnded={markEffectEnded}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        onClick={handleClickEmoji}\n        play={isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --scale: ${scale};`}\n        onEnded={inanimate}\n      />\n    </>\n  );\n};\nconst PremiumFeaturePreviewReactions: FC<StateProps> = ({\n  availableReactions,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isIntervalPaused, pauseInterval, unpauseInterval] = useFlag();\n  const lastUnpauseTimeout = useRef<NodeJS.Timeout>();\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedReactions = availableReactions?.filter((l) => l.isPremium)?.slice(0, MAX_EMOJIS) || [];\n\n  useInterval(() => {\n    setOffset((current) => cycleRestrict(renderedReactions.length, current + 1));\n  }, isIntervalPaused ? undefined : ROTATE_INTERVAL);\n\n  const handleClickEmoji = useCallback((i: number) => {\n    setOffset(i);\n    pauseInterval();\n    if (lastUnpauseTimeout.current) clearTimeout(lastUnpauseTimeout.current);\n    lastUnpauseTimeout.current = setTimeout(() => {\n      unpauseInterval();\n    }, CLICK_DELAY);\n  }, [pauseInterval, unpauseInterval]);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {renderedReactions.map((l, i) => {\n        return (\n          <AnimatedCircleReaction\n            size={size}\n            reaction={l}\n            realIndex={i}\n            index={(i - offset + renderedReactions.length / 4) % renderedReactions.length}\n            maxLength={renderedReactions.length}\n            handleClick={handleClickEmoji}\n            isActivated={offset === i}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      availableReactions: global.availableReactions,\n    };\n  },\n)(PremiumFeaturePreviewReactions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"src-components-common-SliderDots-module__root\",\"arrow\":\"src-components-common-SliderDots-module__arrow\",\"right\":\"src-components-common-SliderDots-module__right\",\"arrow-hidden\":\"src-components-common-SliderDots-module__arrow-hidden\",\"arrowHidden\":\"src-components-common-SliderDots-module__arrow-hidden\",\"dot\":\"src-components-common-SliderDots-module__dot\",\"medium\":\"src-components-common-SliderDots-module__medium\",\"small\":\"src-components-common-SliderDots-module__small\",\"invisible\":\"src-components-common-SliderDots-module__invisible\",\"active\":\"src-components-common-SliderDots-module__active\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './SliderDots.module.scss';\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <i className=\"icon-previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <i className=\"icon-next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { ApiSticker } from '../../../../api/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\nimport useMedia from '../../../../hooks/useMedia';\nimport useFlag from '../../../../hooks/useFlag';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: NoneToVoidFunction;\n}> = ({\n  size, realIndex,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useCallback(() => {\n    onClick(realIndex);\n  }, [onClick, realIndex]);\n\n  const handleEnded = useCallback(() => {\n    inanimate();\n    onEnded();\n  }, [inanimate, onEnded]);\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\nconst PremiumFeaturePreviewStickers: FC<StateProps> = ({\n  stickers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useCallback((i: number) => {\n    setOffset(-i);\n  }, []);\n\n  const handleEnded = useCallback(() => {\n    setTimeout(() => {\n      setOffset((current) => cycleRestrict(renderedStickers.length, current + 1));\n    }, ENDED_DELAY);\n  }, [renderedStickers.length]);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {renderedStickers?.map((l, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={l}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"src-components-main-premium-previews-PremiumFeaturePreviewStickers-module__root\",\"sticker\":\"src-components-main-premium-previews-PremiumFeaturePreviewStickers-module__sticker\",\"effect-sticker\":\"src-components-main-premium-previews-PremiumFeaturePreviewStickers-module__effect-sticker src-components-main-premium-previews-PremiumFeaturePreviewStickers-module__sticker\",\"effectSticker\":\"src-components-main-premium-previews-PremiumFeaturePreviewStickers-module__effect-sticker src-components-main-premium-previews-PremiumFeaturePreviewStickers-module__sticker\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"src-components-main-premium-PremiumFeatureModal-module__root\",\"button\":\"src-components-main-premium-PremiumFeatureModal-module__button\",\"button-premium\":\"src-components-main-premium-PremiumFeatureModal-module__button-premium\",\"buttonPremium\":\"src-components-main-premium-PremiumFeatureModal-module__button-premium\",\"button-content\":\"src-components-main-premium-PremiumFeatureModal-module__button-content\",\"buttonContent\":\"src-components-main-premium-PremiumFeatureModal-module__button-content\",\"back-button\":\"src-components-main-premium-PremiumFeatureModal-module__back-button\",\"backButton\":\"src-components-main-premium-PremiumFeatureModal-module__back-button\",\"white-back-button\":\"src-components-main-premium-PremiumFeatureModal-module__white-back-button\",\"whiteBackButton\":\"src-components-main-premium-PremiumFeatureModal-module__white-back-button\",\"content\":\"src-components-main-premium-PremiumFeatureModal-module__content\",\"frame\":\"src-components-main-premium-PremiumFeatureModal-module__frame\",\"slide\":\"src-components-main-premium-PremiumFeatureModal-module__slide\",\"limits\":\"src-components-main-premium-PremiumFeatureModal-module__limits\",\"limits-content\":\"src-components-main-premium-PremiumFeatureModal-module__limits-content\",\"limitsContent\":\"src-components-main-premium-PremiumFeatureModal-module__limits-content\",\"header\":\"src-components-main-premium-PremiumFeatureModal-module__header\",\"no-header-border\":\"src-components-main-premium-PremiumFeatureModal-module__no-header-border\",\"noHeaderBorder\":\"src-components-main-premium-PremiumFeatureModal-module__no-header-border\",\"preview\":\"src-components-main-premium-PremiumFeatureModal-module__preview\",\"title\":\"src-components-main-premium-PremiumFeatureModal-module__title\",\"description\":\"src-components-main-premium-PremiumFeatureModal-module__description\",\"footer\":\"src-components-main-premium-PremiumFeatureModal-module__footer\",\"no-footer-border\":\"src-components-main-premium-PremiumFeatureModal-module__no-footer-border\",\"noFooterBorder\":\"src-components-main-premium-PremiumFeatureModal-module__no-footer-border\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPremiumPromo } from '../../../api/types';\nimport type { ApiLimitType, GlobalState } from '../../../global/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\nimport fastSmoothScrollHorizontal from '../../../util/fastSmoothScrollHorizontal';\nimport useFlag from '../../../hooks/useFlag';\nimport renderText from '../../common/helpers/renderText';\nimport usePrevious from '../../../hooks/usePrevious';\nimport { formatCurrency } from '../../../util/formatCurrency';\n\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\nimport PremiumFeaturePreviewReactions from './previews/PremiumFeaturePreviewReactions';\nimport SliderDots from '../../common/SliderDots';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<string, string> = {\n  limits: 'PremiumPreviewLimits',\n  reactions: 'PremiumPreviewReactions',\n  stickers: 'PremiumPreviewStickers',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<string, string> = {\n  limits: 'PremiumPreviewLimitsDescription',\n  reactions: 'PremiumPreviewReactionsDescription',\n  stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n};\n\nexport const PREMIUM_FEATURE_SECTIONS = [\n  'limits',\n  'more_upload',\n  'faster_download',\n  'voice_to_text',\n  'no_ads',\n  'reactions',\n  'stickers',\n  'advanced_chat_management',\n  'profile_badge',\n  'animated_userpics',\n];\n\nconst PREMIUM_BOTTOM_VIDEOS: string[] = [\n  'faster_download',\n  'voice_to_text',\n  'no_ads',\n  'advanced_chat_management',\n  'profile_badge',\n  'animated_userpics',\n];\n\ntype ApiLimitTypeWithoutUpload = Exclude<ApiLimitType, 'uploadMaxFileparts'>;\n\nconst LIMITS_ORDER: ApiLimitTypeWithoutUpload[] = [\n  'channels',\n  'dialogFolderPinned',\n  'channelsPublic',\n  'savedGifs',\n  'stickersFaved',\n  'aboutLength',\n  'captionLength',\n  'dialogFilters',\n  'dialogFiltersChats',\n];\n\nconst LIMITS_TITLES: Record<ApiLimitTypeWithoutUpload, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeWithoutUpload, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  onBack: VoidFunction;\n  initialSection: string;\n  promo: ApiPremiumPromo;\n  onClickSubscribe: (startParam?: string) => void;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  onBack,\n  onClickSubscribe,\n  isPremium,\n  limits,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePrevious(initialSection);\n\n  function handleClick() {\n    onClickSubscribe(initialSection);\n  }\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = e.currentTarget;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n    e.currentTarget.style.setProperty('--scroll-progress', progress.toString());\n    e.currentTarget.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = e.currentTarget.querySelector(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = e.currentTarget.querySelector(`#premium_feature_preview_video_${reverseIndex}`);\n    prevElement?.classList.toggle('reverse', false);\n    reverseElement?.classList.toggle('reverse', true);\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = PREMIUM_FEATURE_SECTIONS.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    fastSmoothScrollHorizontal(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, initialSection, prevInitialSection, startScrolling, stopScrolling]);\n\n  const handleSelectSlide = useCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await fastSmoothScrollHorizontal(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  }, [startScrolling, stopScrolling]);\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, currentSlideIndex !== 0 && styles.whiteBackButton)}\n        color={currentSlideIndex === 0 ? 'translucent' : 'translucent-white'}\n        onClick={onBack}\n        ariaLabel={lang('Back')}\n      >\n        <i className=\"icon-arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {PREMIUM_FEATURE_SECTIONS.map((section, index) => {\n          if (section === 'limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {lang(PREMIUM_FEATURE_TITLES.limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={lang(LIMITS_TITLES[limit])}\n                        description={lang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n          if (section === 'reactions') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewReactions />\n                </div>\n                <h1 className={styles.title}>\n                  {lang(PREMIUM_FEATURE_TITLES.reactions)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS.reactions), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers />\n                </div>\n                <h1 className={styles.title}>\n                  {lang(PREMIUM_FEATURE_TITLES.stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS.stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {lang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        <Button\n          className={buildClassName(styles.button, !isPremium && styles.buttonPremium)}\n          isShiny={!isPremium}\n          onClick={isPremium ? onBack : handleClick}\n        >\n          {isPremium\n            ? lang('OK')\n            : lang('SubscribeToPremium', formatCurrency(Number(promo.monthlyAmount), promo.currency, lang.code))}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"src-components-main-premium-PremiumFeatureItem-module__root\",\"text\":\"src-components-main-premium-PremiumFeatureItem-module__text\",\"header\":\"src-components-main-premium-PremiumFeatureItem-module__header\",\"description\":\"src-components-main-premium-PremiumFeatureItem-module__description\",\"icon\":\"src-components-main-premium-PremiumFeatureItem-module__icon\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport renderText from '../../common/helpers/renderText';\n\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps = {\n  icon: string;\n  title: string;\n  text: string;\n  onClick: VoidFunction;\n};\n\nconst PremiumFeatureItem: FC<OwnProps> = ({\n  icon,\n  title,\n  text,\n  onClick,\n}) => {\n  return (\n    <ListItem buttonClassName={styles.root} onClick={onClick}>\n      <img src={icon} className={styles.icon} alt=\"\" />\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"src-components-main-premium-PremiumMainModal-module__root\",\"transition\":\"src-components-main-premium-PremiumMainModal-module__transition\",\"button\":\"src-components-main-premium-PremiumMainModal-module__button\",\"main\":\"src-components-main-premium-PremiumMainModal-module__main\",\"logo\":\"src-components-main-premium-PremiumMainModal-module__logo\",\"header-text\":\"src-components-main-premium-PremiumMainModal-module__header-text\",\"headerText\":\"src-components-main-premium-PremiumMainModal-module__header-text\",\"description\":\"src-components-main-premium-PremiumMainModal-module__description\",\"list\":\"src-components-main-premium-PremiumMainModal-module__list\",\"no-button\":\"src-components-main-premium-PremiumMainModal-module__no-button\",\"noButton\":\"src-components-main-premium-PremiumMainModal-module__no-button\",\"header\":\"src-components-main-premium-PremiumMainModal-module__header\",\"hidden-header\":\"src-components-main-premium-PremiumMainModal-module__hidden-header\",\"hiddenHeader\":\"src-components-main-premium-PremiumMainModal-module__hidden-header\",\"close-button\":\"src-components-main-premium-PremiumMainModal-module__close-button\",\"closeButton\":\"src-components-main-premium-PremiumMainModal-module__close-button\",\"premium-header-text\":\"src-components-main-premium-PremiumMainModal-module__premium-header-text\",\"premiumHeaderText\":\"src-components-main-premium-PremiumMainModal-module__premium-header-text\",\"footer-text\":\"src-components-main-premium-PremiumMainModal-module__footer-text\",\"footerText\":\"src-components-main-premium-PremiumMainModal-module__footer-text\",\"primary-footer-text\":\"src-components-main-premium-PremiumMainModal-module__primary-footer-text\",\"primaryFooterText\":\"src-components-main-premium-PremiumMainModal-module__primary-footer-text\",\"footer\":\"src-components-main-premium-PremiumMainModal-module__footer\"};","import React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiPremiumPromo, ApiUser } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_SECTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport buildClassName from '../../../util/buildClassName';\nimport { selectIsCurrentUserPremium, selectUser } from '../../../global/selectors';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\nimport { getUserFullName } from '../../../global/helpers';\n\nimport useLang from '../../../hooks/useLang';\nimport useOnChange from '../../../hooks/useOnChange';\n\nimport Modal from '../../ui/Modal';\nimport Button from '../../ui/Button';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport Transition from '../../ui/Transition';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\n\nimport styles from './PremiumMainModal.module.scss';\n\nconst LIMIT_ACCOUNTS = 4;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<string, string> = {\n  limits: PremiumLimits,\n  reactions: PremiumReactions,\n  stickers: PremiumStickers,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  promo?: ApiPremiumPromo;\n  isClosing?: boolean;\n  fromUser?: ApiUser;\n  initialSection?: string;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n};\n\nconst LINK_PREFIX = 'https://t.me/';\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromUser,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isClosing,\n  isSuccess,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink,\n  } = getActions();\n\n  const lang = useLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<string | undefined>(initialSection);\n\n  const handleOpen = useCallback((section: string | undefined) => {\n    return () => {\n      setCurrentSection(section);\n    };\n  }, []);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  function handleClickWithStartParam(startParam?: string) {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  }\n\n  function handleClick() {\n    handleClickWithStartParam();\n  }\n\n  const showConfetti = useCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n      });\n    }\n  }, [isOpen, requestConfetti]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useOnChange(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium]);\n\n  if (!promo) return undefined;\n\n  return (\n    <Modal\n      className={styles.root}\n      // eslint-disable-next-line react/jsx-no-bind\n      onCloseAnimationEnd={() => closePremiumModal({ isClosed: true })}\n      onClose={closePremiumModal}\n      isOpen={isOpen && !isClosing}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={lang('Close')}\n            >\n              <i className=\"icon-close\" />\n            </Button>\n            <img className={styles.logo} src={PremiumLogo} alt=\"\" />\n            <h2 className={styles.headerText}>\n              {renderText(\n                fromUser\n                  ? lang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n                  : lang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium'),\n                ['simple_markdown', 'emoji'],\n              )}\n            </h2>\n            <div className={styles.description}>\n              {renderText(\n                lang(fromUser ? 'TelegramPremiumUserDialogSubtitle'\n                  : (isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle')),\n                ['simple_markdown'],\n              )}\n            </div>\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {lang('TelegramPremium')}\n              </h2>\n            </div>\n\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {PREMIUM_FEATURE_SECTIONS.map((section) => (\n                <PremiumFeatureItem\n                  key={section}\n                  title={lang(PREMIUM_FEATURE_TITLES[section])}\n                  text={section === 'limits'\n                    ? lang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                      [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                    : lang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                  icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                  onClick={handleOpen(section)}\n                />\n              ))}\n              <div className={buildClassName(styles.footerText, styles.primaryFooterText)}>\n                <p>\n                  {renderText(lang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(lang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              <div className={styles.footerText}>\n                {renderTextWithEntities(\n                  promo.statusText,\n                  promo.statusEntities,\n                  undefined,\n                  undefined,\n                  undefined,\n                  undefined,\n                  undefined,\n                  undefined,\n                )}\n              </div>\n            </div>\n            {!isPremium && (\n              <div className={styles.footer}>\n                {/* eslint-disable-next-line react/jsx-no-bind */}\n                <Button className={styles.button} isShiny onClick={handleClick}>\n                  {lang('SubscribeToPremium', formatCurrency(Number(promo.monthlyAmount), promo.currency, lang.code))}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleOpen(undefined)}\n            promo={promo}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    promo: global.premiumModal?.promo,\n    isClosing: global.premiumModal?.isClosing,\n    isSuccess: global.premiumModal?.isSuccess,\n    fromUser: global.premiumModal?.fromUserId ? selectUser(global, global.premiumModal.fromUserId) : undefined,\n    initialSection: global.premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n  };\n})(PremiumMainModal));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\n\nimport type { ApiLimitTypeWithModal } from '../../../../global/types';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport renderText from '../../../common/helpers/renderText';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport { getActions, withGlobal } from '../../../../global';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport useLang from '../../../../hooks/useLang';\nimport { FILEPART_SIZE } from '../../../../config';\nimport useFlag from '../../../../hooks/useFlag';\n\nimport Modal from '../../../ui/Modal';\nimport Button from '../../../ui/Button';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'icon-chat-badge',\n  uploadMaxFileparts: 'icon-file-badge',\n  dialogFilters: 'icon-folder-badge',\n  dialogFolderPinned: 'icon-pin-badge',\n  channelsPublic: 'icon-link-badge',\n  channels: 'icon-chats-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: LangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: LangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon)} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description, ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.subscribeButton)}\n          isShiny\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <i className={buildClassName(styles.buttonIcon, 'icon-double-badge')} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"src-components-main-premium-common-PremiumLimitReachedModal-module__root\",\"limit-compare\":\"src-components-main-premium-common-PremiumLimitReachedModal-module__limit-compare\",\"limitCompare\":\"src-components-main-premium-common-PremiumLimitReachedModal-module__limit-compare\",\"limit-badge\":\"src-components-main-premium-common-PremiumLimitReachedModal-module__limit-badge\",\"limitBadge\":\"src-components-main-premium-common-PremiumLimitReachedModal-module__limit-badge\",\"limit-value\":\"src-components-main-premium-common-PremiumLimitReachedModal-module__limit-value\",\"limitValue\":\"src-components-main-premium-common-PremiumLimitReachedModal-module__limit-value\",\"limit-icon\":\"src-components-main-premium-common-PremiumLimitReachedModal-module__limit-icon\",\"limitIcon\":\"src-components-main-premium-common-PremiumLimitReachedModal-module__limit-icon\",\"dialog-buttons\":\"src-components-main-premium-common-PremiumLimitReachedModal-module__dialog-buttons\",\"dialogButtons\":\"src-components-main-premium-common-PremiumLimitReachedModal-module__dialog-buttons\",\"subscribe-button\":\"src-components-main-premium-common-PremiumLimitReachedModal-module__subscribe-button\",\"subscribeButton\":\"src-components-main-premium-common-PremiumLimitReachedModal-module__subscribe-button\",\"button-icon\":\"src-components-main-premium-common-PremiumLimitReachedModal-module__button-icon\",\"buttonIcon\":\"src-components-main-premium-common-PremiumLimitReachedModal-module__button-icon\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport SafeLink from './SafeLink';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nconst AboutAdsModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('SponsoredMessageInfo')}\n    >\n      <p>{renderText(lang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n      <p>{renderText(lang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n      <p>{renderText(lang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n      <p>\n        <SafeLink\n          url={lang('SponsoredMessageAlertLearnMoreUrl')}\n          text={lang('SponsoredMessageAlertLearnMoreUrl')}\n        />\n      </p>\n      <p>{renderText(lang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Close')}</Button>\n    </Modal>\n  );\n};\n\nexport default memo(AboutAdsModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { IAlbum } from '../../types';\n\nimport {\n  selectAllowedMessageActions,\n  selectChat,\n  selectCurrentMessageList,\n  selectUser,\n} from '../../global/selectors';\nimport {\n  isUserId,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isSchedule,\n  message,\n  album,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onClose,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n  } = getActions();\n\n  const handleDeleteMessageForAll = useCallback(() => {\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    deleteMessages({ messageIds, shouldDeleteForAll: true });\n    onClose();\n  }, [deleteMessages, message.id, onClose, album]);\n\n  const handleDeleteMessageForSelf = useCallback(() => {\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else {\n      deleteMessages({\n        messageIds,\n        shouldDeleteForAll: false,\n      });\n    }\n    onClose();\n  }, [album, message.id, isSchedule, onClose, deleteScheduledMessages, deleteMessages]);\n\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen && !canDeleteForAll ? handleDeleteMessageForSelf : undefined}\n      className=\"delete\"\n      title={lang('DeleteSingleMessagesTitle')}\n    >\n      <p>{lang('AreYouSureDeleteSingleMessage')}</p>\n      {willDeleteForCurrentUserOnly && (\n        <p>{lang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n      )}\n      {willDeleteForAll && (\n        <p>{lang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n      )}\n      {canDeleteForAll && (\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n          {contactName && renderText(lang('Conversation.DeleteMessagesFor', contactName))}\n          {!contactName && lang('Conversation.DeleteMessagesForEveryone')}\n        </Button>\n      )}\n      <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n        {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n      </Button>\n      <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, isSchedule }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const { canDeleteForAll } = (threadId && selectAllowedMessageActions(global, message, threadId)) || {};\n    const chat = selectChat(global, message.chatId);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    const willDeleteForCurrentUserOnly = chat && isChatBasicGroup(chat) && !canDeleteForAll;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport {\n  isUserId,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isChatChannel,\n} from '../../global/helpers';\nimport useLang from '../../hooks/useLang';\nimport renderText from './helpers/renderText';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  messageId,\n  chatId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      chatId, messageId, isUnpin: false,\n    });\n    onClose();\n  }, [pinMessage, chatId, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      chatId, messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [chatId, messageId, onClose, pinMessage]);\n\n  const lang = useLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n        {lang('DialogPin')}\n      </Button>\n      {canPinForAll && (\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n          {contactName\n            ? renderText(lang('Conversation.PinMessagesFor', contactName))\n            : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n        </Button>\n      )}\n      <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n        {lang('DialogUnpin')}\n      </Button>\n      <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive: boolean, copySelectedMessages: NoneToVoidFunction) => {\n  function handleCopy(e: KeyboardEvent) {\n    if (!isActive) {\n      return;\n    }\n\n    e.preventDefault();\n    copySelectedMessages();\n  }\n\n  useHotkeys({ 'Mod+C': handleCopy });\n};\n\nexport default useCopySelectedMessages;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCanDeleteSelectedMessages, selectCurrentChat, selectUser } from '../../global/selectors';\nimport {\n  isUserId,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  selectedMessageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n};\n\nconst DeleteSelectedMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isSchedule,\n  selectedMessageIds,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onClose,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const prevIsOpen = usePrevious(isOpen);\n\n  const handleDeleteMessageForAll = useCallback(() => {\n    onClose();\n    deleteMessages({ messageIds: selectedMessageIds, shouldDeleteForAll: true });\n  }, [deleteMessages, selectedMessageIds, onClose]);\n\n  const handleDeleteMessageForSelf = useCallback(() => {\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds: selectedMessageIds });\n    } else {\n      deleteMessages({ messageIds: selectedMessageIds, shouldDeleteForAll: false });\n    }\n\n    onClose();\n  }, [isSchedule, onClose, deleteScheduledMessages, selectedMessageIds, deleteMessages]);\n\n  const lang = useLang();\n\n  // Returning `undefined` from FC instead of `<Modal>` doesn't trigger useHistoryBack\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      exitMessageSelectMode();\n    }\n  }, [exitMessageSelectMode, isOpen, prevIsOpen]);\n\n  if (!selectedMessageIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n      title={lang('Conversation.DeleteManyMessages')}\n    >\n      <p>{lang('AreYouSureDeleteFewMessages')}</p>\n      {willDeleteForCurrentUserOnly && (\n        <p>This will delete them just for you, not for other participants in the chat.</p>\n      )}\n      {willDeleteForAll && (\n        <p>This will delete them for everyone in this chat.</p>\n      )}\n      {canDeleteForAll && (\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n          {contactName\n            ? renderText(lang('ChatList.DeleteForEveryone', contactName))\n            : lang('Conversation.DeleteMessagesForEveryone')}\n        </Button>\n      )}\n      <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n        {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n      </Button>\n      <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isSchedule }): StateProps => {\n    const { messageIds: selectedMessageIds } = global.selectedMessages || {};\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global);\n    const chat = selectCurrentChat(global);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    const willDeleteForCurrentUserOnly = chat && isChatBasicGroup(chat) && !canDeleteForAll;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      selectedMessageIds,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n    };\n  },\n)(DeleteSelectedMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanReportSelectedMessages,\n  selectCurrentMessageList,\n  selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n} from '../../global/selectors';\nimport useFlag from '../../hooks/useFlag';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport buildClassName from '../../util/buildClassName';\nimport usePrevious from '../../hooks/usePrevious';\nimport useLang from '../../hooks/useLang';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport Button from '../ui/Button';\n\nimport DeleteSelectedMessageModal from './DeleteSelectedMessageModal';\nimport ReportModal from '../common/ReportModal';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isForwardModalOpen?: boolean;\n  selectedMessageIds?: number[];\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  hasProtectedMessage,\n  isForwardModalOpen,\n  selectedMessageIds,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n  } = getActions();\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  useCopySelectedMessages(Boolean(isActive), copySelectedMessages);\n  useEffect(() => {\n    return isActive && !isDeleteModalOpen && !isReportModalOpen && !isForwardModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? openDeleteModal : undefined,\n        onDelete: canDeleteMessages ? openDeleteModal : undefined,\n        onEsc: exitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, isDeleteModalOpen, isReportModalOpen, openDeleteModal, exitMessageSelectMode, isForwardModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  }, [copySelectedMessages, exitMessageSelectMode, lang, showNotification]);\n\n  const handleDownload = useCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  }, [downloadSelectedMessages, exitMessageSelectMode]);\n\n  const prevSelectedMessagesCount = usePrevious(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: string, label: string, onClick: AnyToVoidFunction, disabled?: boolean, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'item',\n          disabled && 'disabled',\n          destructive && 'destructive',\n        )}\n        onClick={!disabled ? onClick : undefined}\n        title={label}\n      >\n        <i className={`icon-${icon}`} />\n      </div>\n    );\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"MessageSelectToolbar-inner\">\n        <Button\n          color=\"translucent\"\n          round\n          onClick={exitMessageSelectMode}\n          ariaLabel=\"Exit select mode\"\n        >\n          <i className=\"icon-close\" />\n        </Button>\n        <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n          {formattedMessagesCount}\n        </span>\n\n        {Boolean(selectedMessagesCount) && (\n          <div className=\"MessageSelectToolbar-actions\">\n            {messageListType !== 'scheduled' && (\n              renderButton(\n                'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages, hasProtectedMessage,\n              )\n            )}\n            {canReportMessages && (\n              renderButton('flag', lang('Conversation.ReportMessages'), openReportModal)\n            )}\n            {canDownloadMessages && (\n              renderButton('download', lang('lng_media_download'), handleDownload, hasProtectedMessage)\n            )}\n            {renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy, hasProtectedMessage)}\n            {renderButton('delete', lang('EditAdminGroupDeleteMessages'), openDeleteModal, !canDeleteMessages, true)}\n          </div>\n        )}\n      </div>\n      <DeleteSelectedMessageModal\n        isOpen={isDeleteModalOpen}\n        isSchedule={isSchedule}\n        onClose={closeDeleteModal}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={selectedMessageIds}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = selectCanReportSelectedMessages(global);\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = global.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const isForwardModalOpen = global.forwardMessages.isModalShown;\n\n    return {\n      isSchedule: messageListType === 'scheduled',\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isForwardModalOpen,\n    };\n  },\n)(MessageSelectToolbar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport useLang from '../../hooks/useLang';\nimport { selectChatMessage } from '../../global/selectors';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  memberIds?: string[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nconst SeenByModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  memberIds,\n}) => {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleClick = useCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  }, [closeSeenByModal, openChat]);\n\n  const renderingMemberIds = useCurrentOrPrev(memberIds, true);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className=\"narrow\"\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {renderingMemberIds && renderingMemberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo userId={userId} noStatusOrTyping />\n          </ListItem>\n        ))}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={closeSeenByModal}\n      >\n        {lang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = global.seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      memberIds: selectChatMessage(global, chatId, messageId)?.seenByUserIds,\n    };\n  },\n)(SeenByModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, memo, useMemo, useEffect, useState, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport useLang from '../../hooks/useLang';\nimport { selectChatMessage } from '../../global/selectors';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\nimport useFlag from '../../hooks/useFlag';\nimport buildClassName from '../../util/buildClassName';\nimport { formatIntegerCompact } from '../../util/textFormat';\nimport { unique } from '../../util/iteratees';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport Avatar from '../common/Avatar';\nimport ListItem from '../ui/ListItem';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport Loading from '../ui/Loading';\nimport PremiumIcon from '../common/PremiumIcon';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByUserIds'> & {\n  chatId?: string;\n  messageId?: number;\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByUserIds,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on users, so we avoid them\n  const usersById = getGlobal().users.byId;\n\n  const lang = useLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<string | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  }, [closeReactorListModal, openChat]);\n\n  const handleClose = useCallback(() => {\n    startClosing();\n  }, [startClosing]);\n\n  const handleClick = useCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  }, [handleClose]);\n\n  const handleLoadMore = useCallback(() => {\n    loadReactors({\n      chatId,\n      messageId,\n    });\n  }, [chatId, loadReactors, messageId]);\n\n  const allReactions = useMemo(() => {\n    return reactors?.reactions ? unique(reactors.reactions.map((l) => l.reaction)) : [];\n  }, [reactors?.reactions]);\n\n  const userIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions.filter((l) => l.reaction === chosenTab).map((l) => l.userId);\n    }\n    return unique(reactors?.reactions.map((l) => l.userId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors?.reactions, seenByUserIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, userIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={lang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\">\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <i className=\"icon-heart\" />\n            {reactors?.count && formatIntegerCompact(reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results.find((l) => l.reaction === reaction)?.count;\n            return (\n              <Button\n                className={buildClassName(chosenTab === reaction && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji reaction={reaction} className=\"reaction-filter-emoji\" />\n                {count && formatIntegerCompact(count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.map(\n              (userId) => {\n                const user = usersById[userId];\n                const fullName = getUserFullName(user);\n                const reaction = reactors?.reactions.find((l) => l.userId === userId)?.reaction;\n                return (\n                  <ListItem\n                    key={userId}\n                    className=\"chat-item-clickable reactors-list-item\"\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onClick={() => handleClick(userId)}\n                  >\n                    <Avatar user={user} size=\"small\" />\n                    <div className=\"title\">\n                      <h3 dir=\"auto\">{fullName && renderText(fullName)}</h3>\n                      {user.isPremium && <PremiumIcon />}\n                    </div>\n                    {reaction && <ReactionStaticEmoji className=\"reactors-list-emoji\" reaction={reaction} />}\n                  </ListItem>\n                );\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={closeReactorListModal}\n      >\n        {lang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = global.reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByUserIds: message?.seenByUserIds,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../global/types';\n\nimport { IS_ANDROID } from '../../util/environment';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../common/helpers/animatedAssets';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n  localEffectAnimation?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  localEffectAnimation,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  }, [activeEmojiInteraction.id, startHiding, stopActiveEmojiInteraction]);\n\n  const handleCancelAnimation = useCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  }, [stop]);\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      dispatchHeavyAnimationStop();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectTgsUrl = useMedia(`sticker${effectAnimationId}`, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n  const tgsUrl = localEffectAnimation && (localEffectAnimation in LOCAL_TGS_URLS)\n    ? LOCAL_TGS_URLS[localEffectAnimation as keyof typeof LOCAL_TGS_URLS]\n    : effectTgsUrl;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={tgsUrl}\n        play={isPlaying}\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceOnHeavyAnimation\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n      localEffectAnimation: !animatedEffect && activeEmojiInteraction.animatedEffect\n      && Object.keys(LOCAL_TGS_URLS).includes(activeEmojiInteraction.animatedEffect)\n        ? activeEmojiInteraction.animatedEffect : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport { isUserId, getPrivateChatUserId, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat, selectUser, selectIsChatPinned, selectNotifySettings, selectNotifyExceptions,\n} from '../../../global/selectors';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  onClick,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleDelete: openDeleteModal,\n    handleChatFolderChange: openChatFolderModal,\n  }, true);\n\n  const handleClick = useCallback(() => {\n    onClick(chatId);\n  }, [chatId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo userId={chatId} withUsername={withUsername} avatarSize=\"large\" withVideoAvatar />\n      ) : (\n        <GroupChatInfo chatId={chatId} withUsername={withUsername} avatarSize=\"large\" withVideoAvatar />\n      )}\n      <DeleteChatModal\n        isOpen={isDeleteModalOpen}\n        onClose={closeDeleteModal}\n        chat={chat}\n      />\n      <ChatFolderModal\n        isOpen={isChatFolderModalOpen}\n        onClose={closeChatFolderModal}\n        chatId={chatId}\n      />\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const privateChatUserId = chat && getPrivateChatUserId(chat);\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat\n      ? selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global))\n      : undefined;\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useCallback, useRef, memo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport renderText from '../../common/helpers/renderText';\nimport { throttle } from '../../../util/schedulers';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds, usersById, recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef.current, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const lang = useLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers no-selection\">\n            {topUserIds.map((userId) => (\n              <div className=\"top-peer-item\" onClick={() => handleClick(userId)} dir={lang.isRtl ? 'rtl' : undefined}>\n                <Avatar user={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3 className=\"section-heading mt-0 recent-chats-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('Recent')}\n\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel=\"Clear recent chats\"\n              onClick={clearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <i className=\"icon-close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global.globalSearch;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiUser, ApiMessage, ApiMessageOutgoingStatus,\n} from '../../../api/types';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageRoundVideo,\n  getMessageSticker,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\nimport { formatPastTimeShort } from '../../../util/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useMedia from '../../../hooks/useMedia';\nimport type { LangFn } from '../../../hooks/useLang';\nimport useLang from '../../../hooks/useLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport VerifiedIcon from '../../common/VerifiedIcon';\nimport ListItem from '../../ui/ListItem';\nimport Link from '../../ui/Link';\nimport FakeIcon from '../../common/FakeIcon';\nimport PremiumIcon from '../../common/PremiumIcon';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  lastSyncTime?: number;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n  lastSyncTime,\n}) => {\n  const { focusMessage } = getActions();\n\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  }, [chatId, focusMessage, message.id]);\n\n  const lang = useLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!IS_SINGLE_COLUMN_LAYOUT}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        chat={chat}\n        user={privateChatUser}\n        isSavedMessages={privateChatUser?.isSelf}\n        lastSyncTime={lastSyncTime}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className=\"title\">\n            <h3 dir=\"auto\">{renderText(getChatTitle(lang, chat, privateChatUser))}</h3>\n            {chat.isVerified && <VerifiedIcon />}\n            {privateChatUser?.isPremium && <PremiumIcon />}\n            {chat.fakeType && <FakeIcon fakeType={chat.fakeType} />}\n          </div>\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  return (\n    <span className=\"media-preview\">\n      <img src={blobUrl} alt=\"\" className={buildClassName('media-preview--image', isRoundVideo && 'round')} />\n      {getMessageVideo(message) && <i className=\"icon-play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n\n    return {\n      chat,\n      lastSyncTime: global.lastSyncTime,\n      ...(privateChatUserId && { privateChatUser: selectUser(global, privateChatUserId) }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { formatDateToString } from '../../../util/dateFormat';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <i className=\"icon-calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport { unique } from '../../../util/iteratees';\nimport {\n  sortChatIds,\n  filterUsersByName,\n} from '../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport useLang from '../../../hooks/useLang';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport RecentContacts from './RecentContacts';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport Link from '../../ui/Link';\nimport NothingFound from '../../common/NothingFound';\nimport PickerSelectedItem from '../../common/PickerSelectedItem';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  localContactIds?: string[];\n  localChatIds?: string[];\n  localUserIds?: string[];\n  globalChatIds?: string[];\n  globalUserIds?: string[];\n  foundIds?: string[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  lastSyncTime?: number;\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  searchQuery, searchDate, dateSearchQuery, currentUserId,\n  localContactIds, localChatIds, localUserIds, globalChatIds, globalUserIds,\n  foundIds, globalMessagesByChatId, chatsById, fetchingStatus, lastSyncTime,\n  onReset, onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal, setGlobalSearchChatId,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (lastSyncTime && direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n          query: searchQuery,\n        });\n      });\n    }\n  }, [lastSyncTime, searchMessagesGlobal, searchQuery]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!IS_SINGLE_COLUMN_LAYOUT) {\n        onReset();\n      }\n    },\n    [currentUserId, openChat, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  const localResults = useMemo(() => {\n    if (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2)) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(localContactIds || []),\n    ];\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = filterUsersByName(\n      contactIdsWithMe, usersById, searchQuery, currentUserId, lang('SavedMessages'),\n    );\n\n    return [\n      ...sortChatIds(unique([\n        ...(foundContactIds || []),\n        ...(localChatIds || []),\n        ...(localUserIds || []),\n      ]), chatsById, undefined, currentUserId ? [currentUserId] : undefined),\n    ];\n  }, [searchQuery, currentUserId, localContactIds, lang, localChatIds, localUserIds, chatsById]);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalChatIds || !globalUserIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return sortChatIds(\n      unique([...globalChatIds, ...globalUserIds]),\n      chatsById,\n      true,\n    );\n  }, [chatsById, globalChatIds, globalUserIds, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = id.split('_');\n\n        return globalMessagesByChatId?.[chatId]?.byId[Number(messageId)];\n      })\n      .filter<ApiMessage>(Boolean as any)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId, searchQuery, searchDate]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !foundMessages.length;\n\n  if (!searchQuery && !searchDate) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  return (\n    <InfiniteScroll\n      className=\"LeftSearch custom-scroll\"\n      items={foundMessages}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={lang('ChatList.Search.NoResults')}\n          description={lang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"chat-selection no-selection no-scrollbar\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {localResults.map((id) => (\n            <PickerSelectedItem\n              chatOrUserId={id}\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link onClick={handleClickShowMoreLocal}>\n                {lang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link onClick={handleClickShowMoreGlobal}>\n                {lang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(foundMessages.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>{lang('SearchMessages')}</h3>\n          {foundMessages.map(renderFoundMessage)}\n        </div>\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n\n    const { userIds: localContactIds } = global.contactList || {};\n\n    if (!localContactIds) {\n      return {\n        chatsById,\n      };\n    }\n\n    const {\n      currentUserId, messages, lastSyncTime,\n    } = global;\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType,\n    } = global.globalSearch;\n    const { chatIds: globalChatIds, userIds: globalUserIds } = globalResults || {};\n    const { chatIds: localChatIds, userIds: localUserIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.text?.foundIds;\n\n    return {\n      currentUserId,\n      localContactIds,\n      localChatIds,\n      localUserIds,\n      globalChatIds,\n      globalUserIds,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      lastSyncTime,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport useLang from '../../../hooks/useLang';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport NothingFound from '../../common/NothingFound';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: string[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  lastSyncTime?: number;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  currentUserId,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  lastSyncTime,\n  onSearchDateSelect,\n}) => {\n  const { searchMessagesGlobal } = getActions();\n\n  const lang = useLang();\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (lastSyncTime && direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n          query: searchQuery,\n          chatId: currentUserId,\n        });\n      });\n    }\n  }, [currentUserId, lastSyncTime, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = id.split('_');\n\n        return globalMessagesByChatId?.[chatId]?.byId[Number(messageId)];\n      })\n      .filter<ApiMessage>(Boolean as any)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length;\n\n  return (\n    <div className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {foundMessages.map(renderFoundMessage)}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId }, lastSyncTime } = global;\n    const { fetchingStatus, resultsByType } = global.globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      lastSyncTime,\n    };\n  },\n)(ChatMessageResults));\n","import type { GlobalState } from '../../../../global/types';\nimport type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { ISettings } from '../../../../types';\n\nimport { selectChat, selectTheme } from '../../../../global/selectors';\n\nexport type StateProps = {\n  theme: ISettings['theme'];\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: string[];\n  lastSyncTime?: number;\n  searchChatId?: string;\n  activeDownloads: Record<string, number[]>;\n  isChatProtected?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = global.globalSearch;\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = global.activeDownloads.byChatId;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      lastSyncTime: global.lastSyncTime,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport useLang from '../../../hooks/useLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Media from '../../common/Media';\nimport ChatMessage from './ChatMessage';\nimport NothingFound from '../../common/NothingFound';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchChatId,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  lastSyncTime,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (lastSyncTime && direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n          query: searchQuery,\n          chatId: searchChatId,\n        });\n      });\n    }\n  }, [lastSyncTime, searchMessagesGlobal, searchQuery, searchChatId]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((messageId: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      messageId,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={message.id}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className={classNames}\n        items={foundMessages}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dateFormat';\nimport { getSenderName } from './helpers/getSenderName';\nimport { throttle } from '../../../util/schedulers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\nimport useLang from '../../../hooks/useLang';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport WebLink from '../../common/WebLink';\nimport NothingFound from '../../common/NothingFound';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchChatId,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  lastSyncTime,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (lastSyncTime && direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n          query: searchQuery,\n          chatId: searchChatId,\n        });\n      });\n    }\n  }, [lastSyncTime, searchMessagesGlobal, searchQuery, searchChatId]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const shouldDrawDateDivider = index === 0\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p className=\"section-heading\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <WebLink\n            key={message.id}\n            message={message}\n            senderTitle={getSenderName(lang, message, chatsById, usersById)}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onMessageClick={handleMessageFocus}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dateFormat';\nimport { getSenderName } from './helpers/getSenderName';\nimport { throttle } from '../../../util/schedulers';\nimport { getMessageDocument } from '../../../global/helpers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\nimport useLang from '../../../hooks/useLang';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\n\nimport Document from '../../common/Document';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport NothingFound from '../../common/NothingFound';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchChatId,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  lastSyncTime,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (lastSyncTime && direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n          query: searchQuery,\n          chatId: searchChatId,\n        });\n      });\n    }\n  }, [lastSyncTime, searchMessagesGlobal, searchQuery, searchChatId]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n      const message = globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const shouldDrawDateDivider = index === 0\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p className=\"section-heading\">{formatMonthAndYear(lang, new Date(message.date * 1000))}</p>\n          )}\n          <Document\n            message={message}\n            withDate\n            datetime={message.date}\n            smaller\n            sender={getSenderName(lang, message, chatsById, usersById)}\n            className=\"scroll-item\"\n            isDownloading={activeDownloads[message.chatId]?.includes(message.id)}\n            observeIntersection={observeIntersectionForMedia}\n            onDateClick={handleMessageFocus}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dateFormat';\nimport { getSenderName } from './helpers/getSenderName';\nimport { throttle } from '../../../util/schedulers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\nimport useLang from '../../../hooks/useLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  searchChatId,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  lastSyncTime,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (lastSyncTime && direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n          query: searchQuery,\n          chatId: searchChatId,\n        });\n      });\n    }\n  }, [currentType, lastSyncTime, searchMessagesGlobal, searchQuery, searchChatId]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const shouldDrawDateDivider = index === 0\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p className=\"section-heading\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <Audio\n            key={message.id}\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Search}\n            senderTitle={getSenderName(lang, message, chatsById, usersById)}\n            date={message.date}\n            lastSyncTime={lastSyncTime}\n            className=\"scroll-item\"\n            onPlay={handlePlayAudio}\n            onDateClick={handleMessageFocus}\n            canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n            isDownloading={activeDownloads[message.chatId]?.includes(message.id)}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useState, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { GlobalSearchContent } from '../../../types';\n\nimport { parseDateString } from '../../../util/dateFormat';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport ChatResults from './ChatResults';\nimport UserChatResults from './ChatMessageResults';\nimport MediaResults from './MediaResults';\nimport LinkResults from './LinkResults';\nimport FileResults from './FileResults';\nimport AudioResults from './AudioResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\nconst TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'SearchAllChatsShort' },\n  { type: GlobalSearchContent.Media, title: 'SharedMediaTab2' },\n  { type: GlobalSearchContent.Links, title: 'SharedLinksTab2' },\n  { type: GlobalSearchContent.Files, title: 'SharedFilesTab2' },\n  { type: GlobalSearchContent.Music, title: 'SharedMusicTab2' },\n  { type: GlobalSearchContent.Voice, title: 'SharedVoiceTab2' },\n];\n\nconst CHAT_TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'All Messages' },\n  ...TABS.slice(1),\n];\n\nconst TRANSITION_RENDER_COUNT = Object.keys(GlobalSearchContent).length / 2;\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const handleSwitchTab = useCallback((index: number) => {\n    const tab = TABS[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  }, [setGlobalSearchContent]);\n\n  const handleSearchDateSelect = useCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  }, [setGlobalSearchDate]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={chatId ? CHAT_TABS : TABS} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slide-optimized-rtl' : 'slide-optimized'}\n        renderCount={TRANSITION_RENDER_COUNT}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n              if (chatId) {\n                return (\n                  <UserChatResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = global.globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { StateReducer, Dispatch } from '../useReducer';\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport useLang from '../../../hooks/useLang';\nimport useMultiClick from '../../../hooks/useMultiClick';\n\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onSaveFilter: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onSaveFilter,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut();\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!IS_SINGLE_COLUMN_LAYOUT}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon-more\" />\n      </Button>\n    );\n  }, []);\n\n  const lang = useLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{lang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{lang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{lang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{lang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{lang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{lang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{lang('Language')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{lang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{lang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{lang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{lang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{lang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{lang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{lang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{lang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return <h3>{lang('AlwaysShareWith')}</h3>;\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return <h3>{lang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{lang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{lang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{lang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{lang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{lang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{lang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{lang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{lang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{lang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{lang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{lang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{lang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{lang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{lang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{lang('FilterEdit')}</h3>\n\n            {editedFolderId && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {lang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <div className=\"settings-main-header\">\n            {(currentScreen === SettingsScreens.FoldersIncludedChats\n              || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList) ? (\n                <h3>{lang('FilterInclude')}</h3>\n              ) : (\n                <h3>{lang('FilterExclude')}</h3>\n              )}\n\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              className=\"color-primary\"\n              onClick={onSaveFilter}\n              ariaLabel={lang('AutoDeleteConfirm')}\n            >\n              <i className=\"icon-check\" />\n            </Button>\n          </div>\n        );\n\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {lang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!IS_SINGLE_COLUMN_LAYOUT}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={lang('lng_settings_information')}\n            >\n              <i className=\"icon-edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{lang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={lang('AccDescrGoBack')}\n      >\n        <i className=\"icon-arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={lang('lng_sure_logout')}\n        confirmLabel={lang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\nimport type { ApiUser } from '../../../api/types';\n\nimport { selectIsPremiumPurchaseBlocked, selectUser } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ChatExtra from '../../common/ChatExtra';\nimport PremiumIcon from '../../common/PremiumIcon';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUser?: ApiUser;\n  lastSyncTime?: number;\n  canBuyPremium?: boolean;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  currentUser,\n  sessionCount,\n  lastSyncTime,\n  canBuyPremium,\n}) => {\n  const {\n    loadProfilePhotos,\n    loadAuthorizations,\n    openPremiumModal,\n  } = getActions();\n\n  const lang = useLang();\n  const profileId = currentUser?.id;\n\n  useEffect(() => {\n    if (profileId && lastSyncTime) {\n      loadProfilePhotos({ profileId });\n    }\n  }, [lastSyncTime, profileId, loadProfilePhotos]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (lastSyncTime) {\n      loadAuthorizations();\n    }\n  }, [lastSyncTime, loadAuthorizations]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu\">\n        {currentUser && (\n          <ProfileInfo\n            userId={currentUser.id}\n            forceShowSelf\n          />\n        )}\n        {currentUser && (\n          <ChatExtra\n            chatOrUserId={currentUser.id}\n            forceShowSelf\n          />\n        )}\n        <ListItem\n          icon=\"settings\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {lang('Telegram.GeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {lang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {lang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {lang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {lang('Filters')}\n        </ListItem>\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<PremiumIcon withGradient big />}\n            className=\"settings-main-menu-premium\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {lang('TelegramPremium')}\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"active-sessions\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {lang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {lang('Language')}\n          <span className=\"settings-item__current-value\">{lang.langName}</span>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId, lastSyncTime } = global;\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUser: currentUserId ? selectUser(global, currentUserId) : undefined,\n      lastSyncTime,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useState, useCallback, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\n\nimport { debounce } from '../../util/schedulers';\nimport useLang from '../../hooks/useLang';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkUsername: AnyToVoidFunction;\n  onChange: (value: string | false) => void;\n};\n\nconst MIN_USERNAME_LENGTH = 5;\nconst MAX_USERNAME_LENGTH = 32;\nconst LINK_PREFIX = 'https://t.me/';\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\nconst USERNAME_REGEX = /^([a-zA-Z0-9_]+)$/;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nfunction isUsernameValid(username: string) {\n  return username.length >= MIN_USERNAME_LENGTH\n    && username.length <= MAX_USERNAME_LENGTH\n    && USERNAME_REGEX.test(username);\n}\n\nconst SettingsEditProfile: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkUsername,\n  onChange,\n}) => {\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_USERNAME_LENGTH) {\n      return [undefined, `${label} is too short`];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, `${label} is too long`];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, `${label} contains invalid characters`];\n    }\n\n    if (isUsernameAvailable === undefined) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      isUsernameAvailable ? lang(`${langPrefix}Available`, 'Username') : undefined,\n      isUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, isUsernameAvailable, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const newUsername = e.target.value.trim().replace(LINK_PREFIX_REGEX, '');\n    setUsername(newUsername);\n    e.target.value = `${asLink ? LINK_PREFIX : ''}${newUsername}`;\n\n    const isValid = isUsernameValid(newUsername);\n\n    if (isValid) {\n      runDebouncedForCheckUsername(() => {\n        checkUsername({ username: newUsername });\n      });\n    }\n\n    if (onChange) {\n      onChange(isValid ? newUsername : false);\n    }\n  }, [asLink, checkUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n    />\n  );\n};\n\nexport default memo(SettingsEditProfile);\n","import type { ChangeEvent, FormEvent, RefObject } from 'react';\nimport useLang from '../../hooks/useLang';\nimport buildClassName from '../../util/buildClassName';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLTextAreaElement>;\n  id?: string;\n  className?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  success?: string;\n  disabled?: boolean;\n  readOnly?: boolean;\n  placeholder?: string;\n  autoComplete?: string;\n  maxLength?: number;\n  maxLengthIndicator?: string;\n  tabIndex?: number;\n  inputMode?: 'text' | 'none' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search';\n  onChange?: (e: ChangeEvent<HTMLTextAreaElement>) => void;\n  onInput?: (e: FormEvent<HTMLTextAreaElement>) => void;\n  onKeyPress?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\n  onPaste?: (e: React.ClipboardEvent<HTMLTextAreaElement>) => void;\n};\n\nconst TextArea: FC<OwnProps> = ({\n  ref,\n  id,\n  className,\n  value,\n  label,\n  error,\n  success,\n  disabled,\n  readOnly,\n  placeholder,\n  autoComplete,\n  inputMode,\n  maxLength,\n  maxLengthIndicator,\n  tabIndex,\n  onChange,\n  onInput,\n  onKeyPress,\n  onKeyDown,\n  onBlur,\n  onPaste,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let textareaRef = useRef<HTMLTextAreaElement>(null);\n  if (ref) {\n    textareaRef = ref;\n  }\n\n  const lang = useLang();\n  const labelText = error || success || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error ? 'error' : success && 'success',\n    disabled && 'disabled',\n    readOnly && 'disabled',\n    labelText && 'with-label',\n    className,\n  );\n\n  useEffect(() => {\n    const textarea = textareaRef.current;\n    if (!textarea) return;\n    textarea.style.height = '0';\n    textarea.style.height = `${textarea.scrollHeight}px`;\n  }, []);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    e.currentTarget.value = e.currentTarget.value.replace(/\\n/, '');\n    e.currentTarget.style.height = '0';\n    e.currentTarget.style.height = `${e.currentTarget.scrollHeight}px`;\n    onChange?.(e);\n  }, [onChange]);\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <textarea\n        ref={textareaRef}\n        className=\"form-control\"\n        id={id}\n        dir=\"auto\"\n        value={value || ''}\n        tabIndex={tabIndex}\n        placeholder={placeholder}\n        maxLength={maxLength}\n        autoComplete={autoComplete}\n        inputMode={inputMode}\n        disabled={disabled}\n        readOnly={readOnly}\n        onChange={handleChange}\n        onInput={onInput}\n        onKeyPress={onKeyPress}\n        onKeyDown={onKeyDown}\n        onBlur={onBlur}\n        onPaste={onPaste}\n        aria-label={labelText}\n      />\n      {labelText && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n      {maxLengthIndicator && (\n        <div className=\"max-length-indicator\">{maxLengthIndicator}</div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(TextArea);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useState, useCallback, memo, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { throttle } from '../../../util/schedulers';\nimport { selectUser } from '../../../global/selectors';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport useMedia from '../../../hooks/useMedia';\nimport useLang from '../../../hooks/useLang';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Spinner from '../../ui/Spinner';\nimport InputText from '../../ui/InputText';\nimport UsernameInput from '../../common/UsernameInput';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  currentUsername?: string;\n  progress?: ProfileEditProgress;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  currentUsername,\n  progress,\n  isUsernameAvailable,\n  maxBioLength,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n    checkUsername,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [username, setUsername] = useState<string | false>(currentUsername || '');\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = username === false;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || isUsernameAvailable === true;\n  }, [photo, isProfileFieldsTouched, isUsernameError, isUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setUsername(value);\n    setIsUsernameTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    username, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-edit-profile settings-item\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title=\"Edit your profile photo\"\n            disabled={isLoading}\n          />\n          <InputText\n            value={firstName}\n            onChange={handleFirstNameChange}\n            label={lang('FirstName')}\n            disabled={isLoading}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            value={lastName}\n            onChange={handleLastNameChange}\n            label={lang('LastName')}\n            disabled={isLoading}\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('UserBio')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <UsernameInput\n            currentUsername={username || ''}\n            isLoading={isLoading}\n            isUsernameAvailable={isUsernameAvailable}\n            checkUsername={checkUsername}\n            onChange={handleUsernameChange}\n          />\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {username && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">https://t.me/{username}</span>\n            </p>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const { progress, isUsernameAvailable } = global.profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        isUsernameAvailable,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      username: currentUsername,\n      fullInfo,\n    } = currentUser;\n    const { bio: currentBio } = fullInfo || {};\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio,\n      currentUsername,\n      progress,\n      isUsernameAvailable,\n      maxBioLength,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'canAutoPlayGifs' |\n  'canAutoPlayVideos' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  canAutoPlayGifs,\n  canAutoPlayVideos,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', lang('FileSize.MB', String(AUTODOWNLOAD_FILESIZE_MB_LIMITS[value]), 'i'));\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  const handleCanAutoPlayGifsChange = useCallback((value: boolean) => {\n    setSettingOption({ canAutoPlayGifs: value });\n  }, [setSettingOption]);\n\n  const handleCanAutoPlayVideosChange = useCallback((value: boolean) => {\n    setSettingOption({ canAutoPlayVideos: value });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettings.Contacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.PrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.GroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.Channels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        'Auto-download files', // Proper translation is not available yet\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('AutoplayMedia')}</h4>\n\n        <Checkbox\n          label={lang('GifsTab2')}\n          checked={canAutoPlayGifs}\n          onCheck={handleCanAutoPlayGifsChange}\n        />\n        <Checkbox\n          label={lang('DataAndStorage.Autoplay.Videos')}\n          checked={canAutoPlayVideos}\n          onCheck={handleCanAutoPlayVideosChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'canAutoPlayGifs',\n      'canAutoPlayVideos',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useCallback, useEffect,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { ALL_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\n\nimport ListItem from '../../../ui/ListItem';\nimport Button from '../../../ui/Button';\nimport Loading from '../../../ui/Loading';\nimport AnimatedIcon from '../../../common/AnimatedIcon';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  orderedFolderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  orderedFolderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!orderedFolderIds) {\n      return undefined;\n    }\n\n    if (orderedFolderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return orderedFolderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: lang('FilterAllChats'),\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n      };\n    });\n  }, [orderedFolderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"with-icon mb-2\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <i className=\"icon-add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        {userFolders?.length ? userFolders.map((folder, i) => {\n          const isBlocked = i > maxFolders - 1;\n          if (folder.id === ALL_FOLDER_ID) {\n            return (\n              <ListItem\n                className=\"mb-2 no-icon\"\n                narrow\n                inactive\n                isStatic\n              >\n                {folder.title}\n              </ListItem>\n            );\n          }\n\n          return (\n            <ListItem\n              className=\"mb-2 no-icon\"\n              narrow\n              secondaryIcon=\"more\"\n              multiline\n              contextActions={[\n                {\n                  handler: () => {\n                    openDeleteChatFolderModal({ folderId: folder.id });\n                  },\n                  destructive: true,\n                  title: lang('Delete'),\n                  icon: 'delete',\n                },\n              ]}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                if (isBlocked) {\n                  openLimitReachedModal({\n                    limit: 'dialogFilters',\n                  });\n                } else {\n                  onEditFolder(foldersById[folder.id]);\n                }\n              }}\n            >\n              <span className=\"title\">\n                {folder.title}\n                {isBlocked && <i className=\"icon-lock-badge settings-folders-blocked-icon\" />}\n              </span>\n              <span className=\"subtitle\">{folder.subtitle}</span>\n            </ListItem>\n          );\n        }) : userFolders && !userFolders.length ? (\n          <p className=\"settings-item-description my-4\" dir=\"auto\">\n            You have no folders yet.\n          </p>\n        ) : <Loading />}\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              className=\"mb-2\"\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">{folder.title}</span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      orderedIds: orderedFolderIds,\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    return {\n      orderedFolderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\n\nimport './ShowMoreButton.scss';\n\ntype OwnProps = {\n  count: number;\n  itemName: string;\n  itemPluralName?: string;\n  isLoading?: boolean;\n  onClick: () => void;\n};\n\nconst ShowMoreButton: FC<OwnProps> = ({\n  count,\n  itemName,\n  itemPluralName,\n  isLoading,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Button\n      className=\"ShowMoreButton\"\n      color=\"translucent\"\n      size=\"smaller\"\n      isText\n      isLoading={isLoading}\n      isRtl={lang.isRtl}\n      onClick={onClick}\n    >\n      <i className=\"icon-down\" />\n      Show {count} more {count > 1 ? itemPluralName || `${itemName}s` : itemName}\n    </Button>\n  );\n};\n\nexport default ShowMoreButton;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { isUserId } from '../../../../global/helpers';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport {\n  EXCLUDED_CHAT_TYPES,\n  INCLUDED_CHAT_TYPES,\n  selectChatFilters,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\n\nimport ListItem from '../../../ui/ListItem';\nimport InputText from '../../../ui/InputText';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\nimport ShowMoreButton from '../../../ui/ShowMoreButton';\nimport AnimatedIcon from '../../../common/AnimatedIcon';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: () => void;\n  onAddExcludedChats: () => void;\n  isActive?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  isRemoved?: boolean;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nconst ERROR_NO_TITLE = 'Please provide a title for this folder.';\nconst ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  loadedArchivedChatIds,\n}) => {\n  const {\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = selectChatFilters(state, 'included');\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = selectChatFilters(state, 'excluded');\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    const { title } = state.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return;\n    }\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return;\n    }\n\n    dispatch({ type: 'setIsLoading', payload: true });\n    if (state.mode === 'edit') {\n      editChatFolder({ id: state.folderId, folderUpdate: state.folder });\n    } else {\n      addChatFolder({ folder: state.folder });\n    }\n\n    setTimeout(() => {\n      onReset();\n    }, SUBMIT_TIMEOUT);\n  }, [addChatFolder, dispatch, editChatFolder, includedChatIds.length, includedChatTypes, onReset, state]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? INCLUDED_CHAT_TYPES.find(({ key: typeKey }) => typeKey === key)\n      : EXCLUDED_CHAT_TYPES.find(({ key: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.key}\n        className=\"settings-folders-list-item mb-1\"\n        icon={chatType.icon}\n        narrow\n        inactive\n      >\n        {lang(chatType.title)}\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - selectedChatTypes.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ShowMoreButton\n            count={leftChatsCount}\n            itemName=\"chat\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n          />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIcon\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {state.mode === 'create' && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n          />\n        </div>\n\n        <div className=\"settings-item no-border pt-3\">\n          {state.error && state.error === ERROR_NO_CHATS && (\n            <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang(state.error)}\n            </p>\n          )}\n\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary mb-0\"\n            icon=\"add\"\n            onClick={onAddIncludedChats}\n          >\n            {lang('FilterAddChats')}\n          </ListItem>\n\n          {renderChats('included')}\n        </div>\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary mb-0\"\n            icon=\"add\"\n            onClick={onAddExcludedChats}\n          >\n            {lang('FilterAddChats')}\n          </ListItem>\n\n          {renderChats('excluded')}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId } = global.chatFolders;\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  useCallback, useRef, useEffect, memo,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport { isUserId } from '../../../../global/helpers';\nimport type { FolderChatType } from '../../../../hooks/reducers/useFoldersReducer';\nimport {\n  INCLUDED_CHAT_TYPES,\n  EXCLUDED_CHAT_TYPES,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport useInfiniteScroll from '../../../../hooks/useInfiniteScroll';\nimport useLang from '../../../../hooks/useLang';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\n\nimport Checkbox from '../../../ui/Checkbox';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport PickerSelectedItem from '../../../common/PickerSelectedItem';\nimport InfiniteScroll from '../../../ui/InfiniteScroll';\nimport Loading from '../../../ui/Loading';\n\nimport '../../../common/Picker.scss';\nimport './SettingsFoldersChatsPicker.scss';\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  chatIds: string[];\n  selectedIds: string[];\n  selectedChatTypes: string[];\n  filterValue?: string;\n  onSelectedIdsChange: (ids: string[]) => void;\n  onSelectedChatTypesChange: (types: string[]) => void;\n  onFilterChange: (value: string) => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\ntype StateProps = {\n  maxChats: number;\n};\n\nconst SettingsFoldersChatsPicker: FC<OwnProps & StateProps> = ({\n  mode,\n  chatIds,\n  selectedIds,\n  selectedChatTypes,\n  filterValue,\n  onSelectedIdsChange,\n  onSelectedChatTypesChange,\n  onFilterChange,\n  maxChats,\n}) => {\n  const { openLimitReachedModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const chatTypes = mode === 'included' ? INCLUDED_CHAT_TYPES : EXCLUDED_CHAT_TYPES;\n  const shouldMinimize = selectedIds.length + selectedChatTypes.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    setTimeout(() => {\n      requestAnimationFrame(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, []);\n\n  const handleItemClick = useCallback((id: string) => {\n    const newSelectedIds = [...selectedIds];\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      if (selectedIds.length >= maxChats && mode === 'included') {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange(newSelectedIds);\n  }, [selectedIds, onSelectedIdsChange, maxChats, mode, openLimitReachedModal]);\n\n  const handleChatTypeClick = useCallback((key: FolderChatType['key']) => {\n    const newSelectedChatTypes = [...selectedChatTypes];\n    if (newSelectedChatTypes.includes(key)) {\n      newSelectedChatTypes.splice(newSelectedChatTypes.indexOf(key), 1);\n    } else {\n      newSelectedChatTypes.push(key);\n    }\n    onSelectedChatTypesChange(newSelectedChatTypes);\n  }, [selectedChatTypes, onSelectedChatTypesChange]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange(value);\n  }, [onFilterChange]);\n\n  const lang = useLang();\n\n  function renderSelectedChatType(key: string) {\n    const selectedType = chatTypes.find(({ key: typeKey }) => key === typeKey);\n    if (!selectedType) {\n      return undefined;\n    }\n\n    return (\n      <PickerSelectedItem\n        icon={selectedType.icon}\n        title={lang(selectedType.title)}\n        isMinimized={shouldMinimize}\n        canClose\n        onClick={handleChatTypeClick}\n        clickArg={selectedType.key}\n      />\n    );\n  }\n\n  function renderChatType(type: FolderChatType) {\n    return (\n      <ListItem\n        key={type.key}\n        className=\"chat-item-clickable picker-list-item chat-type-item\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleChatTypeClick(type.key)}\n        ripple\n      >\n        <i className={`icon-${type.icon}`} />\n        <h3 className=\"chat-type\" dir=\"auto\">{lang(type.title)}</h3>\n        <Checkbox\n          label=\"\"\n          checked={selectedChatTypes.includes(type.key)}\n          round\n        />\n      </ListItem>\n    );\n  }\n\n  function renderItem(id: string) {\n    const isSelected = selectedIds.includes(id);\n\n    return (\n      <ListItem\n        key={id}\n        className=\"chat-item-clickable picker-list-item chat-item\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        ripple\n      >\n        {isUserId(id) ? (\n          <PrivateChatInfo userId={id} />\n        ) : (\n          <GroupChatInfo chatId={id} withChatType />\n        )}\n        <Checkbox\n          label=\"\"\n          checked={isSelected}\n          round\n        />\n      </ListItem>\n    );\n  }\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, chatIds, Boolean(filterValue));\n\n  return (\n    <div className=\"Picker SettingsFoldersChatsPicker\">\n      <div className=\"picker-header custom-scroll\">\n        {selectedChatTypes.map(renderSelectedChatType)}\n        {selectedIds.map((id, i) => (\n          <PickerSelectedItem\n            chatOrUserId={id}\n            isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n            canClose\n            onClick={handleItemClick}\n            clickArg={id}\n          />\n        ))}\n        <InputText\n          ref={inputRef}\n          value={filterValue}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n      <InfiniteScroll\n        className=\"picker-list custom-scroll\"\n        itemSelector=\".chat-item\"\n        items={viewportIds}\n        onLoadMore={getMore}\n      >\n        {(!viewportIds || !viewportIds.length || viewportIds.includes(chatIds[0])) && (\n          <>\n            <h4 key=\"header1\" className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterChatTypes')}\n            </h4>\n            {chatTypes.map(renderChatType)}\n            <div key=\"divider\" className=\"picker-list-divider\" />\n            <h4 key=\"header2\" className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterChats')}\n            </h4>\n          </>\n        )}\n\n        {viewportIds?.length ? (\n          viewportIds.map(renderItem)\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\" key=\"no-results\">Sorry, nothing found.</p>\n        ) : (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatsPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useCallback } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport { unique } from '../../../../util/iteratees';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterChatsByName } from '../../../../global/helpers';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport type {\n  FoldersState,\n  FolderEditDispatch,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport {\n  selectChatFilters,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatsPicker from './SettingsFoldersChatsPicker';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n}) => {\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = selectChatFilters(state, mode, true);\n\n  const lang = useLang();\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...selectedChatIds,\n      ...filterChatsByName(lang, chatIds, chatsById, chatFilter),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedChatIds, lang, chatFilter]);\n\n  const handleFilterChange = useCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n  }, [dispatch]);\n\n  const handleSelectedIdsChange = useCallback((ids: string[]) => {\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n  }, [mode, state, dispatch]);\n\n  const handleSelectedChatTypesChange = useCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n  }, [mode, selectedChatIds, dispatch]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <SettingsFoldersChatsPicker\n      mode={mode}\n      chatIds={displayedIds}\n      selectedIds={selectedChatIds}\n      selectedChatTypes={selectedChatTypes}\n      filterValue={chatFilter}\n      onSelectedIdsChange={handleSelectedIdsChange}\n      onSelectedChatTypesChange={handleSelectedChatTypesChange}\n      onFilterChange={handleFilterChange}\n    />\n  );\n};\n\nexport default memo(SettingsFoldersChatFilters);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsFoldersEdit from './SettingsFoldersEdit';\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onBack={onReset}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          isActive={isActive}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiStickerSet } from '../../../api/types';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport { getFirstLetters } from '../../../util/textFormat';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\n\ntype OwnProps = {\n  size?: number;\n  stickerSet: ApiStickerSet;\n  observeIntersection: ObserveFn;\n};\n\nconst StickerSetCoverAnimated: FC<OwnProps> = ({\n  size = STICKER_SIZE_PICKER_HEADER,\n  stickerSet,\n  observeIntersection,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHash = `stickerSet${stickerSet.id}`;\n  const lottieData = useMedia(mediaHash, !isIntersecting);\n  const transitionClassNames = useMediaTransition(lottieData);\n\n  const firstLetters = useMemo(() => {\n    if (lottieData) return undefined;\n\n    return getFirstLetters(stickerSet.title, 2);\n  }, [lottieData, stickerSet.title]);\n\n  return (\n    <div ref={ref} className=\"sticker-set-cover\">\n      {firstLetters}\n      {lottieData && (\n        <AnimatedSticker\n          size={size}\n          tgsUrl={lottieData}\n          className={transitionClassNames}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCoverAnimated);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiStickerSet } from '../../../api/types';\n\nimport { IS_WEBM_SUPPORTED } from '../../../util/environment';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  observeIntersection: ObserveFn;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({ stickerSet, observeIntersection }) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaData = useMedia(stickerSet.hasThumbnail && `stickerSet${stickerSet.id}`, !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaData);\n  const isVideo = stickerSet.isVideos;\n\n  const firstLetters = useMemo(() => {\n    if ((isVideo && !IS_WEBM_SUPPORTED) || !mediaData) return getFirstLetters(stickerSet.title, 2);\n    return undefined;\n  }, [isVideo, mediaData, stickerSet.title]);\n\n  return (\n    <div ref={ref} className=\"sticker-set-cover\">\n      {firstLetters}\n      {isVideo ? (\n        <video src={mediaData} className={transitionClassNames} loop autoPlay />\n      ) : (\n        <img src={mediaData} className={transitionClassNames} alt=\"\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\n\nimport { STICKER_SIZE_GENERAL_SETTINGS } from '../../../config';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Button from '../../ui/Button';\nimport StickerSetCoverAnimated from '../../middle/composer/StickerSetCoverAnimated';\nimport StickerSetCover from '../../middle/composer/StickerSetCover';\nimport StickerButton from '../../common/StickerButton';\n\nimport './SettingsStickerSet.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst SettingsStickerSet: FC<OwnProps> = ({\n  stickerSet,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  if (!stickerSet || !stickerSet.stickers) {\n    return undefined;\n  }\n\n  const firstSticker = stickerSet.stickers?.[0];\n\n  if (stickerSet.hasThumbnail || !firstSticker) {\n    return (\n      <ListItem\n        narrow\n        className=\"SettingsStickerSet\"\n        inactive={!firstSticker}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => firstSticker && onClick(firstSticker)}\n      >\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          {stickerSet.isLottie ? (\n            <StickerSetCoverAnimated\n              size={STICKER_SIZE_GENERAL_SETTINGS}\n              stickerSet={stickerSet}\n              observeIntersection={observeIntersection}\n            />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet}\n              observeIntersection={observeIntersection}\n            />\n          )}\n        </Button>\n        <div className=\"multiline-menu-item\">\n          <div className=\"title\">{stickerSet.title}</div>\n          <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n        </div>\n      </ListItem>\n    );\n  } else {\n    return (\n      <ListItem\n        narrow\n        className=\"SettingsStickerSet\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onClick(firstSticker)}\n      >\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          observeIntersection={observeIntersection}\n          clickArg={undefined}\n          noContextMenu\n          isCurrentUserPremium\n        />\n        <div className=\"multiline-menu-item\">\n          <div className=\"title\">{stickerSet.title}</div>\n          <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n        </div>\n      </ListItem>\n    );\n  }\n};\n\nexport default memo(SettingsStickerSet);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useCallback, memo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, TimeFormat } from '../../../types';\nimport { SettingsScreens } from '../../../types';\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\n\nimport {\n  getSystemTheme, IS_IOS, IS_MAC_OS, IS_TOUCH_ENV,\n} from '../../../util/environment';\nimport { pick } from '../../../util/iteratees';\nimport { setTimeFormat } from '../../../util/langProvider';\nimport useLang from '../../../hooks/useLang';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport RangeSlider from '../../ui/RangeSlider';\nimport Checkbox from '../../ui/Checkbox';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsStickerSet from './SettingsStickerSet';\nimport StickerSetModal from '../../common/StickerSetModal.async';\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport switchTheme from '../../../util/switchTheme';\nimport { ANIMATION_LEVEL_MAX } from '../../../config';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'messageTextSize' |\n    'animationLevel' |\n    'messageSendKeyCombo' |\n    'shouldSuggestStickers' |\n    'shouldLoopStickers' |\n    'timeFormat'\n  )> & {\n    stickerSetIds?: string[];\n    stickerSetsById?: Record<string, ApiStickerSet>;\n    defaultReaction?: string;\n    theme: ISettings['theme'];\n    shouldUseSystemTheme: boolean;\n  };\n\nconst ANIMATION_LEVEL_OPTIONS = [\n  'Solid and Steady',\n  'Nice and Fast',\n  'Lots of Stuff',\n];\n\nconst TIME_FORMAT_OPTIONS: IRadioOption[] = [{\n  label: '12-hour',\n  value: '12h',\n}, {\n  label: '24-hour',\n  value: '24h',\n}];\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  stickerSetIds,\n  stickerSetsById,\n  defaultReaction,\n  messageTextSize,\n  animationLevel,\n  messageSendKeyCombo,\n  shouldSuggestStickers,\n  shouldLoopStickers,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n}) => {\n  const {\n    setSettingOption,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [sticker, setSticker] = useState<ApiSticker>();\n\n  const lang = useLang();\n\n  const APPEARANCE_THEME_OPTIONS: IRadioOption[] = [{\n    label: lang('EmptyChat.Appearance.Light'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChat.Appearance.Dark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChat.Appearance.System'),\n    value: 'auto',\n  }];\n\n  const KEYBOARD_SEND_OPTIONS = !IS_TOUCH_ENV ? [\n    { value: 'enter', label: lang('lng_settings_send_enter'), subLabel: 'New line by Shift + Enter' },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS ? 'lng_settings_send_cmdenter' : 'lng_settings_send_ctrlenter'),\n      subLabel: 'New line by Enter',\n    },\n  ] : undefined;\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    ANIMATION_LEVEL_OPTIONS.forEach((_, i) => {\n      document.body.classList.toggle(`animation-level-${i}`, newLevel === i);\n    });\n\n    setSettingOption({ animationLevel: newLevel });\n  }, [setSettingOption]);\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSettingOption({ messageTextSize: newSize });\n  }, [setSettingOption]);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ISettings['theme'];\n\n    setSettingOption({ theme: newTheme });\n    setSettingOption({ shouldUseSystemTheme: value === 'auto' });\n    if (newTheme !== theme) {\n      switchTheme(newTheme, animationLevel === ANIMATION_LEVEL_MAX);\n    }\n  }, [animationLevel, setSettingOption, theme]);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSettingOption({ timeFormat: newTimeFormat });\n    setSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, [setSettingOption]);\n\n  const handleStickerSetClick = useCallback((value: ApiSticker) => {\n    setSticker(value);\n    openModal();\n  }, [openModal]);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSettingOption({ messageSendKeyCombo: newCombo });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const handleShouldLoopStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldLoopStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = stickerSetIds && stickerSetIds.map((id: string) => {\n    return stickerSetsById?.[id]?.installedDate ? stickerSetsById[id] : false;\n  }).filter<ApiStickerSet>(Boolean as any);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SETTINGS')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={APPEARANCE_THEME_OPTIONS}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Time Format\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={TIME_FORMAT_OPTIONS}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Animation Level\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Choose the desired animations amount.\n        </p>\n\n        <RangeSlider\n          options={ANIMATION_LEVEL_OPTIONS}\n          value={animationLevel}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      {KEYBOARD_SEND_OPTIONS && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('VoiceOver.Keyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={KEYBOARD_SEND_OPTIONS}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('AccDescrStickers')}</h4>\n\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji reaction={defaultReaction} />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <Checkbox\n          label={lang('LoopAnimatedStickers')}\n          checked={shouldLoopStickers}\n          onCheck={handleShouldLoopStickersChange}\n        />\n\n        <div className=\"mt-4\" ref={stickerSettingsRef}>\n          {stickerSets && stickerSets.map((stickerSet: ApiStickerSet) => (\n            <SettingsStickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              observeIntersection={observeIntersectionForCovers}\n              onClick={handleStickerSetClick}\n            />\n          ))}\n        </div>\n        {sticker && (\n          <StickerSetModal\n            isOpen={isModalOpen}\n            fromSticker={sticker}\n            onClose={closeModal}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { theme, shouldUseSystemTheme } = global.settings.byKey;\n\n    return {\n      ...pick(global.settings.byKey, [\n        'messageTextSize',\n        'animationLevel',\n        'messageSendKeyCombo',\n        'shouldSuggestStickers',\n        'shouldLoopStickers',\n        'isSensitiveEnabled',\n        'canChangeSensitive',\n        'timeFormat',\n      ]),\n      stickerSetIds: global.stickers.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.appConfig?.defaultReaction,\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState, useRef,\n} from '../../../lib/teact/teact';\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\nimport buildClassName from '../../../util/buildClassName';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransition(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransition(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    if (fullMedia) {\n      handleSelect();\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useCallback, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\nimport type { ApiWallpaper } from '../../../api/types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { selectTheme } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<string>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    if (files && files.length > 0) {\n      uploadWallpaper(files[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = global.settings.themes[theme] || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\n\nimport { pick } from '../../../util/iteratees';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\nimport { captureEvents } from '../../../util/captureEvents';\nimport { selectTheme } from '../../../global/selectors';\nimport useFlag from '../../../hooks/useFlag';\nimport buildClassName from '../../../util/buildClassName';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<string>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={color === `#${hex}` ? 'active' : undefined}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = global.settings.themes[theme] || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent } from 'react';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { playNotifySound } from '../../../util/notifications';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  hasPrivateChatsNotifications: boolean;\n  hasPrivateChatsMessagePreview: boolean;\n  hasGroupNotifications: boolean;\n  hasGroupMessagePreview: boolean;\n  hasBroadcastNotifications: boolean;\n  hasBroadcastMessagePreview: boolean;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  hasPrivateChatsNotifications,\n  hasPrivateChatsMessagePreview,\n  hasGroupNotifications,\n  hasGroupMessagePreview,\n  hasBroadcastNotifications,\n  hasBroadcastMessagePreview,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: 'contact' | 'group' | 'broadcast',\n    setting: 'silent' | 'showPreviews',\n  ) => {\n    const currentIsSilent = peerType === 'contact'\n      ? !hasPrivateChatsNotifications\n      : !(peerType === 'group' ? hasGroupNotifications : hasBroadcastNotifications);\n    const currentShouldShowPreviews = peerType === 'contact'\n      ? hasPrivateChatsMessagePreview\n      : (peerType === 'group' ? hasGroupMessagePreview : hasBroadcastMessagePreview);\n\n    updateNotificationSettings({\n      peerType,\n      ...(setting === 'silent' && { isSilent: !e.target.checked, shouldShowPreviews: currentShouldShowPreviews }),\n      ...(setting === 'showPreviews' && { shouldShowPreviews: e.target.checked, isSilent: currentIsSilent }),\n    });\n  }, [\n    hasBroadcastMessagePreview, hasBroadcastNotifications,\n    hasGroupMessagePreview, hasGroupNotifications,\n    hasPrivateChatsMessagePreview, hasPrivateChatsNotifications,\n    updateNotificationSettings,\n  ]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasWebNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'silent');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Web notifications\n        </h4>\n        <Checkbox\n          label=\"Web notifications\"\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasWebNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasWebNotifications}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label=\"Offline notifications\"\n          disabled={!hasWebNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPushNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label=\"Sound\"\n            min={0}\n            max={10}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsNotifications}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasPrivateChatsNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsMessagePreview}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(hasGroupNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupNotifications}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasGroupNotifications}\n          subLabel={lang(hasGroupMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupMessagePreview}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastNotifications}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasBroadcastNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastMessagePreview}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasPrivateChatsNotifications: Boolean(global.settings.byKey.hasPrivateChatsNotifications),\n      hasPrivateChatsMessagePreview: Boolean(global.settings.byKey.hasPrivateChatsMessagePreview),\n      hasGroupNotifications: Boolean(global.settings.byKey.hasGroupNotifications),\n      hasGroupMessagePreview: Boolean(global.settings.byKey.hasGroupMessagePreview),\n      hasBroadcastNotifications: Boolean(global.settings.byKey.hasBroadcastNotifications),\n      hasBroadcastMessagePreview: Boolean(global.settings.byKey.hasBroadcastMessagePreview),\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  privacyPhoneNumber?: ApiPrivacySettings;\n  privacyLastSeen?: ApiPrivacySettings;\n  privacyProfilePhoto?: ApiPrivacySettings;\n  privacyForwarding?: ApiPrivacySettings;\n  privacyGroupChats?: ApiPrivacySettings;\n  privacyPhoneCall?: ApiPrivacySettings;\n  privacyPhoneP2P?: ApiPrivacySettings;\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  shouldArchiveAndMuteNewNonContact,\n  privacyPhoneNumber,\n  privacyLastSeen,\n  privacyProfilePhoto,\n  privacyForwarding,\n  privacyGroupChats,\n  privacyPhoneCall,\n  privacyPhoneP2P,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedContacts,\n    loadAuthorizations,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n  } = getActions();\n\n  useEffect(() => {\n    loadBlockedContacts();\n    loadAuthorizations();\n    loadPrivacySettings();\n    loadContentSettings();\n    loadWebAuthorizations();\n  }, [loadBlockedContacts, loadAuthorizations, loadPrivacySettings, loadContentSettings, loadWebAuthorizations]);\n\n  useEffect(() => {\n    if (isActive) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, loadGlobalPrivacySettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    const { visibility } = setting || {};\n    const blockCount = setting ? setting.blockChatIds.length + setting.blockUserIds.length : 0;\n    const allowCount = setting ? setting.allowChatIds.length + setting.allowUserIds.length : 0;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount) total.push(`+${allowCount}`);\n\n    const exceptionString = total.length ? `(${total.join(',')})` : '';\n\n    switch (visibility) {\n      case 'everybody':\n        return `${lang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${lang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${lang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"delete-user\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('BlockedUsers')}</span>\n            {blockedCount > 0 && (\n              <span className=\"subtitle\" dir=\"auto\">\n                {lang('Users', blockedCount)}\n              </span>\n            )}\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {lang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"key\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n          )}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('Passcode')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {lang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {lang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyPhoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyLastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyProfilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyPhoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneP2P)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyP2P')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyPhoneP2P)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyForwarding)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyGroupChats)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('NewChatsFromNonContacts')}\n        </h4>\n        <Checkbox\n          label={lang('ArchiveAndMute')}\n          subLabel={lang('ArchiveAndMuteInfo')}\n          checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n          onCheck={handleArchiveAndMuteChange}\n        />\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={lang('lng_settings_sensitive_disable_filtering')}\n            subLabel={lang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={updateContentSettings}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n    } = global;\n\n    return {\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      privacyPhoneNumber: privacy.phoneNumber,\n      privacyLastSeen: privacy.lastSeen,\n      privacyProfilePhoto: privacy.profilePhoto,\n      privacyForwarding: privacy.forwards,\n      privacyGroupChats: privacy.chatInvite,\n      privacyPhoneCall: privacy.phoneCall,\n      privacyPhoneP2P: privacy.phoneP2P,\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, LangCode } from '../../../types';\nimport type { ApiLanguage } from '../../../api/types';\n\nimport { setLanguage } from '../../../util/langProvider';\n\nimport RadioGroup from '../../ui/RadioGroup';\nimport Loading from '../../ui/Loading';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, 'languages' | 'language'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  languages,\n  language,\n}) => {\n  const {\n    loadLanguages,\n    setSettingOption,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  // TODO Throttle\n  useEffect(() => {\n    loadLanguages();\n  }, [loadLanguages]);\n\n  const handleChange = useCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void setLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSettingOption({ language: langCode });\n    });\n  }, [markIsLoading, unmarkIsLoading, setSettingOption]);\n\n  const options = useMemo(() => {\n    return languages ? buildOptions(languages) : undefined;\n  }, [languages]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n  return (\n    <div className=\"settings-content settings-item settings-language custom-scroll settings-item--first\">\n      {options ? (\n        <RadioGroup\n          name=\"keyboard-send-settings\"\n          options={options}\n          selected={selectedLanguage}\n          loadingOption={isLoading ? selectedLanguage : undefined}\n          onChange={handleChange}\n        />\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nfunction buildOptions(languages: ApiLanguage[]) {\n  const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n  const shortLangCode = currentLangCode.substr(0, 2);\n  return languages.map(({ langCode, nativeName, name }) => ({\n    value: langCode,\n    label: nativeName,\n    subLabel: name,\n  })).sort((a) => {\n    return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n  });\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    let languages = global.settings.byKey.languages;\n    languages = [];\n    languages.push({\n      langCode: \"en\", name: \"English\", nativeName: \"English\", pluralCode: \"en\",\n      stringsCount: 0, translatedCount: 0, translationsUrl: \"\"\n    })\n    languages.push({\n      langCode: \"zh-rCN\", name: \"简体中文\", nativeName: \"简体中文\", pluralCode: \"zh-rcn\",\n      stringsCount: 0, translatedCount: 0, translationsUrl: \"\"\n    })\n    return {\n      languages ,\n      language: global.settings.byKey.language,\n    };\n  },\n)(SettingsLanguage));\n","import type { ApiPrivacyKey } from '../../../../types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n  }\n\n  return undefined;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport { getPrivacyKey } from './helpers/privacy';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Partial<ApiPrivacySettings> & {\n    chatsById?: Record<string, ApiChat>;\n    usersById?: Record<string, ApiUser>;\n  };\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  onScreenSelect,\n  onReset,\n  visibility,\n  allowUserIds,\n  allowChatIds,\n  blockUserIds,\n  blockChatIds,\n  chatsById,\n}) => {\n  const { setPrivacyVisibility } = getActions();\n\n  const lang = useLang();\n\n  const visibilityOptions = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyGroupChats:\n        return [\n          { value: 'everybody', label: lang('P2PEverybody') },\n          { value: 'contacts', label: lang('P2PContacts') },\n        ];\n\n      default:\n        return [\n          { value: 'everybody', label: lang('P2PEverybody') },\n          { value: 'contacts', label: lang('P2PContacts') },\n          { value: 'nobody', label: lang('P2PNobody') },\n        ];\n    }\n  }, [lang, screen]);\n\n  const exceptionLists = {\n    shouldShowDenied: visibility !== 'nobody',\n    shouldShowAllowed: visibility !== 'everybody',\n  };\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return lang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return lang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return lang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return lang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return lang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return lang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [lang, screen]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('CustomHelp');\n      default:\n        return undefined;\n    }\n  }, [lang, screen]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  const allowedCount = useMemo(() => {\n    if (!allowUserIds || !allowChatIds || !chatsById) {\n      return 0;\n    }\n\n    return allowChatIds.reduce((result, chatId) => {\n      return result + (chatsById[chatId] ? chatsById[chatId].membersCount! : 0);\n    }, allowUserIds.length);\n  }, [allowChatIds, allowUserIds, chatsById]);\n\n  const blockCount = useMemo(() => {\n    if (!blockUserIds || !blockChatIds || !chatsById) {\n      return 0;\n    }\n\n    return blockChatIds.reduce((result, chatId) => {\n      return result + (chatsById[chatId] ? chatsById[chatId].membersCount! : 0);\n    }, blockUserIds.length);\n  }, [blockChatIds, blockUserIds, chatsById]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey,\n      visibility: value,\n    });\n  }, [privacyKey, setPrivacyVisibility]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={visibility}\n        />\n\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PrivacyExceptions')}</h4>\n\n        {exceptionLists.shouldShowAllowed && (\n          <ListItem\n            narrow\n            icon=\"add-user\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => {\n              onScreenSelect(allowedContactsScreen);\n            }}\n          >\n            <div className=\"multiline-menu-item full-size\">\n              {allowedCount > 0 && <span className=\"date\" dir=\"auto\">+{allowedCount}</span>}\n              <span className=\"title\">{lang('AlwaysAllow')}</span>\n              <span className=\"subtitle\">{lang('EditAdminAddUsers')}</span>\n            </div>\n          </ListItem>\n        )}\n        {exceptionLists.shouldShowDenied && (\n          <ListItem\n            narrow\n            icon=\"delete-user\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => {\n              onScreenSelect(deniedContactsScreen);\n            }}\n          >\n            <div className=\"multiline-menu-item full-size\">\n              {blockCount > 0 && <span className=\"date\" dir=\"auto\">&minus;{blockCount}</span>}\n              <span className=\"title\">{lang('NeverAllow')}</span>\n              <span className=\"subtitle\">{lang('EditAdminAddUsers')}</span>\n            </div>\n          </ListItem>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let privacySettings: ApiPrivacySettings | undefined;\n\n    const {\n      chats: { byId: chatsById },\n      settings: { privacy },\n    } = global;\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        privacySettings = privacy.phoneNumber;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        privacySettings = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        privacySettings = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyPhoneCall:\n        privacySettings = privacy.phoneCall;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n        privacySettings = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        privacySettings = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        privacySettings = privacy.chatInvite;\n        break;\n    }\n\n    if (!privacySettings) {\n      return {};\n    }\n\n    return {\n      ...privacySettings,\n      chatsById,\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { ApiSession } from '../../../../api/types';\n\nexport default function getSessionIcon(session: ApiSession): string {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"src-components-left-settings-SettingsActiveSession-module__SettingsActiveSession\",\"settingsActiveSession\":\"src-components-left-settings-SettingsActiveSession-module__SettingsActiveSession\",\"iconDevice\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice\",\"iconDevice__android\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__android\",\"iconDeviceAndroid\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__android\",\"iconDevice__apple\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__apple\",\"iconDeviceApple\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__apple\",\"iconDevice__brave\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__brave\",\"iconDeviceBrave\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__brave\",\"iconDevice__chrome\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__chrome\",\"iconDeviceChrome\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__chrome\",\"iconDevice__edge\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__edge\",\"iconDeviceEdge\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__edge\",\"iconDevice__firefox\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__firefox\",\"iconDeviceFirefox\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__firefox\",\"iconDevice__linux\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__linux\",\"iconDeviceLinux\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__linux\",\"iconDevice__opera\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__opera\",\"iconDeviceOpera\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__opera\",\"iconDevice__safari\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__safari\",\"iconDeviceSafari\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__safari\",\"iconDevice__samsung\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__samsung\",\"iconDeviceSamsung\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__samsung\",\"iconDevice__ubuntu\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__ubuntu\",\"iconDeviceUbuntu\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__ubuntu\",\"iconDevice__unknown\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__unknown\",\"iconDeviceUnknown\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__unknown\",\"iconDevice__vivaldi\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__vivaldi\",\"iconDeviceVivaldi\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__vivaldi\",\"iconDevice__windows\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__windows\",\"iconDeviceWindows\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__windows\",\"iconDevice__xbox\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__xbox\",\"iconDeviceXbox\":\"src-components-left-settings-SettingsActiveSession-module__iconDevice__xbox\",\"title\":\"src-components-left-settings-SettingsActiveSession-module__title\",\"note\":\"src-components-left-settings-SettingsActiveSession-module__note\",\"date\":\"src-components-left-settings-SettingsActiveSession-module__date\",\"box\":\"src-components-left-settings-SettingsActiveSession-module__box\",\"actionHeader\":\"src-components-left-settings-SettingsActiveSession-module__actionHeader\",\"actionName\":\"src-components-left-settings-SettingsActiveSession-module__actionName\",\"headerButton\":\"src-components-left-settings-SettingsActiveSession-module__headerButton\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatDateTimeToString } from '../../../util/dateFormat';\nimport useLang from '../../../hooks/useLang';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport getSessionIcon from './helpers/getSessionIcon';\nimport buildClassName from '../../../util/buildClassName';\n\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\nimport Button from '../../ui/Button';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dateFormat';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport ListItem from '../../ui/ListItem';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n    if (ttlDays <= 7) {\n      return '7';\n    }\n    if (ttlDays <= 30) {\n      return '30';\n    }\n    if (ttlDays <= 93) {\n      return '90';\n    }\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => [{\n    label: lang('Weeks', 1, 'i'),\n    value: '7',\n  }, {\n    label: lang('Months', 1, 'i'),\n    value: '30',\n  }, {\n    label: lang('Months', 3, 'i'),\n    value: '90',\n  }, {\n    label: lang('Months', 6, 'i'),\n    value: '183',\n  }], [lang]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)} icon-device`}>\n          <div className=\"multiline-menu-item\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p>{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)} icon-device`}\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","import React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\n\nimport Modal from '../../ui/Modal';\nimport Button from '../../ui/Button';\nimport Avatar from '../../common/Avatar';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen, session, bot, onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar className={styles.avatar} user={renderingBot} size=\"large\" />\n      <h3 className={styles.title} dir=\"auto\">{getUserFullName(renderingBot)}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"src-components-left-settings-SettingsActiveWebsite-module__root\",\"avatar\":\"src-components-left-settings-SettingsActiveWebsite-module__avatar\",\"title\":\"src-components-left-settings-SettingsActiveWebsite-module__title\",\"note\":\"src-components-left-settings-SettingsActiveWebsite-module__note\",\"date\":\"src-components-left-settings-SettingsActiveWebsite-module__date\",\"box\":\"src-components-left-settings-SettingsActiveWebsite-module__box\",\"action-header\":\"src-components-left-settings-SettingsActiveWebsite-module__action-header\",\"actionHeader\":\"src-components-left-settings-SettingsActiveWebsite-module__action-header\",\"action-name\":\"src-components-left-settings-SettingsActiveWebsite-module__action-name\",\"actionName\":\"src-components-left-settings-SettingsActiveWebsite-module__action-name\",\"header-button\":\"src-components-left-settings-SettingsActiveWebsite-module__header-button\",\"headerButton\":\"src-components-left-settings-SettingsActiveWebsite-module__header-button\"};","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"src-components-left-settings-SettingsActiveWebsites-module__avatar\",\"clear-help\":\"src-components-left-settings-SettingsActiveWebsites-module__clear-help\",\"clearHelp\":\"src-components-left-settings-SettingsActiveWebsites-module__clear-help\"};","import React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiWebSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dateFormat';\nimport { getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\nimport Avatar from '../../common/Avatar';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} user={bot} size=\"tiny\" />\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{getUserFullName(bot)}</span>\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className=\"subtitle\">{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useMemo, useState, memo, useRef, useCallback, useEffect,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName, getUserFullName } from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport useLang from '../../../hooks/useLang';\n\nimport ChatOrUserPicker from '../../common/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockContact,\n  } = getActions();\n\n  const lang = useLang();\n  const [filter, setFilter] = useState('');\n  // eslint-disable-next-line no-null/no-null\n  const filterRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    setUserSearchQuery({ query: filter });\n  }, [filter, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterUsersByName(availableContactIds, usersById, filter)\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, filter, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    const { id: contactId, accessHash } = usersById[userId] || {};\n    if (!contactId || !accessHash) {\n      return;\n    }\n    blockContact({ contactId, accessHash });\n    onClose();\n  }, [blockContact, onClose, usersById]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      filterRef={filterRef}\n      filterPlaceholder={lang('BlockedUsers.BlockUser')}\n      filter={filter}\n      onFilterChange={setFilter}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: global.userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport {\n  getChatTitle, getUserFullName, isUserId,\n} from '../../../global/helpers';\nimport renderText from '../../common/helpers/renderText';\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useFlag from '../../../hooks/useFlag';\n\nimport ListItem from '../../ui/ListItem';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Avatar from '../../common/Avatar';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockContact } = getActions();\n\n  const lang = useLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((contactId: string) => {\n    unblockContact({ contactId });\n  }, [unblockContact]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = isPrivate ? usersByIds[contactId] : undefined;\n    const chat = !isPrivate ? chatsByIds[contactId] : undefined;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    return (\n      <ListItem\n        key={contactId}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar size=\"medium\" user={user} chat={chat} noVideo />\n        <div className=\"contact-info\" dir=\"auto\">\n          <h3 dir=\"auto\">{renderText((isPrivate ? getUserFullName(user) : getChatTitle(lang, chat!)) || '')}</h3>\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {user && !user.phoneNumber && user.username && (\n            <div className=\"contact-username\" dir=\"auto\">@{user.username}</div>\n          )}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <i className=\"icon-add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport ListItem from '../../../ui/ListItem';\nimport renderText from '../../../common/helpers/renderText';\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport PasswordMonkey from '../../common/PasswordMonkey';\nimport PasswordForm from '../../common/PasswordForm';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\n\nimport Button from '../../../ui/Button';\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { IS_SINGLE_COLUMN_LAYOUT, IS_TOUCH_ENV } from '../../../../util/environment';\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport renderText from '../../../common/helpers/renderText';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\n\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport InputText from '../../../ui/InputText';\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst FOCUS_DELAY_TIMEOUT_MS = IS_SINGLE_COLUMN_LAYOUT ? 550 : 400;\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, FOCUS_DELAY_TIMEOUT_MS);\n    }\n  }, []);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\n\nimport Button from '../../../ui/Button';\nimport AnimatedIcon from '../../../common/AnimatedIcon';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { IS_SINGLE_COLUMN_LAYOUT, IS_TOUCH_ENV } from '../../../../util/environment';\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\n\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n};\n\nconst FOCUS_DELAY_TIMEOUT_MS = IS_SINGLE_COLUMN_LAYOUT ? 550 : 400;\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, FOCUS_DELAY_TIMEOUT_MS);\n    }\n  }, []);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport useLang from '../../../../hooks/useLang';\n\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  error,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  const lang = useLang();\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          placeholder={lang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={lang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../config';\nimport { unique } from '../../../util/iteratees';\nimport { filterChatsByName, isUserId } from '../../../global/helpers';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport Picker from '../../common/Picker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  screen,\n  isActive,\n  onScreenSelect,\n  onReset,\n  currentUserId,\n  settings,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const lang = useLang();\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => {\n        const chat = chatsById[chatId];\n\n        return chat && isUserId(chat.id) && chat.id !== currentUserId;\n      });\n\n    return unique([\n      ...selectedContactIds,\n      ...filterChatsByName(lang, chatIds, chatsById, searchQuery),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, lang, searchQuery, currentUserId]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen),\n      isAllowList: Boolean(isAllowList),\n      contactsIds: newSelectedContactIds,\n    });\n\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [isAllowList, newSelectedContactIds, onScreenSelect, screen, setPrivacySettings]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <Picker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? lang('AlwaysAllowPlaceholder') : lang('NeverAllowPlaceholder')}\n        searchInputId=\"new-group-picker-search\"\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? lang('AlwaysAllow') : lang('NeverAllow')}\n      >\n        <i className=\"icon-arrow-right\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  isPremium?: boolean;\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  isPremium,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = availableReactions?.filter((l) => (\n    !(l.isInactive || (!isPremium && l.isPremium))\n  )).map((l) => {\n    return {\n      label: <><ReactionStaticEmoji reaction={l.reaction} />{l.title}</>,\n      value: l.reaction,\n    };\n  }) || [];\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({ reaction });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { availableReactions, appConfig } = global;\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      availableReactions,\n      selectedReaction: appConfig?.defaultReaction,\n      isPremium,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\n\nimport Button from '../../../ui/Button';\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram WebZ.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram WebZ and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport ListItem from '../../../ui/ListItem';\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\n\nimport Button from '../../../ui/Button';\nimport AnimatedIcon from '../../../common/AnimatedIcon';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport useLang from '../../../../hooks/useLang';\nimport { decryptSession } from '../../../../util/passcode';\n\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\n\nimport { getActions } from '../../../global';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsExperimental: FC<OwnProps> = ({\n  isActive,\n  onReset,\n}) => {\n  const { requestConfetti } = getActions();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => requestConfetti()}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsExperimental);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../types';\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/environment';\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\n\nimport Transition from '../../ui/Transition';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsMain from './SettingsMain';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport SettingsExperimental from './SettingsExperimental';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  const handleReset = useCallback((forceReturnToChatList?: true | Event) => {\n    if (forceReturnToChatList === true) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    foldersState.mode, foldersDispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const handleSaveFilter = useCallback(() => {\n    foldersDispatch({ type: 'saveFilters' });\n    handleReset();\n  }, [foldersDispatch, handleReset]);\n\n  function renderCurrentSectionContent(isScreenActive: boolean, screen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(screen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(screen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(screen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(screen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(screen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).includes(screen.toString())\n      || Object.values(privacyAllowScreens).find((key) => key === true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || screen === SettingsScreens.GeneralChatBackgroundColor\n              || screen === SettingsScreens.GeneralChatBackground\n              || screen === SettingsScreens.QuickReaction\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || screen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={screen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={screen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={screen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(isScreenActive: boolean, isFrom: boolean, currentKey: SettingsScreens) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, currentKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","import React, { FC, memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { ComponentsScreens } from '../../../types';\nimport useLang from '../../../hooks/useLang';\n\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  currentScreen: ComponentsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: ComponentsScreens) => void;\n};\n\nconst ComponentsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n}) => {\n  const {\n    signOut,\n    deleteChatFolder,\n  } = getActions();\n\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n  const [isDeleteFolderDialogOpen, setIsDeleteFolderDialogOpen] = useState(false);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const closeDeleteFolderConfirmation = useCallback(() => {\n    setIsDeleteFolderDialogOpen(false);\n  }, []);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut();\n  }, [closeSignOutConfirmation, signOut]);\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteFolderConfirmation();\n    deleteChatFolder({ id: editedFolderId });\n    onReset();\n  }, [editedFolderId, closeDeleteFolderConfirmation, deleteChatFolder, onReset]);\n\n  const lang = useLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case ComponentsScreens.UI:\n        return <h3>{lang('UI')}</h3>;\n      case ComponentsScreens.Icons:\n        return <h3>{lang('Icons')}</h3>;\n      case ComponentsScreens.Buttons:\n        return <h3>{lang('Buttons')}</h3>;\n      case ComponentsScreens.DropdownMenu:\n        return <h3>{lang('DropdownMenu')}</h3>;\n      case ComponentsScreens.Tab:\n        return <h3>{lang('Tab')}</h3>;\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{lang('Components')}</h3>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={lang('AccDescrGoBack')}\n      >\n        <i className=\"icon-arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n    </div>\n  );\n};\n\nexport default memo(ComponentsHeader);\n","import React, { FC, memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { ComponentsScreens } from '../../../types';\nimport { ApiUser } from '../../../api/types';\n\nimport { selectUser } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: ComponentsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUser?: ApiUser;\n  lastSyncTime?: number;\n};\n\nconst ComponentsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  currentUser,\n  lastSyncTime,\n}) => {\n  const { loadProfilePhotos } = getActions();\n\n  const lang = useLang();\n  const profileId = currentUser?.id;\n\n  useEffect(() => {\n    if (profileId && lastSyncTime) {\n      loadProfilePhotos({ profileId });\n    }\n  }, [lastSyncTime, profileId, loadProfilePhotos]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"italic\"\n          onClick={() => onScreenSelect(ComponentsScreens.UI)}\n        >\n          {lang('UI')}\n        </ListItem>\n        <ListItem\n          icon=\"italic\"\n          onClick={() => onScreenSelect(ComponentsScreens.Icons)}\n        >\n          {lang('Icons')}\n        </ListItem>\n        <ListItem\n          icon=\"italic\"\n          onClick={() => onScreenSelect(ComponentsScreens.Buttons)}\n        >\n          {lang('Buttons')}\n        </ListItem>\n        <ListItem\n          icon=\"italic\"\n          onClick={() => onScreenSelect(ComponentsScreens.DropdownMenu)}\n        >\n          {lang('DropdownMenu')}\n        </ListItem>\n        <ListItem\n          icon=\"italic\"\n          onClick={() => onScreenSelect(ComponentsScreens.Tab)}\n        >\n          {lang('Tab')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId, lastSyncTime } = global;\n\n    return {\n      currentUser: currentUserId ? selectUser(global, currentUserId) : undefined,\n      lastSyncTime,\n    };\n  },\n)(ComponentsMain));\n","import React from '../../../../lib/teact/teact';\nimport useLang from '../../../../hooks/useLang';\nimport { copyTextToClipboard } from '../../../../util/clipboard';\nimport { getActions } from '../../../../global';\nimport ListItem from '../../../ui/ListItem';\n\nconst IconView = () => {\n  const lang = useLang();\n  const iconsStr = `icon-loop\n        icon-skip-next\n        icon-skip-previous\n        icon-volume-1\n        icon-volume-2\n        icon-volume-3\n        icon-stats\n        icon-copy-media\n        icon-reaction-filled\n        icon-reactions\n        icon-sidebar\n        icon-video-stop\n        icon-speaker\n        icon-speaker-outline\n        icon-phone-discard-outline\n        icon-allow-speak\n        icon-stop-raising-hand\n        icon-share-screen\n        icon-voice-chat\n        icon-video\n        icon-noise-suppression\n        icon-phone-discard\n        icon-bot-commands-filled\n        icon-reply-filled\n        icon-bug\n        icon-data\n        icon-darkmode\n        icon-animations\n        icon-enter\n        icon-fontsize\n        icon-permissions\n        icon-card\n        icon-truck\n        icon-share-filled\n        icon-bold\n        icon-bot-command\n        icon-calendar-filter\n        icon-comments\n        icon-comments-sticker\n        icon-arrow-down\n        icon-email\n        icon-italic\n        icon-link\n        icon-mention\n        icon-monospace\n        icon-next\n        icon-password-off\n        icon-pin-list\n        icon-previous\n        icon-replace\n        icon-schedule\n        icon-strikethrough\n        icon-underlined\n        icon-zoom-in\n        icon-zoom-out\n        icon-select\n        icon-folder\n        icon-bots\n        icon-calendar\n        icon-cloud-download\n        icon-colorize\n        icon-forward\n        icon-reply\n        icon-help\n        icon-info\n        icon-info-filled\n        icon-delete-filled\n        icon-delete\n        icon-edit\n        icon-new-chat-filled\n        icon-send\n        icon-send-outline\n        icon-add-user-filled\n        icon-add-user\n        icon-delete-user\n        icon-microphone\n        icon-microphone-alt\n        icon-poll\n        icon-revote\n        icon-photo\n        icon-document\n        icon-camera\n        icon-camera-add\n        icon-logout\n        icon-saved-messages\n        icon-settings\n        icon-phone\n        icon-attach\n        icon-copy\n        icon-channel\n        icon-group\n        icon-user\n        icon-non-contacts\n        icon-active-sessions\n        icon-admin\n        icon-download\n        icon-location\n        icon-stop\n        icon-archive\n        icon-unarchive\n        icon-readchats\n        icon-unread\n        icon-message\n        icon-lock\n        icon-unlock\n        icon-mute\n        icon-unmute\n        icon-pin\n        icon-unpin\n        icon-smallscreen\n        icon-fullscreen\n        icon-large-pause\n        icon-large-play\n        icon-pause\n        icon-play\n        icon-channelviews\n        icon-message-succeeded\n        icon-message-read\n        icon-message-pending\n        icon-message-failed\n        icon-favorite\n        icon-keyboard\n        icon-delete-left\n        icon-recent\n        icon-gifs\n        icon-stickers\n        icon-smile\n        icon-animals\n        icon-eats\n        icon-sport\n        icon-car\n        icon-lamp\n        icon-language\n        icon-flag\n        icon-more\n        icon-search\n        icon-remove\n        icon-add\n        icon-check\n        icon-close\n        icon-arrow-left\n        icon-arrow-right\n        icon-down\n        icon-up\n        icon-eye-closed\n        icon-eye\n        icon-muted\n        icon-avatar-archived-chats\n        icon-avatar-deleted-account\n        icon-avatar-saved-messages\n        icon-pinned-chat`\n  const faiIcons = [\"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"a\",\n    \"address-book\",\n    \"contact-book\",\n    \"address-card\",\n    \"contact-card\",\n    \"vcard\",\n    \"align-center\",\n    \"align-justify\",\n    \"align-left\",\n    \"align-right\",\n    \"anchor\",\n    \"anchor-circle-check\",\n    \"anchor-circle-exclamation\",\n    \"anchor-circle-xmark\",\n    \"anchor-lock\",\n    \"angle-down\",\n    \"angle-left\",\n    \"angle-right\",\n    \"angle-up\",\n    \"angles-down\",\n    \"angle-double-down\",\n    \"angles-left\",\n    \"angle-double-left\",\n    \"angles-right\",\n    \"angle-double-right\",\n    \"angles-up\",\n    \"angle-double-up\",\n    \"ankh\",\n    \"apple-whole\",\n    \"apple-alt\",\n    \"archway\",\n    \"arrow-down\",\n    \"arrow-down-1-9\",\n    \"sort-numeric-asc\",\n    \"sort-numeric-down\",\n    \"arrow-down-9-1\",\n    \"sort-numeric-desc\",\n    \"sort-numeric-down-alt\",\n    \"arrow-down-a-z\",\n    \"sort-alpha-asc\",\n    \"sort-alpha-down\",\n    \"arrow-down-long\",\n    \"long-arrow-down\",\n    \"arrow-down-short-wide\",\n    \"sort-amount-desc\",\n    \"sort-amount-down-alt\",\n    \"arrow-down-up-across-line\",\n    \"arrow-down-up-lock\",\n    \"arrow-down-wide-short\",\n    \"sort-amount-asc\",\n    \"sort-amount-down\",\n    \"arrow-down-z-a\",\n    \"sort-alpha-desc\",\n    \"sort-alpha-down-alt\",\n    \"arrow-left\",\n    \"arrow-left-long\",\n    \"long-arrow-left\",\n    \"arrow-pointer\",\n    \"mouse-pointer\",\n    \"arrow-right\",\n    \"arrow-right-arrow-left\",\n    \"exchange\",\n    \"arrow-right-from-bracket\",\n    \"sign-out\",\n    \"arrow-right-long\",\n    \"long-arrow-right\",\n    \"arrow-right-to-bracket\",\n    \"sign-in\",\n    \"arrow-right-to-city\",\n    \"arrow-rotate-left\",\n    \"arrow-left-rotate\",\n    \"arrow-rotate-back\",\n    \"arrow-rotate-backward\",\n    \"undo\",\n    \"arrow-rotate-right\",\n    \"arrow-right-rotate\",\n    \"arrow-rotate-forward\",\n    \"redo\",\n    \"arrow-trend-down\",\n    \"arrow-trend-up\",\n    \"arrow-turn-down\",\n    \"level-down\",\n    \"arrow-turn-up\",\n    \"level-up\",\n    \"arrow-up\",\n    \"arrow-up-1-9\",\n    \"sort-numeric-up\",\n    \"arrow-up-9-1\",\n    \"sort-numeric-up-alt\",\n    \"arrow-up-a-z\",\n    \"sort-alpha-up\",\n    \"arrow-up-from-bracket\",\n    \"arrow-up-from-ground-water\",\n    \"arrow-up-from-water-pump\",\n    \"arrow-up-long\",\n    \"long-arrow-up\",\n    \"arrow-up-right-dots\",\n    \"arrow-up-right-from-square\",\n    \"external-link\",\n    \"arrow-up-short-wide\",\n    \"sort-amount-up-alt\",\n    \"arrow-up-wide-short\",\n    \"sort-amount-up\",\n    \"arrow-up-z-a\",\n    \"sort-alpha-up-alt\",\n    \"arrows-down-to-line\",\n    \"arrows-down-to-people\",\n    \"arrows-left-right\",\n    \"arrows-h\",\n    \"arrows-left-right-to-line\",\n    \"arrows-rotate\",\n    \"refresh\",\n    \"sync\",\n    \"arrows-spin\",\n    \"arrows-split-up-and-left\",\n    \"arrows-to-circle\",\n    \"arrows-to-dot\",\n    \"arrows-to-eye\",\n    \"arrows-turn-right\",\n    \"arrows-turn-to-dots\",\n    \"arrows-up-down\",\n    \"arrows-v\",\n    \"arrows-up-down-left-right\",\n    \"arrows\",\n    \"arrows-up-to-line\",\n    \"asterisk\",\n    \"at\",\n    \"atom\",\n    \"audio-description\",\n    \"austral-sign\",\n    \"award\",\n    \"b\",\n    \"baby\",\n    \"baby-carriage\",\n    \"carriage-baby\",\n    \"backward\",\n    \"backward-fast\",\n    \"fast-backward\",\n    \"backward-step\",\n    \"step-backward\",\n    \"bacon\",\n    \"bacteria\",\n    \"bacterium\",\n    \"bag-shopping\",\n    \"shopping-bag\",\n    \"bahai\",\n    \"haykal\",\n    \"baht-sign\",\n    \"ban\",\n    \"cancel\",\n    \"ban-smoking\",\n    \"smoking-ban\",\n    \"bandage\",\n    \"band-aid\",\n    \"barcode\",\n    \"bars\",\n    \"navicon\",\n    \"bars-progress\",\n    \"tasks-alt\",\n    \"bars-staggered\",\n    \"reorder\",\n    \"stream\",\n    \"baseball\",\n    \"baseball-ball\",\n    \"baseball-bat-ball\",\n    \"basket-shopping\",\n    \"shopping-basket\",\n    \"basketball\",\n    \"basketball-ball\",\n    \"bath\",\n    \"bathtub\",\n    \"battery-empty\",\n    \"battery-0\",\n    \"battery-full\",\n    \"battery\",\n    \"battery-5\",\n    \"battery-half\",\n    \"battery-3\",\n    \"battery-quarter\",\n    \"battery-2\",\n    \"battery-three-quarters\",\n    \"battery-4\",\n    \"bed\",\n    \"bed-pulse\",\n    \"procedures\",\n    \"beer-mug-empty\",\n    \"beer\",\n    \"bell\",\n    \"bell-concierge\",\n    \"concierge-bell\",\n    \"bell-slash\",\n    \"bezier-curve\",\n    \"bicycle\",\n    \"binoculars\",\n    \"biohazard\",\n    \"bitcoin-sign\",\n    \"blender\",\n    \"blender-phone\",\n    \"blog\",\n    \"bold\",\n    \"bolt\",\n    \"zap\",\n    \"bolt-lightning\",\n    \"bomb\",\n    \"bone\",\n    \"bong\",\n    \"book\",\n    \"book-atlas\",\n    \"atlas\",\n    \"book-bible\",\n    \"bible\",\n    \"book-bookmark\",\n    \"book-journal-whills\",\n    \"journal-whills\",\n    \"book-medical\",\n    \"book-open\",\n    \"book-open-reader\",\n    \"book-reader\",\n    \"book-quran\",\n    \"quran\",\n    \"book-skull\",\n    \"book-dead\",\n    \"book-tanakh\",\n    \"tanakh\",\n    \"bookmark\",\n    \"border-all\",\n    \"border-none\",\n    \"border-top-left\",\n    \"border-style\",\n    \"bore-hole\",\n    \"bottle-droplet\",\n    \"bottle-water\",\n    \"bowl-food\",\n    \"bowl-rice\",\n    \"bowling-ball\",\n    \"box\",\n    \"box-archive\",\n    \"archive\",\n    \"box-open\",\n    \"box-tissue\",\n    \"boxes-packing\",\n    \"boxes-stacked\",\n    \"boxes\",\n    \"boxes-alt\",\n    \"braille\",\n    \"brain\",\n    \"brazilian-real-sign\",\n    \"bread-slice\",\n    \"bridge\",\n    \"bridge-circle-check\",\n    \"bridge-circle-exclamation\",\n    \"bridge-circle-xmark\",\n    \"bridge-lock\",\n    \"bridge-water\",\n    \"briefcase\",\n    \"briefcase-medical\",\n    \"broom\",\n    \"broom-ball\",\n    \"quidditch\",\n    \"quidditch-broom-ball\",\n    \"brush\",\n    \"bucket\",\n    \"bug\",\n    \"bug-slash\",\n    \"bugs\",\n    \"building\",\n    \"building-circle-arrow-right\",\n    \"building-circle-check\",\n    \"building-circle-exclamation\",\n    \"building-circle-xmark\",\n    \"building-columns\",\n    \"bank\",\n    \"institution\",\n    \"museum\",\n    \"university\",\n    \"building-flag\",\n    \"building-lock\",\n    \"building-ngo\",\n    \"building-shield\",\n    \"building-un\",\n    \"building-user\",\n    \"building-wheat\",\n    \"bullhorn\",\n    \"bullseye\",\n    \"burger\",\n    \"hamburger\",\n    \"burst\",\n    \"bus\",\n    \"bus-simple\",\n    \"bus-alt\",\n    \"business-time\",\n    \"briefcase-clock\",\n    \"c\",\n    \"cable-car\",\n    \"tram\",\n    \"cake-candles\",\n    \"birthday-cake\",\n    \"cake\",\n    \"calculator\",\n    \"calendar\",\n    \"calendar-check\",\n    \"calendar-day\",\n    \"calendar-days\",\n    \"calendar-alt\",\n    \"calendar-minus\",\n    \"calendar-plus\",\n    \"calendar-week\",\n    \"calendar-xmark\",\n    \"calendar-times\",\n    \"camera\",\n    \"camera-alt\",\n    \"camera-retro\",\n    \"camera-rotate\",\n    \"campground\",\n    \"candy-cane\",\n    \"cannabis\",\n    \"capsules\",\n    \"car\",\n    \"automobile\",\n    \"car-battery\",\n    \"battery-car\",\n    \"car-burst\",\n    \"car-crash\",\n    \"car-on\",\n    \"car-rear\",\n    \"car-alt\",\n    \"car-side\",\n    \"car-tunnel\",\n    \"caravan\",\n    \"caret-down\",\n    \"caret-left\",\n    \"caret-right\",\n    \"caret-up\",\n    \"carrot\",\n    \"cart-arrow-down\",\n    \"cart-flatbed\",\n    \"dolly-flatbed\",\n    \"cart-flatbed-suitcase\",\n    \"luggage-cart\",\n    \"cart-plus\",\n    \"cart-shopping\",\n    \"shopping-cart\",\n    \"cash-register\",\n    \"cat\",\n    \"cedi-sign\",\n    \"cent-sign\",\n    \"certificate\",\n    \"chair\",\n    \"chalkboard\",\n    \"blackboard\",\n    \"chalkboard-user\",\n    \"chalkboard-teacher\",\n    \"champagne-glasses\",\n    \"glass-cheers\",\n    \"charging-station\",\n    \"chart-area\",\n    \"area-chart\",\n    \"chart-bar\",\n    \"bar-chart\",\n    \"chart-column\",\n    \"chart-gantt\",\n    \"chart-line\",\n    \"line-chart\",\n    \"chart-pie\",\n    \"pie-chart\",\n    \"chart-simple\",\n    \"check\",\n    \"check-double\",\n    \"check-to-slot\",\n    \"vote-yea\",\n    \"cheese\",\n    \"chess\",\n    \"chess-bishop\",\n    \"chess-board\",\n    \"chess-king\",\n    \"chess-knight\",\n    \"chess-pawn\",\n    \"chess-queen\",\n    \"chess-rook\",\n    \"chevron-down\",\n    \"chevron-left\",\n    \"chevron-right\",\n    \"chevron-up\",\n    \"child\",\n    \"child-dress\",\n    \"child-reaching\",\n    \"child-rifle\",\n    \"children\",\n    \"church\",\n    \"circle\",\n    \"circle-arrow-down\",\n    \"arrow-circle-down\",\n    \"circle-arrow-left\",\n    \"arrow-circle-left\",\n    \"circle-arrow-right\",\n    \"arrow-circle-right\",\n    \"circle-arrow-up\",\n    \"arrow-circle-up\",\n    \"circle-check\",\n    \"check-circle\",\n    \"circle-chevron-down\",\n    \"chevron-circle-down\",\n    \"circle-chevron-left\",\n    \"chevron-circle-left\",\n    \"circle-chevron-right\",\n    \"chevron-circle-right\",\n    \"circle-chevron-up\",\n    \"chevron-circle-up\",\n    \"circle-dollar-to-slot\",\n    \"donate\",\n    \"circle-dot\",\n    \"dot-circle\",\n    \"circle-down\",\n    \"arrow-alt-circle-down\",\n    \"circle-exclamation\",\n    \"exclamation-circle\",\n    \"circle-h\",\n    \"hospital-symbol\",\n    \"circle-half-stroke\",\n    \"adjust\",\n    \"circle-info\",\n    \"info-circle\",\n    \"circle-left\",\n    \"arrow-alt-circle-left\",\n    \"circle-minus\",\n    \"minus-circle\",\n    \"circle-nodes\",\n    \"circle-notch\",\n    \"circle-pause\",\n    \"pause-circle\",\n    \"circle-play\",\n    \"play-circle\",\n    \"circle-plus\",\n    \"plus-circle\",\n    \"circle-question\",\n    \"question-circle\",\n    \"circle-radiation\",\n    \"radiation-alt\",\n    \"circle-right\",\n    \"arrow-alt-circle-right\",\n    \"circle-stop\",\n    \"stop-circle\",\n    \"circle-up\",\n    \"arrow-alt-circle-up\",\n    \"circle-user\",\n    \"user-circle\",\n    \"circle-xmark\",\n    \"times-circle\",\n    \"xmark-circle\",\n    \"city\",\n    \"clapperboard\",\n    \"clipboard\",\n    \"clipboard-check\",\n    \"clipboard-list\",\n    \"clipboard-question\",\n    \"clipboard-user\",\n    \"clock\",\n    \"clock-four\",\n    \"clock-rotate-left\",\n    \"history\",\n    \"clone\",\n    \"closed-captioning\",\n    \"cloud\",\n    \"cloud-arrow-down\",\n    \"cloud-download\",\n    \"cloud-download-alt\",\n    \"cloud-arrow-up\",\n    \"cloud-upload\",\n    \"cloud-upload-alt\",\n    \"cloud-bolt\",\n    \"thunderstorm\",\n    \"cloud-meatball\",\n    \"cloud-moon\",\n    \"cloud-moon-rain\",\n    \"cloud-rain\",\n    \"cloud-showers-heavy\",\n    \"cloud-showers-water\",\n    \"cloud-sun\",\n    \"cloud-sun-rain\",\n    \"clover\",\n    \"code\",\n    \"code-branch\",\n    \"code-commit\",\n    \"code-compare\",\n    \"code-fork\",\n    \"code-merge\",\n    \"code-pull-request\",\n    \"coins\",\n    \"colon-sign\",\n    \"comment\",\n    \"comment-dollar\",\n    \"comment-dots\",\n    \"commenting\",\n    \"comment-medical\",\n    \"comment-slash\",\n    \"comment-sms\",\n    \"sms\",\n    \"comments\",\n    \"comments-dollar\",\n    \"compact-disc\",\n    \"compass\",\n    \"compass-drafting\",\n    \"drafting-compass\",\n    \"compress\",\n    \"computer\",\n    \"computer-mouse\",\n    \"mouse\",\n    \"cookie\",\n    \"cookie-bite\",\n    \"copy\",\n    \"copyright\",\n    \"couch\",\n    \"cow\",\n    \"credit-card\",\n    \"credit-card-alt\",\n    \"crop\",\n    \"crop-simple\",\n    \"crop-alt\",\n    \"cross\",\n    \"crosshairs\",\n    \"crow\",\n    \"crown\",\n    \"crutch\",\n    \"cruzeiro-sign\",\n    \"cube\",\n    \"cubes\",\n    \"cubes-stacked\",\n    \"d\",\n    \"database\",\n    \"delete-left\",\n    \"backspace\",\n    \"democrat\",\n    \"desktop\",\n    \"desktop-alt\",\n    \"dharmachakra\",\n    \"diagram-next\",\n    \"diagram-predecessor\",\n    \"diagram-project\",\n    \"project-diagram\",\n    \"diagram-successor\",\n    \"diamond\",\n    \"diamond-turn-right\",\n    \"directions\",\n    \"dice\",\n    \"dice-d20\",\n    \"dice-d6\",\n    \"dice-five\",\n    \"dice-four\",\n    \"dice-one\",\n    \"dice-six\",\n    \"dice-three\",\n    \"dice-two\",\n    \"disease\",\n    \"display\",\n    \"divide\",\n    \"dna\",\n    \"dog\",\n    \"dollar-sign\",\n    \"dollar\",\n    \"usd\",\n    \"dolly\",\n    \"dolly-box\",\n    \"dong-sign\",\n    \"door-closed\",\n    \"door-open\",\n    \"dove\",\n    \"down-left-and-up-right-to-center\",\n    \"compress-alt\",\n    \"down-long\",\n    \"long-arrow-alt-down\",\n    \"download\",\n    \"dragon\",\n    \"draw-polygon\",\n    \"droplet\",\n    \"tint\",\n    \"droplet-slash\",\n    \"tint-slash\",\n    \"drum\",\n    \"drum-steelpan\",\n    \"drumstick-bite\",\n    \"dumbbell\",\n    \"dumpster\",\n    \"dumpster-fire\",\n    \"dungeon\",\n    \"e\",\n    \"ear-deaf\",\n    \"deaf\",\n    \"deafness\",\n    \"hard-of-hearing\",\n    \"ear-listen\",\n    \"assistive-listening-systems\",\n    \"earth-africa\",\n    \"globe-africa\",\n    \"earth-americas\",\n    \"earth\",\n    \"earth-america\",\n    \"globe-americas\",\n    \"earth-asia\",\n    \"globe-asia\",\n    \"earth-europe\",\n    \"globe-europe\",\n    \"earth-oceania\",\n    \"globe-oceania\",\n    \"egg\",\n    \"eject\",\n    \"elevator\",\n    \"ellipsis\",\n    \"ellipsis-h\",\n    \"ellipsis-vertical\",\n    \"ellipsis-v\",\n    \"envelope\",\n    \"envelope-circle-check\",\n    \"envelope-open\",\n    \"envelope-open-text\",\n    \"envelopes-bulk\",\n    \"mail-bulk\",\n    \"equals\",\n    \"eraser\",\n    \"ethernet\",\n    \"euro-sign\",\n    \"eur\",\n    \"euro\",\n    \"exclamation\",\n    \"expand\",\n    \"explosion\",\n    \"eye\",\n    \"eye-dropper\",\n    \"eye-dropper-empty\",\n    \"eyedropper\",\n    \"eye-low-vision\",\n    \"low-vision\",\n    \"eye-slash\",\n    \"f\",\n    \"face-angry\",\n    \"angry\",\n    \"face-dizzy\",\n    \"dizzy\",\n    \"face-flushed\",\n    \"flushed\",\n    \"face-frown\",\n    \"frown\",\n    \"face-frown-open\",\n    \"frown-open\",\n    \"face-grimace\",\n    \"grimace\",\n    \"face-grin\",\n    \"grin\",\n    \"face-grin-beam\",\n    \"grin-beam\",\n    \"face-grin-beam-sweat\",\n    \"grin-beam-sweat\",\n    \"face-grin-hearts\",\n    \"grin-hearts\",\n    \"face-grin-squint\",\n    \"grin-squint\",\n    \"face-grin-squint-tears\",\n    \"grin-squint-tears\",\n    \"face-grin-stars\",\n    \"grin-stars\",\n    \"face-grin-tears\",\n    \"grin-tears\",\n    \"face-grin-tongue\",\n    \"grin-tongue\",\n    \"face-grin-tongue-squint\",\n    \"grin-tongue-squint\",\n    \"face-grin-tongue-wink\",\n    \"grin-tongue-wink\",\n    \"face-grin-wide\",\n    \"grin-alt\",\n    \"face-grin-wink\",\n    \"grin-wink\",\n    \"face-kiss\",\n    \"kiss\",\n    \"face-kiss-beam\",\n    \"kiss-beam\",\n    \"face-kiss-wink-heart\",\n    \"kiss-wink-heart\",\n    \"face-laugh\",\n    \"laugh\",\n    \"face-laugh-beam\",\n    \"laugh-beam\",\n    \"face-laugh-squint\",\n    \"laugh-squint\",\n    \"face-laugh-wink\",\n    \"laugh-wink\",\n    \"face-meh\",\n    \"meh\",\n    \"face-meh-blank\",\n    \"meh-blank\",\n    \"face-rolling-eyes\",\n    \"meh-rolling-eyes\",\n    \"face-sad-cry\",\n    \"sad-cry\",\n    \"face-sad-tear\",\n    \"sad-tear\",\n    \"face-smile\",\n    \"smile\",\n    \"face-smile-beam\",\n    \"smile-beam\",\n    \"face-smile-wink\",\n    \"smile-wink\",\n    \"face-surprise\",\n    \"surprise\",\n    \"face-tired\",\n    \"tired\",\n    \"fan\",\n    \"faucet\",\n    \"faucet-drip\",\n    \"fax\",\n    \"feather\",\n    \"feather-pointed\",\n    \"feather-alt\",\n    \"ferry\",\n    \"file\",\n    \"file-arrow-down\",\n    \"file-download\",\n    \"file-arrow-up\",\n    \"file-upload\",\n    \"file-audio\",\n    \"file-circle-check\",\n    \"file-circle-exclamation\",\n    \"file-circle-minus\",\n    \"file-circle-plus\",\n    \"file-circle-question\",\n    \"file-circle-xmark\",\n    \"file-code\",\n    \"file-contract\",\n    \"file-csv\",\n    \"file-excel\",\n    \"file-export\",\n    \"arrow-right-from-file\",\n    \"file-image\",\n    \"file-import\",\n    \"arrow-right-to-file\",\n    \"file-invoice\",\n    \"file-invoice-dollar\",\n    \"file-lines\",\n    \"file-alt\",\n    \"file-text\",\n    \"file-medical\",\n    \"file-pdf\",\n    \"file-pen\",\n    \"file-edit\",\n    \"file-powerpoint\",\n    \"file-prescription\",\n    \"file-shield\",\n    \"file-signature\",\n    \"file-video\",\n    \"file-waveform\",\n    \"file-medical-alt\",\n    \"file-word\",\n    \"file-zipper\",\n    \"file-archive\",\n    \"fill\",\n    \"fill-drip\",\n    \"film\",\n    \"filter\",\n    \"filter-circle-dollar\",\n    \"funnel-dollar\",\n    \"filter-circle-xmark\",\n    \"fingerprint\",\n    \"fire\",\n    \"fire-burner\",\n    \"fire-extinguisher\",\n    \"fire-flame-curved\",\n    \"fire-alt\",\n    \"fire-flame-simple\",\n    \"burn\",\n    \"fish\",\n    \"fish-fins\",\n    \"flag\",\n    \"flag-checkered\",\n    \"flag-usa\",\n    \"flask\",\n    \"flask-vial\",\n    \"floppy-disk\",\n    \"save\",\n    \"florin-sign\",\n    \"folder\",\n    \"folder-blank\",\n    \"folder-closed\",\n    \"folder-minus\",\n    \"folder-open\",\n    \"folder-plus\",\n    \"folder-tree\",\n    \"font\",\n    \"football\",\n    \"football-ball\",\n    \"forward\",\n    \"forward-fast\",\n    \"fast-forward\",\n    \"forward-step\",\n    \"step-forward\",\n    \"franc-sign\",\n    \"frog\",\n    \"futbol\",\n    \"futbol-ball\",\n    \"soccer-ball\",\n    \"g\",\n    \"gamepad\",\n    \"gas-pump\",\n    \"gauge\",\n    \"dashboard\",\n    \"gauge-med\",\n    \"tachometer-alt-average\",\n    \"gauge-high\",\n    \"tachometer-alt\",\n    \"tachometer-alt-fast\",\n    \"gauge-simple\",\n    \"gauge-simple-med\",\n    \"tachometer-average\",\n    \"gauge-simple-high\",\n    \"tachometer\",\n    \"tachometer-fast\",\n    \"gavel\",\n    \"legal\",\n    \"gear\",\n    \"cog\",\n    \"gears\",\n    \"cogs\",\n    \"gem\",\n    \"genderless\",\n    \"ghost\",\n    \"gift\",\n    \"gifts\",\n    \"glass-water\",\n    \"glass-water-droplet\",\n    \"glasses\",\n    \"globe\",\n    \"golf-ball-tee\",\n    \"golf-ball\",\n    \"gopuram\",\n    \"graduation-cap\",\n    \"mortar-board\",\n    \"greater-than\",\n    \"greater-than-equal\",\n    \"grip\",\n    \"grip-horizontal\",\n    \"grip-lines\",\n    \"grip-lines-vertical\",\n    \"grip-vertical\",\n    \"group-arrows-rotate\",\n    \"guarani-sign\",\n    \"guitar\",\n    \"gun\",\n    \"h\",\n    \"hammer\",\n    \"hamsa\",\n    \"hand\",\n    \"hand-paper\",\n    \"hand-back-fist\",\n    \"hand-rock\",\n    \"hand-dots\",\n    \"allergies\",\n    \"hand-fist\",\n    \"fist-raised\",\n    \"hand-holding\",\n    \"hand-holding-dollar\",\n    \"hand-holding-usd\",\n    \"hand-holding-droplet\",\n    \"hand-holding-water\",\n    \"hand-holding-hand\",\n    \"hand-holding-heart\",\n    \"hand-holding-medical\",\n    \"hand-lizard\",\n    \"hand-middle-finger\",\n    \"hand-peace\",\n    \"hand-point-down\",\n    \"hand-point-left\",\n    \"hand-point-right\",\n    \"hand-point-up\",\n    \"hand-pointer\",\n    \"hand-scissors\",\n    \"hand-sparkles\",\n    \"hand-spock\",\n    \"handcuffs\",\n    \"hands\",\n    \"sign-language\",\n    \"signing\",\n    \"hands-asl-interpreting\",\n    \"american-sign-language-interpreting\",\n    \"asl-interpreting\",\n    \"hands-american-sign-language-interpreting\",\n    \"hands-bound\",\n    \"hands-bubbles\",\n    \"hands-wash\",\n    \"hands-clapping\",\n    \"hands-holding\",\n    \"hands-holding-child\",\n    \"hands-holding-circle\",\n    \"hands-praying\",\n    \"praying-hands\",\n    \"handshake\",\n    \"handshake-angle\",\n    \"hands-helping\",\n    \"handshake-simple\",\n    \"handshake-alt\",\n    \"handshake-simple-slash\",\n    \"handshake-alt-slash\",\n    \"handshake-slash\",\n    \"hanukiah\",\n    \"hard-drive\",\n    \"hdd\",\n    \"hashtag\",\n    \"hat-cowboy\",\n    \"hat-cowboy-side\",\n    \"hat-wizard\",\n    \"head-side-cough\",\n    \"head-side-cough-slash\",\n    \"head-side-mask\",\n    \"head-side-virus\",\n    \"heading\",\n    \"header\",\n    \"headphones\",\n    \"headphones-simple\",\n    \"headphones-alt\",\n    \"headset\",\n    \"heart\",\n    \"heart-circle-bolt\",\n    \"heart-circle-check\",\n    \"heart-circle-exclamation\",\n    \"heart-circle-minus\",\n    \"heart-circle-plus\",\n    \"heart-circle-xmark\",\n    \"heart-crack\",\n    \"heart-broken\",\n    \"heart-pulse\",\n    \"heartbeat\",\n    \"helicopter\",\n    \"helicopter-symbol\",\n    \"helmet-safety\",\n    \"hard-hat\",\n    \"hat-hard\",\n    \"helmet-un\",\n    \"highlighter\",\n    \"hill-avalanche\",\n    \"hill-rockslide\",\n    \"hippo\",\n    \"hockey-puck\",\n    \"holly-berry\",\n    \"horse\",\n    \"horse-head\",\n    \"hospital\",\n    \"hospital-alt\",\n    \"hospital-wide\",\n    \"hospital-user\",\n    \"hot-tub-person\",\n    \"hot-tub\",\n    \"hotdog\",\n    \"hotel\",\n    \"hourglass\",\n    \"hourglass-empty\",\n    \"hourglass-end\",\n    \"hourglass-3\",\n    \"hourglass-half\",\n    \"hourglass-2\",\n    \"hourglass-start\",\n    \"hourglass-1\",\n    \"house\",\n    \"home\",\n    \"home-alt\",\n    \"home-lg-alt\",\n    \"house-chimney\",\n    \"home-lg\",\n    \"house-chimney-crack\",\n    \"house-damage\",\n    \"house-chimney-medical\",\n    \"clinic-medical\",\n    \"house-chimney-user\",\n    \"house-chimney-window\",\n    \"house-circle-check\",\n    \"house-circle-exclamation\",\n    \"house-circle-xmark\",\n    \"house-crack\",\n    \"house-fire\",\n    \"house-flag\",\n    \"house-flood-water\",\n    \"house-flood-water-circle-arrow-right\",\n    \"house-laptop\",\n    \"laptop-house\",\n    \"house-lock\",\n    \"house-medical\",\n    \"house-medical-circle-check\",\n    \"house-medical-circle-exclamation\",\n    \"house-medical-circle-xmark\",\n    \"house-medical-flag\",\n    \"house-signal\",\n    \"house-tsunami\",\n    \"house-user\",\n    \"home-user\",\n    \"hryvnia-sign\",\n    \"hryvnia\",\n    \"hurricane\",\n    \"i\",\n    \"i-cursor\",\n    \"ice-cream\",\n    \"icicles\",\n    \"icons\",\n    \"heart-music-camera-bolt\",\n    \"id-badge\",\n    \"id-card\",\n    \"drivers-license\",\n    \"id-card-clip\",\n    \"id-card-alt\",\n    \"igloo\",\n    \"image\",\n    \"image-portrait\",\n    \"portrait\",\n    \"images\",\n    \"inbox\",\n    \"indent\",\n    \"indian-rupee-sign\",\n    \"indian-rupee\",\n    \"inr\",\n    \"industry\",\n    \"infinity\",\n    \"info\",\n    \"italic\",\n    \"j\",\n    \"jar\",\n    \"jar-wheat\",\n    \"jedi\",\n    \"jet-fighter\",\n    \"fighter-jet\",\n    \"jet-fighter-up\",\n    \"joint\",\n    \"jug-detergent\",\n    \"k\",\n    \"kaaba\",\n    \"key\",\n    \"keyboard\",\n    \"khanda\",\n    \"kip-sign\",\n    \"kit-medical\",\n    \"first-aid\",\n    \"kitchen-set\",\n    \"kiwi-bird\",\n    \"l\",\n    \"land-mine-on\",\n    \"landmark\",\n    \"landmark-dome\",\n    \"landmark-alt\",\n    \"landmark-flag\",\n    \"language\",\n    \"laptop\",\n    \"laptop-code\",\n    \"laptop-file\",\n    \"laptop-medical\",\n    \"lari-sign\",\n    \"layer-group\",\n    \"leaf\",\n    \"left-long\",\n    \"long-arrow-alt-left\",\n    \"left-right\",\n    \"arrows-alt-h\",\n    \"lemon\",\n    \"less-than\",\n    \"less-than-equal\",\n    \"life-ring\",\n    \"lightbulb\",\n    \"lines-leaning\",\n    \"link\",\n    \"chain\",\n    \"link-slash\",\n    \"chain-broken\",\n    \"chain-slash\",\n    \"unlink\",\n    \"lira-sign\",\n    \"list\",\n    \"list-squares\",\n    \"list-check\",\n    \"tasks\",\n    \"list-ol\",\n    \"list-1-2\",\n    \"list-numeric\",\n    \"list-ul\",\n    \"list-dots\",\n    \"litecoin-sign\",\n    \"location-arrow\",\n    \"location-crosshairs\",\n    \"location\",\n    \"location-dot\",\n    \"map-marker-alt\",\n    \"location-pin\",\n    \"map-marker\",\n    \"location-pin-lock\",\n    \"lock\",\n    \"lock-open\",\n    \"locust\",\n    \"lungs\",\n    \"lungs-virus\",\n    \"m\",\n    \"magnet\",\n    \"magnifying-glass\",\n    \"search\",\n    \"magnifying-glass-arrow-right\",\n    \"magnifying-glass-chart\",\n    \"magnifying-glass-dollar\",\n    \"search-dollar\",\n    \"magnifying-glass-location\",\n    \"search-location\",\n    \"magnifying-glass-minus\",\n    \"search-minus\",\n    \"magnifying-glass-plus\",\n    \"search-plus\",\n    \"manat-sign\",\n    \"map\",\n    \"map-location\",\n    \"map-marked\",\n    \"map-location-dot\",\n    \"map-marked-alt\",\n    \"map-pin\",\n    \"marker\",\n    \"mars\",\n    \"mars-and-venus\",\n    \"mars-and-venus-burst\",\n    \"mars-double\",\n    \"mars-stroke\",\n    \"mars-stroke-right\",\n    \"mars-stroke-h\",\n    \"mars-stroke-up\",\n    \"mars-stroke-v\",\n    \"martini-glass\",\n    \"glass-martini-alt\",\n    \"martini-glass-citrus\",\n    \"cocktail\",\n    \"martini-glass-empty\",\n    \"glass-martini\",\n    \"mask\",\n    \"mask-face\",\n    \"mask-ventilator\",\n    \"masks-theater\",\n    \"theater-masks\",\n    \"mattress-pillow\",\n    \"maximize\",\n    \"expand-arrows-alt\",\n    \"medal\",\n    \"memory\",\n    \"menorah\",\n    \"mercury\",\n    \"message\",\n    \"comment-alt\",\n    \"meteor\",\n    \"microchip\",\n    \"microphone\",\n    \"microphone-lines\",\n    \"microphone-alt\",\n    \"microphone-lines-slash\",\n    \"microphone-alt-slash\",\n    \"microphone-slash\",\n    \"microscope\",\n    \"mill-sign\",\n    \"minimize\",\n    \"compress-arrows-alt\",\n    \"minus\",\n    \"subtract\",\n    \"mitten\",\n    \"mobile\",\n    \"mobile-android\",\n    \"mobile-phone\",\n    \"mobile-button\",\n    \"mobile-retro\",\n    \"mobile-screen\",\n    \"mobile-android-alt\",\n    \"mobile-screen-button\",\n    \"mobile-alt\",\n    \"money-bill\",\n    \"money-bill-1\",\n    \"money-bill-alt\",\n    \"money-bill-1-wave\",\n    \"money-bill-wave-alt\",\n    \"money-bill-transfer\",\n    \"money-bill-trend-up\",\n    \"money-bill-wave\",\n    \"money-bill-wheat\",\n    \"money-bills\",\n    \"money-check\",\n    \"money-check-dollar\",\n    \"money-check-alt\",\n    \"monument\",\n    \"moon\",\n    \"mortar-pestle\",\n    \"mosque\",\n    \"mosquito\",\n    \"mosquito-net\",\n    \"motorcycle\",\n    \"mound\",\n    \"mountain\",\n    \"mountain-city\",\n    \"mountain-sun\",\n    \"mug-hot\",\n    \"mug-saucer\",\n    \"coffee\",\n    \"music\",\n    \"n\",\n    \"naira-sign\",\n    \"network-wired\",\n    \"neuter\",\n    \"newspaper\",\n    \"not-equal\",\n    \"notdef\",\n    \"note-sticky\",\n    \"sticky-note\",\n    \"notes-medical\",\n    \"o\",\n    \"object-group\",\n    \"object-ungroup\",\n    \"oil-can\",\n    \"oil-well\",\n    \"om\",\n    \"otter\",\n    \"outdent\",\n    \"dedent\",\n    \"p\",\n    \"pager\",\n    \"paint-roller\",\n    \"paintbrush\",\n    \"paint-brush\",\n    \"palette\",\n    \"pallet\",\n    \"panorama\",\n    \"paper-plane\",\n    \"paperclip\",\n    \"parachute-box\",\n    \"paragraph\",\n    \"passport\",\n    \"paste\",\n    \"file-clipboard\",\n    \"pause\",\n    \"paw\",\n    \"peace\",\n    \"pen\",\n    \"pen-clip\",\n    \"pen-alt\",\n    \"pen-fancy\",\n    \"pen-nib\",\n    \"pen-ruler\",\n    \"pencil-ruler\",\n    \"pen-to-square\",\n    \"edit\",\n    \"pencil\",\n    \"pencil-alt\",\n    \"people-arrows\",\n    \"people-arrows-left-right\",\n    \"people-carry-box\",\n    \"people-carry\",\n    \"people-group\",\n    \"people-line\",\n    \"people-pulling\",\n    \"people-robbery\",\n    \"people-roof\",\n    \"pepper-hot\",\n    \"percent\",\n    \"percentage\",\n    \"person\",\n    \"male\",\n    \"person-arrow-down-to-line\",\n    \"person-arrow-up-from-line\",\n    \"person-biking\",\n    \"biking\",\n    \"person-booth\",\n    \"person-breastfeeding\",\n    \"person-burst\",\n    \"person-cane\",\n    \"person-chalkboard\",\n    \"person-circle-check\",\n    \"person-circle-exclamation\",\n    \"person-circle-minus\",\n    \"person-circle-plus\",\n    \"person-circle-question\",\n    \"person-circle-xmark\",\n    \"person-digging\",\n    \"digging\",\n    \"person-dots-from-line\",\n    \"diagnoses\",\n    \"person-dress\",\n    \"female\",\n    \"person-dress-burst\",\n    \"person-drowning\",\n    \"person-falling\",\n    \"person-falling-burst\",\n    \"person-half-dress\",\n    \"person-harassing\",\n    \"person-hiking\",\n    \"hiking\",\n    \"person-military-pointing\",\n    \"person-military-rifle\",\n    \"person-military-to-person\",\n    \"person-praying\",\n    \"pray\",\n    \"person-pregnant\",\n    \"person-rays\",\n    \"person-rifle\",\n    \"person-running\",\n    \"running\",\n    \"person-shelter\",\n    \"person-skating\",\n    \"skating\",\n    \"person-skiing\",\n    \"skiing\",\n    \"person-skiing-nordic\",\n    \"skiing-nordic\",\n    \"person-snowboarding\",\n    \"snowboarding\",\n    \"person-swimming\",\n    \"swimmer\",\n    \"person-through-window\",\n    \"person-walking\",\n    \"walking\",\n    \"person-walking-arrow-loop-left\",\n    \"person-walking-arrow-right\",\n    \"person-walking-dashed-line-arrow-right\",\n    \"person-walking-luggage\",\n    \"person-walking-with-cane\",\n    \"blind\",\n    \"peseta-sign\",\n    \"peso-sign\",\n    \"phone\",\n    \"phone-flip\",\n    \"phone-alt\",\n    \"phone-slash\",\n    \"phone-volume\",\n    \"volume-control-phone\",\n    \"photo-film\",\n    \"photo-video\",\n    \"piggy-bank\",\n    \"pills\",\n    \"pizza-slice\",\n    \"place-of-worship\",\n    \"plane\",\n    \"plane-arrival\",\n    \"plane-circle-check\",\n    \"plane-circle-exclamation\",\n    \"plane-circle-xmark\",\n    \"plane-departure\",\n    \"plane-lock\",\n    \"plane-slash\",\n    \"plane-up\",\n    \"plant-wilt\",\n    \"plate-wheat\",\n    \"play\",\n    \"plug\",\n    \"plug-circle-bolt\",\n    \"plug-circle-check\",\n    \"plug-circle-exclamation\",\n    \"plug-circle-minus\",\n    \"plug-circle-plus\",\n    \"plug-circle-xmark\",\n    \"plus\",\n    \"add\",\n    \"plus-minus\",\n    \"podcast\",\n    \"poo\",\n    \"poo-storm\",\n    \"poo-bolt\",\n    \"poop\",\n    \"power-off\",\n    \"prescription\",\n    \"prescription-bottle\",\n    \"prescription-bottle-medical\",\n    \"prescription-bottle-alt\",\n    \"print\",\n    \"pump-medical\",\n    \"pump-soap\",\n    \"puzzle-piece\",\n    \"q\",\n    \"qrcode\",\n    \"question\",\n    \"quote-left\",\n    \"quote-left-alt\",\n    \"quote-right\",\n    \"quote-right-alt\",\n    \"r\",\n    \"radiation\",\n    \"radio\",\n    \"rainbow\",\n    \"ranking-star\",\n    \"receipt\",\n    \"record-vinyl\",\n    \"rectangle-ad\",\n    \"ad\",\n    \"rectangle-list\",\n    \"list-alt\",\n    \"rectangle-xmark\",\n    \"rectangle-times\",\n    \"times-rectangle\",\n    \"window-close\",\n    \"recycle\",\n    \"registered\",\n    \"repeat\",\n    \"reply\",\n    \"mail-reply\",\n    \"reply-all\",\n    \"mail-reply-all\",\n    \"republican\",\n    \"restroom\",\n    \"retweet\",\n    \"ribbon\",\n    \"right-from-bracket\",\n    \"sign-out-alt\",\n    \"right-left\",\n    \"exchange-alt\",\n    \"right-long\",\n    \"long-arrow-alt-right\",\n    \"right-to-bracket\",\n    \"sign-in-alt\",\n    \"ring\",\n    \"road\",\n    \"road-barrier\",\n    \"road-bridge\",\n    \"road-circle-check\",\n    \"road-circle-exclamation\",\n    \"road-circle-xmark\",\n    \"road-lock\",\n    \"road-spikes\",\n    \"robot\",\n    \"rocket\",\n    \"rotate\",\n    \"sync-alt\",\n    \"rotate-left\",\n    \"rotate-back\",\n    \"rotate-backward\",\n    \"undo-alt\",\n    \"rotate-right\",\n    \"redo-alt\",\n    \"rotate-forward\",\n    \"route\",\n    \"rss\",\n    \"feed\",\n    \"ruble-sign\",\n    \"rouble\",\n    \"rub\",\n    \"ruble\",\n    \"rug\",\n    \"ruler\",\n    \"ruler-combined\",\n    \"ruler-horizontal\",\n    \"ruler-vertical\",\n    \"rupee-sign\",\n    \"rupee\",\n    \"rupiah-sign\",\n    \"s\",\n    \"sack-dollar\",\n    \"sack-xmark\",\n    \"sailboat\",\n    \"satellite\",\n    \"satellite-dish\",\n    \"scale-balanced\",\n    \"balance-scale\",\n    \"scale-unbalanced\",\n    \"balance-scale-left\",\n    \"scale-unbalanced-flip\",\n    \"balance-scale-right\",\n    \"school\",\n    \"school-circle-check\",\n    \"school-circle-exclamation\",\n    \"school-circle-xmark\",\n    \"school-flag\",\n    \"school-lock\",\n    \"scissors\",\n    \"cut\",\n    \"screwdriver\",\n    \"screwdriver-wrench\",\n    \"tools\",\n    \"scroll\",\n    \"scroll-torah\",\n    \"torah\",\n    \"sd-card\",\n    \"section\",\n    \"seedling\",\n    \"sprout\",\n    \"server\",\n    \"shapes\",\n    \"triangle-circle-square\",\n    \"share\",\n    \"arrow-turn-right\",\n    \"mail-forward\",\n    \"share-from-square\",\n    \"share-square\",\n    \"share-nodes\",\n    \"share-alt\",\n    \"sheet-plastic\",\n    \"shekel-sign\",\n    \"ils\",\n    \"shekel\",\n    \"sheqel\",\n    \"sheqel-sign\",\n    \"shield\",\n    \"shield-blank\",\n    \"shield-cat\",\n    \"shield-dog\",\n    \"shield-halved\",\n    \"shield-alt\",\n    \"shield-heart\",\n    \"shield-virus\",\n    \"ship\",\n    \"shirt\",\n    \"t-shirt\",\n    \"tshirt\",\n    \"shoe-prints\",\n    \"shop\",\n    \"store-alt\",\n    \"shop-lock\",\n    \"shop-slash\",\n    \"store-alt-slash\",\n    \"shower\",\n    \"shrimp\",\n    \"shuffle\",\n    \"random\",\n    \"shuttle-space\",\n    \"space-shuttle\",\n    \"sign-hanging\",\n    \"sign\",\n    \"signal\",\n    \"signal-5\",\n    \"signal-perfect\",\n    \"signature\",\n    \"signs-post\",\n    \"map-signs\",\n    \"sim-card\",\n    \"sink\",\n    \"sitemap\",\n    \"skull\",\n    \"skull-crossbones\",\n    \"slash\",\n    \"sleigh\",\n    \"sliders\",\n    \"sliders-h\",\n    \"smog\",\n    \"smoking\",\n    \"snowflake\",\n    \"snowman\",\n    \"snowplow\",\n    \"soap\",\n    \"socks\",\n    \"solar-panel\",\n    \"sort\",\n    \"unsorted\",\n    \"sort-down\",\n    \"sort-desc\",\n    \"sort-up\",\n    \"sort-asc\",\n    \"spa\",\n    \"spaghetti-monster-flying\",\n    \"pastafarianism\",\n    \"spell-check\",\n    \"spider\",\n    \"spinner\",\n    \"splotch\",\n    \"spoon\",\n    \"utensil-spoon\",\n    \"spray-can\",\n    \"spray-can-sparkles\",\n    \"air-freshener\",\n    \"square\",\n    \"square-arrow-up-right\",\n    \"external-link-square\",\n    \"square-caret-down\",\n    \"caret-square-down\",\n    \"square-caret-left\",\n    \"caret-square-left\",\n    \"square-caret-right\",\n    \"caret-square-right\",\n    \"square-caret-up\",\n    \"caret-square-up\",\n    \"square-check\",\n    \"check-square\",\n    \"square-envelope\",\n    \"envelope-square\",\n    \"square-full\",\n    \"square-h\",\n    \"h-square\",\n    \"square-minus\",\n    \"minus-square\",\n    \"square-nfi\",\n    \"square-parking\",\n    \"parking\",\n    \"square-pen\",\n    \"pen-square\",\n    \"pencil-square\",\n    \"square-person-confined\",\n    \"square-phone\",\n    \"phone-square\",\n    \"square-phone-flip\",\n    \"phone-square-alt\",\n    \"square-plus\",\n    \"plus-square\",\n    \"square-poll-horizontal\",\n    \"poll-h\",\n    \"square-poll-vertical\",\n    \"poll\",\n    \"square-root-variable\",\n    \"square-root-alt\",\n    \"square-rss\",\n    \"rss-square\",\n    \"square-share-nodes\",\n    \"share-alt-square\",\n    \"square-up-right\",\n    \"external-link-square-alt\",\n    \"square-virus\",\n    \"square-xmark\",\n    \"times-square\",\n    \"xmark-square\",\n    \"staff-snake\",\n    \"rod-asclepius\",\n    \"rod-snake\",\n    \"staff-aesculapius\",\n    \"stairs\",\n    \"stamp\",\n    \"stapler\",\n    \"star\",\n    \"star-and-crescent\",\n    \"star-half\",\n    \"star-half-stroke\",\n    \"star-half-alt\",\n    \"star-of-david\",\n    \"star-of-life\",\n    \"sterling-sign\",\n    \"gbp\",\n    \"pound-sign\",\n    \"stethoscope\",\n    \"stop\",\n    \"stopwatch\",\n    \"stopwatch-20\",\n    \"store\",\n    \"store-slash\",\n    \"street-view\",\n    \"strikethrough\",\n    \"stroopwafel\",\n    \"subscript\",\n    \"suitcase\",\n    \"suitcase-medical\",\n    \"medkit\",\n    \"suitcase-rolling\",\n    \"sun\",\n    \"sun-plant-wilt\",\n    \"superscript\",\n    \"swatchbook\",\n    \"synagogue\",\n    \"syringe\",\n    \"t\",\n    \"table\",\n    \"table-cells\",\n    \"th\",\n    \"table-cells-large\",\n    \"th-large\",\n    \"table-columns\",\n    \"columns\",\n    \"table-list\",\n    \"th-list\",\n    \"table-tennis-paddle-ball\",\n    \"ping-pong-paddle-ball\",\n    \"table-tennis\",\n    \"tablet\",\n    \"tablet-android\",\n    \"tablet-button\",\n    \"tablet-screen-button\",\n    \"tablet-alt\",\n    \"tablets\",\n    \"tachograph-digital\",\n    \"digital-tachograph\",\n    \"tag\",\n    \"tags\",\n    \"tape\",\n    \"tarp\",\n    \"tarp-droplet\",\n    \"taxi\",\n    \"cab\",\n    \"teeth\",\n    \"teeth-open\",\n    \"temperature-arrow-down\",\n    \"temperature-down\",\n    \"temperature-arrow-up\",\n    \"temperature-up\",\n    \"temperature-empty\",\n    \"temperature-0\",\n    \"thermometer-0\",\n    \"thermometer-empty\",\n    \"temperature-full\",\n    \"temperature-4\",\n    \"thermometer-4\",\n    \"thermometer-full\",\n    \"temperature-half\",\n    \"temperature-2\",\n    \"thermometer-2\",\n    \"thermometer-half\",\n    \"temperature-high\",\n    \"temperature-low\",\n    \"temperature-quarter\",\n    \"temperature-1\",\n    \"thermometer-1\",\n    \"thermometer-quarter\",\n    \"temperature-three-quarters\",\n    \"temperature-3\",\n    \"thermometer-3\",\n    \"thermometer-three-quarters\",\n    \"tenge-sign\",\n    \"tenge\",\n    \"tent\",\n    \"tent-arrow-down-to-line\",\n    \"tent-arrow-left-right\",\n    \"tent-arrow-turn-left\",\n    \"tent-arrows-down\",\n    \"tents\",\n    \"terminal\",\n    \"text-height\",\n    \"text-slash\",\n    \"remove-format\",\n    \"text-width\",\n    \"thermometer\",\n    \"thumbs-down\",\n    \"thumbs-up\",\n    \"thumbtack\",\n    \"thumb-tack\",\n    \"ticket\",\n    \"ticket-simple\",\n    \"ticket-alt\",\n    \"timeline\",\n    \"toggle-off\",\n    \"toggle-on\",\n    \"toilet\",\n    \"toilet-paper\",\n    \"toilet-paper-slash\",\n    \"toilet-portable\",\n    \"toilets-portable\",\n    \"toolbox\",\n    \"tooth\",\n    \"torii-gate\",\n    \"tornado\",\n    \"tower-broadcast\",\n    \"broadcast-tower\",\n    \"tower-cell\",\n    \"tower-observation\",\n    \"tractor\",\n    \"trademark\",\n    \"traffic-light\",\n    \"trailer\",\n    \"train\",\n    \"train-subway\",\n    \"subway\",\n    \"train-tram\",\n    \"transgender\",\n    \"transgender-alt\",\n    \"trash\",\n    \"trash-arrow-up\",\n    \"trash-restore\",\n    \"trash-can\",\n    \"trash-alt\",\n    \"trash-can-arrow-up\",\n    \"trash-restore-alt\",\n    \"tree\",\n    \"tree-city\",\n    \"triangle-exclamation\",\n    \"exclamation-triangle\",\n    \"warning\",\n    \"trophy\",\n    \"trowel\",\n    \"trowel-bricks\",\n    \"truck\",\n    \"truck-arrow-right\",\n    \"truck-droplet\",\n    \"truck-fast\",\n    \"shipping-fast\",\n    \"truck-field\",\n    \"truck-field-un\",\n    \"truck-front\",\n    \"truck-medical\",\n    \"ambulance\",\n    \"truck-monster\",\n    \"truck-moving\",\n    \"truck-pickup\",\n    \"truck-plane\",\n    \"truck-ramp-box\",\n    \"truck-loading\",\n    \"tty\",\n    \"teletype\",\n    \"turkish-lira-sign\",\n    \"try\",\n    \"turkish-lira\",\n    \"turn-down\",\n    \"level-down-alt\",\n    \"turn-up\",\n    \"level-up-alt\",\n    \"tv\",\n    \"television\",\n    \"tv-alt\",\n    \"u\",\n    \"umbrella\",\n    \"umbrella-beach\",\n    \"underline\",\n    \"universal-access\",\n    \"unlock\",\n    \"unlock-keyhole\",\n    \"unlock-alt\",\n    \"up-down\",\n    \"arrows-alt-v\",\n    \"up-down-left-right\",\n    \"arrows-alt\",\n    \"up-long\",\n    \"long-arrow-alt-up\",\n    \"up-right-and-down-left-from-center\",\n    \"expand-alt\",\n    \"up-right-from-square\",\n    \"external-link-alt\",\n    \"upload\",\n    \"user\",\n    \"user-astronaut\",\n    \"user-check\",\n    \"user-clock\",\n    \"user-doctor\",\n    \"user-md\",\n    \"user-gear\",\n    \"user-cog\",\n    \"user-graduate\",\n    \"user-group\",\n    \"user-friends\",\n    \"user-injured\",\n    \"user-large\",\n    \"user-alt\",\n    \"user-large-slash\",\n    \"user-alt-slash\",\n    \"user-lock\",\n    \"user-minus\",\n    \"user-ninja\",\n    \"user-nurse\",\n    \"user-pen\",\n    \"user-edit\",\n    \"user-plus\",\n    \"user-secret\",\n    \"user-shield\",\n    \"user-slash\",\n    \"user-tag\",\n    \"user-tie\",\n    \"user-xmark\",\n    \"user-times\",\n    \"users\",\n    \"users-between-lines\",\n    \"users-gear\",\n    \"users-cog\",\n    \"users-line\",\n    \"users-rays\",\n    \"users-rectangle\",\n    \"users-slash\",\n    \"users-viewfinder\",\n    \"utensils\",\n    \"cutlery\",\n    \"v\",\n    \"van-shuttle\",\n    \"shuttle-van\",\n    \"vault\",\n    \"vector-square\",\n    \"venus\",\n    \"venus-double\",\n    \"venus-mars\",\n    \"vest\",\n    \"vest-patches\",\n    \"vial\",\n    \"vial-circle-check\",\n    \"vial-virus\",\n    \"vials\",\n    \"video\",\n    \"video-camera\",\n    \"video-slash\",\n    \"vihara\",\n    \"virus\",\n    \"virus-covid\",\n    \"virus-covid-slash\",\n    \"virus-slash\",\n    \"viruses\",\n    \"voicemail\",\n    \"volcano\",\n    \"volleyball\",\n    \"volleyball-ball\",\n    \"volume-high\",\n    \"volume-up\",\n    \"volume-low\",\n    \"volume-down\",\n    \"volume-off\",\n    \"volume-xmark\",\n    \"volume-mute\",\n    \"volume-times\",\n    \"vr-cardboard\",\n    \"w\",\n    \"walkie-talkie\",\n    \"wallet\",\n    \"wand-magic\",\n    \"magic\",\n    \"wand-magic-sparkles\",\n    \"magic-wand-sparkles\",\n    \"wand-sparkles\",\n    \"warehouse\",\n    \"water\",\n    \"water-ladder\",\n    \"ladder-water\",\n    \"swimming-pool\",\n    \"wave-square\",\n    \"weight-hanging\",\n    \"weight-scale\",\n    \"weight\",\n    \"wheat-awn\",\n    \"wheat-alt\",\n    \"wheat-awn-circle-exclamation\",\n    \"wheelchair\",\n    \"wheelchair-move\",\n    \"wheelchair-alt\",\n    \"whiskey-glass\",\n    \"glass-whiskey\",\n    \"wifi\",\n    \"wifi-3\",\n    \"wifi-strong\",\n    \"wind\",\n    \"window-maximize\",\n    \"window-minimize\",\n    \"window-restore\",\n    \"wine-bottle\",\n    \"wine-glass\",\n    \"wine-glass-empty\",\n    \"wine-glass-alt\",\n    \"won-sign\",\n    \"krw\",\n    \"won\",\n    \"worm\",\n    \"wrench\",\n    \"x\",\n    \"x-ray\",\n    \"xmark\",\n    \"close\",\n    \"multiply\",\n    \"remove\",\n    \"times\",\n    \"xmarks-lines\",\n    \"y\",\n    \"yen-sign\",\n    \"cny\",\n    \"jpy\",\n    \"rmb\",\n    \"yen\",\n    \"yin-yang\",\n    \"z\"]\n  return (\n    <div className=\"icon-list\">\n      {iconsStr.split('\\n').map((icon) => {\n          return (\n            <ListItem onClick={()=>{\n              copyTextToClipboard(icon);\n              getActions().showNotification({\n                message: lang(icon + ' Copied'),\n              });\n            }} >\n              <i className={icon.trim()} key={icon} />\n              <span>{icon}</span>\n            </ListItem>\n          );\n        })}\n\n      {\n        faiIcons.map(icon=>{\n          const className = `fas fa-${icon.trim()}`\n          return (\n            <ListItem onClick={()=>{\n              copyTextToClipboard(className);\n              getActions().showNotification({\n                message: lang(className + ' Copied'),\n              });\n            }} >\n              <i className={className} key={icon} />\n              <span>{className}</span>\n            </ListItem>\n          );\n        })\n      }\n\n    </div>\n  );\n};\n\nexport default IconView;\n","import React, { FC } from '../../../../lib/teact/teact';\n\nimport { ComponentsScreens } from '../../../../types';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport IconView from './IconView';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: ComponentsScreens) => void;\n  onReset: () => void;\n};\n\n\nconst ComponentIcons: FC<OwnProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <IconView />\n    </div>\n  );\n};\n\nexport default ComponentIcons\n","import React, { FC } from '../../../../lib/teact/teact';\n\nimport { ComponentsScreens } from '../../../../types';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport Button from '../../../ui/Button';\nimport useLang from '../../../../hooks/useLang';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: ComponentsScreens) => void;\n  onReset: () => void;\n};\n\n\nconst ComponentButtons: FC<OwnProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n  const lang = useLang();\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" >{lang('Icon Button')}</h4>\n        <div className={\"flex-row\"}>\n          <Button\n            className={\"mr-2\"}\n            round\n            ripple={true}\n            size=\"tiny\"\n            color=\"primary\"\n            ariaLabel={\"\"}\n          >\n            <i className=\"icon-edit\" />\n          </Button>\n\n          <Button\n            round\n            className={\"mr-2\"}\n            ripple={true}\n            size=\"smaller\"\n            color=\"translucent\"\n            ariaLabel={\"\"}\n          >\n            <i className=\"icon-edit\" />\n          </Button>\n          <Button\n            round\n            ripple={false}\n            size=\"default\"\n            // color=\"translucent\"\n            ariaLabel={\"\"}\n          >\n            <i className=\"icon-edit\" />\n          </Button>\n        </div>\n      </div>\n      <div className=\"settings-item pt-3\">\n      <h4 className=\"settings-item-header\" >{lang('Button')}</h4>\n        <div className={\"flex-row\"}>\n          <Button\n            ripple={true}\n            size=\"tiny\"\n            color=\"primary\"\n            ariaLabel={\"\"}\n          >\n            <i className=\"icon-edit\" />\n          </Button>\n        </div>\n\n      </div>\n      <div className=\"settings-item pt-3\">\n\n        <h4 className=\"settings-item-header\" >{lang('Loading')}</h4>\n          <div className={\"flex-row\"}>\n            <Button\n              isLoading\n              ripple={true}\n              color=\"primary\"\n              ariaLabel={\"\"}\n            >\n              <i className=\"icon-edit\" />\n            </Button>\n          </div>\n        </div>\n\n\n    </div>\n  );\n};\n\nexport default ComponentButtons;\n","import React, { FC, useMemo } from '../../../../lib/teact/teact';\n\nimport { ComponentsScreens } from '../../../../types';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport Button from '../../../ui/Button';\nimport useLang from '../../../../hooks/useLang';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../../util/environment';\nimport MenuItem from '../../../ui/MenuItem';\nimport DropdownMenu from '../../../ui/DropdownMenu';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: ComponentsScreens) => void;\n  onReset: () => void;\n};\n\n\nconst ComponentDropdownMenu: FC<OwnProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n  const lang = useLang();\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        ripple={!IS_SINGLE_COLUMN_LAYOUT}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon-more\" />\n      </Button>\n    );\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <DropdownMenu\n          className=\"settings-more-menu\"\n          trigger={SettingsMenuButton}\n          positionX=\"left\"\n        >\n          <MenuItem icon=\"logout\" onClick={()=>{}}>{lang('LogOutTitle')}</MenuItem>\n        </DropdownMenu>\n      </div>\n\n    </div>\n  );\n};\n\nexport default ComponentDropdownMenu;\n","import React, { FC, useState } from '../../../../lib/teact/teact';\n\nimport { ComponentsScreens } from '../../../../types';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport TabList from '../../../ui/TabList';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: ComponentsScreens) => void;\n  onReset: () => void;\n};\n\n\nconst ComponentTab: FC<OwnProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n  const [currentTab,setCurrentTab] = useState(1)\n  const tabs = [\n    { type: 1, title: 'Tab1' },\n    { type: 2, title: 'Tab2' },\n  ];\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <TabList activeTab={currentTab} tabs={tabs} onSwitchTab={(index)=>{\n        setCurrentTab(index)\n      }} />\n\n    </div>\n  );\n};\n\nexport default ComponentTab\n","import React, {\n  FC, memo, useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport useLang, { LangFn } from '../../../hooks/useLang';\n\nimport {\n  ApiChat,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiUser,\n  ApiUserStatus,\n  MAIN_THREAD_ID,\n} from '../../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport {\n  getChatTitle,\n  getMessageAction,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n  isActionMessage,\n  isChatChannel,\n  isUserId,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { renderActionMessageText } from '../../common/helpers/renderActionMessageText';\nimport renderText from '../../common/helpers/renderText';\nimport { fastRaf } from '../../../util/schedulers';\nimport buildClassName from '../../../util/buildClassName';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useMedia from '../../../hooks/useMedia';\nimport { ChatAnimationTypes } from './hooks';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport Avatar from '../../common/Avatar';\nimport VerifiedIcon from '../../common/VerifiedIcon';\nimport TypingStatus from '../../common/TypingStatus';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport ListItem from '../../ui/ListItem';\nimport Badge from './Badge';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  style?: string;\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  animationLevel?: number;\n  isSelected?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastSyncTime?: number;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst ChatItem: FC<OwnProps & StateProps> = ({\n  style,\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  draft,\n  animationLevel,\n  isSelected,\n  canScrollDown,\n  canChangeFolder,\n  lastSyncTime,\n}) => {\n  const {\n    openChat,\n    focusLastMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const {\n    lastMessage,\n    typingStatus,\n  } = chat || {};\n  const isAction = lastMessage && isActionMessage(lastMessage);\n  useEnsureMessage(chatId, isAction ? lastMessage!.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId])\n      .filter<ApiUser>(Boolean as any);\n  }, [actionTargetUserIds]);\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate.\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (animationLevel === 0 || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      fastRaf(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * 100}%, 0)`;\n\n      fastRaf(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      fastRaf(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [animationLevel, orderDiff, animationType]);\n\n  const handleClick = useCallback(() => {\n    openChat({\n      id: chatId,\n      shouldReplaceHistory: true,\n    });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  }, [\n    isSelected,\n    canScrollDown,\n    openChat,\n    chatId,\n    focusLastMessage,\n  ]);\n\n  function handleDelete() {\n    markRenderDeleteModal();\n    openDeleteModal();\n  }\n\n  function handleChatFolderChange() {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleChatFolderChange,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n  });\n\n  const lang = useLang();\n  const lastMessage1 = {\n    id:1,\n    content:{\n\n    },\n    chatId:\"\",\n    isOutgoing:false,\n    date:(+new Date()) / 1000\n  }\n  // if (!chat) {\n  //   return undefined;\n  // }\n  function renderLastMessageOrTyping() {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderText(draft.text)}\n        </p>\n      );\n    }\n\n    if (!lastMessage1) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            { asTextWithSpoilers: true },\n          )}\n        </p>\n      );\n    }\n\n    // const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        <span className=\"sender-name\">{\"Joseph\"}</span>\n        <span className=\"colon\">:</span>\n        message text\n      </p>\n    );\n  }\n  // const isGroup = !isUserId(chatId)\n  const isGroup = false;\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    !isGroup ? 'private' : 'group',\n    isSelected && 'selected',\n  );\n  // const isVerified = chat.isVerified\n  const isVerified = true;\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      style={style}\n      ripple={!IS_SINGLE_COLUMN_LAYOUT}\n      contextActions={contextActions}\n      onClick={handleClick}\n    >\n      <div className=\"status\">\n        <Avatar\n          chat={chat}\n          user={user}\n          userStatus={userStatus}\n          isSavedMessages={user?.isSelf}\n          lastSyncTime={lastSyncTime}\n        />\n        {/*{chat.isCallActive && chat.isCallNotEmpty && (*/}\n        {/*  <ChatCallStatus isSelected={isSelected} isActive={animationLevel !== 0} />*/}\n        {/*)}*/}\n      </div>\n      <div className=\"info\">\n        <div className=\"title\">\n          <h3>BTC</h3>\n          {isVerified && <VerifiedIcon />}\n          {isMuted && <i className=\"icon-muted\" />}\n          <LastMessageMeta\n            message={lastMessage1}\n            outgoingStatus={lastMessageOutgoingStatus}\n          />\n        </div>\n        <div className=\"subtitle\">\n          {renderLastMessageOrTyping()}\n          {/*<Badge chat={chat} isPinned={isPinned} isMuted={isMuted} />*/}\n        </div>\n      </div>\n\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nfunction renderSummary(lang: LangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span className=\"media-preview\">\n      <img src={blobUrl} alt=\"\" className={isRoundVideo ? 'round' : undefined} />\n      {getMessageVideo(message) && <i className=\"icon-play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || !chat.lastMessage) {\n      return {};\n    }\n    const {\n      senderId,\n      replyToMessageId,\n      isOutgoing,\n    } = chat.lastMessage;\n    const lastMessageSender = senderId ? selectUser(global, senderId) : undefined;\n    const lastMessageAction = getMessageAction(chat.lastMessage);\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const {\n      targetUserIds: actionTargetUserIds,\n      targetChatId: actionTargetChatId,\n    } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n    // @ts-ignore\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      animationLevel: global.settings.byKey.animationLevel,\n      isSelected,\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n      lastSyncTime: global.lastSyncTime,\n      ...(isOutgoing && { lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage) }),\n      ...(privateChatUserId && {\n        user: selectUser(global, privateChatUserId),\n        userStatus: selectUserStatus(global, privateChatUserId),\n      }),\n    };\n  },\n)(ChatItem));\n","import React, { FC, useCallback, useState } from '../../../../lib/teact/teact';\n\nimport { ComponentsScreens } from '../../../../types';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport Button from '../../../ui/Button';\nimport useLang from '../../../../hooks/useLang';\nimport Loading from '../../../ui/Loading';\nimport ConfirmDialog from '../../../ui/ConfirmDialog';\nimport Avatar from '../../../common/Avatar';\nimport ChatItem from '../../main/ChatItem';\nimport { CHAT_HEIGHT_PX } from '../../../../config';\nimport { ChatAnimationTypes } from '../../main/hooks';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: ComponentsScreens) => void;\n  onReset: () => void;\n};\n\n\nconst ComponentUi: FC<OwnProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n  const lang = useLang();\n\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n\n  const closeConfirmation = useCallback(() => {\n    setIsDialogOpen(false);\n  }, []);\n\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" >{lang('Loading')}</h4>\n        <div className={\"flex-row\"}>\n          <Loading key=\"loading\" />\n        </div>\n      </div>\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" >{lang('ConfirmDialog')}</h4>\n        <div className={\"flex-row\"}>\n          <ConfirmDialog\n            isOpen={isDialogOpen}\n            onClose={closeConfirmation}\n            text={lang('texttexttexttexttext')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={()=>{}}\n            confirmIsDestructive\n          />\n          <Button\n            ripple={true}\n            color=\"primary\"\n            ariaLabel={\"\"}\n            onClick={()=>setIsDialogOpen(true)}\n          >\n            Open\n          </Button>\n        </div>\n      </div>\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" >{lang('Avatar')}</h4>\n        <div className={\"flex-row\"}>\n          <Avatar\n            text={\"李四\"}\n          />\n          <Avatar\n            size={\"medium\"}\n            className={\"ml-2\"}\n            text={\"张三\"}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" >{lang('ChatItem')}</h4>\n        <div className={\"flex-row position_relative\"}>\n          <ChatItem\n            orderDiff={0}\n            animationType={ChatAnimationTypes.Move}\n            teactOrderKey={0}\n            chatId={'102'}\n            style={`top: ${(0) * CHAT_HEIGHT_PX}px;`}\n          />\n          <ChatItem\n            orderDiff={1}\n            animationType={ChatAnimationTypes.Move}\n            teactOrderKey={1}\n            chatId={'-101'}\n            style={`top: ${(1) * CHAT_HEIGHT_PX}px;`}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ComponentUi;\n","import React, { FC, memo, useCallback } from '../../../lib/teact/teact';\n\nimport { ComponentsScreens } from '../../../types';\nimport { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/environment';\n\nimport Transition from '../../ui/Transition';\nimport ComponentsHeader from './ComponentsHeader';\nimport ComponentsMain from './ComponentsMain';\nimport ComponentIcons from './component/ComponentIcons';\nimport ComponentButtons from './component/ComponentButtons';\nimport ComponentDropdownMenu from './component/ComponentDropdownMenu';\nimport ComponentTab from './component/ComponentTab';\nimport ComponentUi from './component/ComponentUi';\n\nimport './Components.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(ComponentsScreens).length / 2;\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: ComponentsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: ComponentsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: () => void;\n};\n\nconst Components: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n\n  const handleReset = useCallback(() => {\n\n    if ([\n      ComponentsScreens.Icons,\n      ComponentsScreens.Buttons,\n      ComponentsScreens.DropdownMenu,\n      ComponentsScreens.Tab,\n      ComponentsScreens.UI\n    ].includes(currentScreen)) {\n      onScreenSelect(ComponentsScreens.Main);\n      return;\n    }\n    onReset();\n  }, [\n    foldersState.mode, foldersDispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  function renderCurrentSectionContent(isScreenActive: boolean, screen: ComponentsScreens) {\n\n    switch (currentScreen) {\n      case ComponentsScreens.Main:\n        return (\n          <ComponentsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n\n      case ComponentsScreens.UI:\n        return (\n          <ComponentUi\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case ComponentsScreens.Icons:\n        return (\n          <ComponentIcons\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case ComponentsScreens.Buttons:\n        return (\n          <ComponentButtons\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case ComponentsScreens.DropdownMenu:\n        return (\n          <ComponentDropdownMenu\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case ComponentsScreens.Tab:\n        return (\n          <ComponentTab\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(isScreenActive: boolean, isFrom: boolean, currentKey: ComponentsScreens) {\n    return (\n      <>\n        <ComponentsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, currentKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Components);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useCallback, useMemo, memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport { filterUsersByName, sortUserIds } from '../../../global/helpers';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n  serverTimeOffset: number;\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  serverTimeOffset,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterUsersByName(contactIds, usersById, filter);\n\n    return sortUserIds(filteredIds, usersById, userStatusesById, undefined, serverTimeOffset);\n  }, [contactIds, filter, usersById, userStatusesById, serverTimeOffset]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n            ripple={!IS_SINGLE_COLUMN_LAYOUT}\n          >\n            <PrivateChatInfo userId={id} forceShowSelf avatarSize=\"large\" />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <i className=\"icon-add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n      serverTimeOffset: global.serverTimeOffset,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useState, useCallback, useEffect, memo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Spinner from '../../ui/Spinner';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n};\n\n// TODO @implement\nconst MAX_USERS_FOR_LEGACY_CHAT = 199; // Accounting for current user\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  onReset,\n  creationProgress,\n  creationError,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (memberIds.length > MAX_USERS_FOR_LEGACY_CHAT) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, createGroupChat, photo, chatTitleEmptyError, chatTooManyUsersError]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <i className=\"icon-arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon-arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = global.chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/environment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            // return (\n            //   <NewChatStep1\n            //     isChannel={isChannel}\n            //     isActive={isActive}\n            //     selectedMemberIds={newChatMemberIds}\n            //     onSelectedMemberIdsChange={setNewChatMemberIds}\n            //     onNextStep={handleNextStep}\n            //     onReset={onReset}\n            //   />\n            // );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useCallback, useMemo, memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { unique } from '../../../util/iteratees';\nimport { filterUsersByName, isUserBot, sortChatIds } from '../../../global/helpers';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport Picker from '../../common/Picker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Button from '../../ui/Button';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsById: Record<string, ApiChat>;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n  chatsById,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localUserIds,\n  globalUserIds,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, [setGlobalSearchQuery]);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localUserIds || []),\n        ...(globalUserIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      chatsById,\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, chatsById, searchQuery, localUserIds, globalUserIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    if (selectedMemberIds.length || isChannel) {\n      setGlobalSearchQuery({ query: '' });\n      onNextStep();\n    }\n  }, [selectedMemberIds.length, isChannel, setGlobalSearchQuery, onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <i className=\"icon-arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <Picker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown={Boolean(selectedMemberIds.length || isChannel)}\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <i className=\"icon-arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n    const { byId: chatsById } = global.chats;\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = global.globalSearch;\n    const { userIds: globalUserIds } = globalResults || {};\n    const { userIds: localUserIds } = localResults || {};\n\n    return {\n      chatsById,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalUserIds,\n      localUserIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport Button from '../ui/Button';\nimport ChatList from './main/ChatList';\nimport type { LeftColumnContent } from '../../types';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n  onContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({ isActive, onReset }) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n        >\n          <i className=\"icon-arrow-left\" />\n        </Button>\n        <h3>{lang('ArchivedChats')}</h3>\n      </div>\n      <ChatList folderType=\"archived\" isActive={isActive} />\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, memo, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID).map((folderId) => ({\n      label: foldersById ? foldersById[folderId].title : '',\n      value: String(folderId),\n    })) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('FilterAddTo')}\n    >\n      <CheckboxGroup\n        options={folders}\n        selected={selectedFolderIds}\n        onChange={setSelectedFolderIds}\n        round\n      />\n      <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n        {lang('FilterAddTo')}\n      </Button>\n      <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","import type { ApiMessage } from '../../../../api/types';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport {\n  getMessageContact,\n  getMessageMediaHash,\n  getMessagePhoto,\n  getMessageText,\n  getMessageTextWithSpoilers,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  hasMessageLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { CLIPBOARD_ITEM_SUPPORTED, copyImageToClipboard, copyTextToClipboard } from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: string;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = getMessageMediaHash(message, 'inline');\n  const canImageBeCopied = photo && (mediaHash || hasMessageLocalBlobUrl(message)) && CLIPBOARD_ITEM_SUPPORTED;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else {\n          const clipboardText = hasSelection && selection ? selection.toString() : getMessageTextWithSpoilers(message)!;\n          copyTextToClipboard(clipboardText);\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: () => {\n        onCopyLink();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\n\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useFlag from '../../../hooks/useFlag';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { IS_COMPACT_MENU } from '../../../util/environment';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\n\nimport './ReactionSelectorReaction.scss';\n\nconst REACTION_SIZE = IS_COMPACT_MENU ? 24 : 32;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  previewIndex: number;\n  isReady?: boolean;\n  onSendReaction: (reaction: string, x: number, y: number) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst cn = createClassNameBuilder('ReactionSelectorReaction');\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction, previewIndex, onSendReaction, isReady, isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady);\n\n  const [isActivated, activate, deactivate] = useFlag();\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const shouldRenderAnimated = Boolean(isReady && mediaData);\n  const { transitionClassNames: animatedClassNames } = useShowTransition(shouldRenderAnimated);\n  const { shouldRender: shouldRenderStatic, transitionClassNames: staticClassNames } = useShowTransition(\n    !isReady || !isAnimationLoaded, undefined, true,\n  );\n\n  function handleClick() {\n    if (!containerRef.current) return;\n    const { x, y } = containerRef.current.getBoundingClientRect();\n\n    onSendReaction(reaction.reaction, x, y);\n  }\n\n  return (\n    <div\n      className={cn('&', IS_COMPACT_MENU && 'compact')}\n      onClick={handleClick}\n      ref={containerRef}\n      onMouseEnter={isReady ? activate : undefined}\n    >\n      {shouldRenderStatic && (\n        <div\n          className={cn(\n            'static',\n            isCurrentUserPremium && 'premium',\n            isReady ? [staticClassNames] : undefined,\n          )}\n          style={`background-position-x: ${previewIndex * -REACTION_SIZE}px;`}\n        />\n      )}\n      {shouldRenderAnimated && (\n        <AnimatedSticker\n          className={cn('animated', [animatedClassNames])}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useLayoutEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useFlag from '../../../hooks/useFlag';\nimport { getTouchY } from '../../../util/scrollLock';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { IS_COMPACT_MENU } from '../../../util/environment';\nimport { getActions } from '../../../global';\n\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\nimport Button from '../../ui/Button';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: string[];\n  onSendReaction: (reaction: string, x: number, y: number) => void;\n  isPrivate?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\n\nconst ReactionSelector: FC<OwnProps> = ({\n  availableReactions,\n  enabledReactions,\n  onSendReaction,\n  isPrivate,\n  isReady,\n  canBuyPremium,\n  isCurrentUserPremium,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const itemsScrollRef = useRef<HTMLDivElement>(null);\n  const [isHorizontalScrollEnabled, enableHorizontalScroll] = useFlag(false);\n  useHorizontalScroll(itemsScrollRef.current, !isHorizontalScrollEnabled);\n\n  useLayoutEffect(() => {\n    enableHorizontalScroll();\n  }, [enableHorizontalScroll]);\n\n  const handleWheel = (e: React.WheelEvent | React.TouchEvent) => {\n    if (!itemsScrollRef) return;\n    const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n    if (deltaY) {\n      e.preventDefault();\n    }\n  };\n\n  if ((!isPrivate && !enabledReactions?.length) || !availableReactions) return undefined;\n\n  return (\n    <div className={cn('&', IS_COMPACT_MENU && 'compact')} onWheelCapture={handleWheel} onTouchMove={handleWheel}>\n      <div className={cn('bubble-big')} />\n      <div className={cn('bubble-small')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('items', ['no-scrollbar'])} ref={itemsScrollRef}>\n          {availableReactions?.map((reaction, i) => {\n            if (reaction.isInactive || (reaction.isPremium && !isCurrentUserPremium)\n              || (!isPrivate && (!enabledReactions || !enabledReactions.includes(reaction.reaction)))) return undefined;\n            return (\n              <ReactionSelectorReaction\n                key={reaction.reaction}\n                previewIndex={i}\n                isReady={isReady}\n                onSendReaction={onSendReaction}\n                reaction={reaction}\n                isCurrentUserPremium={isCurrentUserPremium}\n              />\n            );\n          })}\n          {canBuyPremium && Boolean(\n            availableReactions\n              .filter((r) => r.isPremium && (!enabledReactions || enabledReactions.includes(r.reaction)))\n              .length,\n          ) && (\n            <Button\n              round\n              color=\"translucent\"\n              className={cn('blocked-button')}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openPremiumModal({\n                initialSection: 'reactions',\n              })}\n            >\n              <i className=\"icon-lock-badge\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiMessage, ApiSponsoredMessage, ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { getMessageCopyOptions } from './helpers/copyOptions';\nimport { disableScrolling, enableScrolling } from '../../../util/scrollLock';\nimport { getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useContextMenuPosition from '../../../hooks/useContextMenuPosition';\nimport useLang from '../../../hooks/useLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Avatar from '../../common/Avatar';\nimport ReactionSelector from './ReactionSelector';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  availableReactions?: ApiAvailableReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  message: ApiMessage | ApiSponsoredMessage;\n  canSendNow?: boolean;\n  enabledReactions?: string[];\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canRemoveReaction?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentUsers?: ApiUser[];\n  onReply?: () => void;\n  onEdit?: () => void;\n  onPin?: () => void;\n  onUnpin?: () => void;\n  onForward?: () => void;\n  onDelete?: () => void;\n  onReport?: () => void;\n  onFaveSticker?: () => void;\n  onUnfaveSticker?: () => void;\n  onSelect?: () => void;\n  onSend?: () => void;\n  onReschedule?: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onCopyLink?: () => void;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: () => void;\n  onDownload?: () => void;\n  onSaveGif?: () => void;\n  onCancelVote?: () => void;\n  onClosePoll?: () => void;\n  onShowSeenBy?: () => void;\n  onShowReactors?: () => void;\n  onAboutAds?: () => void;\n  onSponsoredHide?: () => void;\n  onSendReaction?: (reaction: string | undefined, x: number, y: number) => void;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_BUBBLE_EXTRA_WIDTH = 32;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  availableReactions,\n  isOpen,\n  message,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  anchor,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canEdit,\n  canPin,\n  canUnpin,\n  canDelete,\n  canReport,\n  canForward,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  isDownloading,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canRemoveReaction,\n  canShowReactionList,\n  seenByRecentUsers,\n  onReply,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onReport,\n  onFaveSticker,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onSendReaction,\n  onCopyMessages,\n  onAboutAds,\n  onSponsoredHide,\n}) => {\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const noReactions = !isPrivate && !enabledReactions?.length;\n  const withReactions = canShowReactionList && !noReactions;\n  const isSponsoredMessage = !('id' in message);\n  const messageId = !isSponsoredMessage ? message.id : '';\n\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n\n  const handleAfterCopy = useCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  }, [lang, onClose, showNotification]);\n\n  const copyOptions = isSponsoredMessage\n    ? []\n    : getMessageCopyOptions(\n      message, handleAfterCopy, canCopyLink ? onCopyLink : undefined, onCopyMessages, onCopyNumber,\n    );\n\n  const getTriggerElement = useCallback(() => {\n    return isSponsoredMessage\n      ? document.querySelector('.Transition__slide--active > .MessageList .SponsoredMessage')\n      : document.querySelector(`.Transition__slide--active > .MessageList div[data-message-id=\"${messageId}\"]`);\n  }, [isSponsoredMessage, messageId]);\n\n  const getRootElement = useCallback(\n    () => document.querySelector('.Transition__slide--active > .MessageList'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => document.querySelector('.MessageContextMenu .bubble'),\n    [],\n  );\n\n  const getLayout = useCallback(() => {\n    const extraHeightAudioPlayer = (IS_SINGLE_COLUMN_LAYOUT\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const pinnedElement = document.querySelector<HTMLElement>('.HeaderPinnedMessage-wrapper');\n    const extraHeightPinned = (((IS_SINGLE_COLUMN_LAYOUT && !extraHeightAudioPlayer)\n      || (!IS_SINGLE_COLUMN_LAYOUT && pinnedElement?.classList.contains('full-width')))\n      && pinnedElement?.offsetHeight) || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      marginSides: withReactions ? REACTION_BUBBLE_EXTRA_WIDTH : undefined,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n    };\n  }, [withReactions]);\n\n  const handleRemoveReaction = useCallback(() => {\n    onSendReaction!(undefined, 0, 0);\n  }, [onSendReaction]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style, menuStyle, withScroll,\n  } = useContextMenuPosition(anchor, getTriggerElement, getRootElement, getMenuElement, getLayout);\n\n  useEffect(() => {\n    disableScrolling(withScroll ? scrollableRef.current : undefined, '.ReactionSelector');\n\n    return enableScrolling;\n  }, [withScroll]);\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      positionX={positionX}\n      positionY={positionY}\n      style={style}\n      bubbleStyle={menuStyle}\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {canShowReactionList && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          onSendReaction={onSendReaction!}\n          isPrivate={isPrivate}\n          availableReactions={availableReactions}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n        />\n      )}\n\n      <div\n        className=\"scrollable-content custom-scroll\"\n        style={menuStyle}\n        ref={scrollableRef}\n      >\n        {canRemoveReaction && <MenuItem icon=\"heart-outline\" onClick={handleRemoveReaction}>Remove Reaction</MenuItem>}\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && <MenuItem icon=\"reply\" onClick={onReply}>{lang('Reply')}</MenuItem>}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canCopy && copyOptions.map((option) => (\n          <MenuItem key={option.label} icon={option.icon} onClick={option.handler}>{lang(option.label)}</MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {(canShowSeenBy || canShowReactionsCount) && !isSponsoredMessage && (\n          <MenuItem\n            className=\"MessageContextMenu--seen-by\"\n            icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n            onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n            disabled={!canShowReactionsCount && !message.seenByUserIds?.length}\n          >\n            <span className=\"MessageContextMenu--seen-by-label\">\n              {canShowReactionsCount && message.reactors?.count ? (\n                canShowSeenBy && message.seenByUserIds?.length\n                  ? lang(\n                    'Chat.OutgoingContextMixedReactionCount',\n                    [message.reactors.count, message.seenByUserIds.length],\n                  )\n                  : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n              ) : (\n                message.seenByUserIds?.length === 1 && seenByRecentUsers\n                  ? getUserFullName(seenByRecentUsers[0])\n                  : (message.seenByUserIds?.length\n                    ? lang('Conversation.ContextMenuSeen', message.seenByUserIds.length, 'i')\n                    : lang('Conversation.ContextMenuNoViews')\n                  )\n              )}\n            </span>\n            <div className=\"avatars\">\n              {seenByRecentUsers?.map((user) => (\n                <Avatar\n                  size=\"micro\"\n                  user={user}\n                  noVideo\n                />\n              ))}\n            </div>\n          </MenuItem>\n        )}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {isSponsoredMessage && <MenuItem icon=\"help\" onClick={onAboutAds}>{lang('SponsoredMessageInfo')}</MenuItem>}\n        {isSponsoredMessage && onSponsoredHide && (\n          <MenuItem icon=\"stop\" onClick={onSponsoredHide}>{lang('HideAd')}</MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { MessageListType } from '../../../global/types';\nimport type { ApiAvailableReaction, ApiMessage } from '../../../api/types';\nimport type { IAlbum, IAnchorPosition } from '../../../types';\n\nimport {\n  selectActiveDownloadIds,\n  selectAllowedMessageActions,\n  selectChat,\n  selectCurrentMessageList, selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsPremiumPurchaseBlocked,\n} from '../../../global/selectors';\nimport {\n  isActionMessage, isChatChannel,\n  isChatGroup, isOwnMessage, areReactionsEmpty, isUserId, isMessageLocal, getMessageVideo,\n} from '../../../global/helpers';\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { getDayStartAt } from '../../../util/dateFormat';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { copyTextToClipboard } from '../../../util/clipboard';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport DeleteMessageModal from '../../common/DeleteMessageModal';\nimport ReportModal from '../../common/ReportModal';\nimport PinMessageModal from '../../common/PinMessageModal';\nimport MessageContextMenu from './MessageContextMenu';\nimport CalendarModal from '../../common/CalendarModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nconst START_SIZE = 2 * REM;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatUsername?: string;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  messageListType: MessageListType;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  canRemoveReaction?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  activeDownloads: number[];\n  canShowSeenBy?: boolean;\n  enabledReactions?: string[];\n};\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  isOpen,\n  messageListType,\n  chatUsername,\n  message,\n  album,\n  anchor,\n  onClose,\n  onCloseAnimationEnd,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  canUnpin,\n  canDelete,\n  canReport,\n  canShowReactionsCount,\n  canShowReactionList,\n  canRemoveReaction,\n  canEdit,\n  enabledReactions,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  activeDownloads,\n  canShowSeenBy,\n}) => {\n  const {\n    setReplyingToId,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMessageMedia,\n    cancelMessageMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    sendReaction,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    cancelPollVote,\n    closePoll,\n  } = getActions();\n\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(isOpen, onCloseAnimationEnd, undefined, false);\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isCalendarOpen, openCalendar, closeCalendar] = useFlag();\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentUsers = useMemo(() => {\n    if (message.reactions?.recentReactions?.length) {\n      // No need for expensive global updates on users, so we avoid them\n      const usersById = getGlobal().users.byId;\n\n      return message.reactions?.recentReactions?.slice(0, 3).map(({ userId }) => usersById[userId]).filter(Boolean);\n    }\n\n    if (!message.seenByUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return message.seenByUserIds?.slice(0, 3).map((id) => usersById[id]).filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByUserIds]);\n\n  const isDownloading = album ? album.messages.some((msg) => activeDownloads.includes(msg.id))\n    : activeDownloads.includes(message.id);\n\n  const handleDelete = useCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  }, []);\n\n  const handleReport = useCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  }, []);\n\n  const closeMenu = useCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  }, [onClose]);\n\n  const closeDeleteModal = useCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  }, [onClose]);\n\n  const closeReportModal = useCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  }, [onClose]);\n\n  const closePinModal = useCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  }, [onClose]);\n\n  const handleCloseCalendar = useCallback(() => {\n    closeCalendar();\n    onClose();\n  }, [closeCalendar, onClose]);\n\n  const handleReply = useCallback(() => {\n    setReplyingToId({ messageId: message.id });\n    closeMenu();\n  }, [setReplyingToId, message.id, closeMenu]);\n\n  const handleEdit = useCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  }, [setEditingId, message.id, closeMenu]);\n\n  const handlePin = useCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  }, []);\n\n  const handleUnpin = useCallback(() => {\n    pinMessage({ messageId: message.id, isUnpin: true });\n    closeMenu();\n  }, [pinMessage, message.id, closeMenu]);\n\n  const handleForward = useCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  }, [openForwardMenu, message, closeMenu, album]);\n\n  const handleFaveSticker = useCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker });\n  }, [closeMenu, message.content.sticker, faveSticker]);\n\n  const handleUnfaveSticker = useCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker });\n  }, [closeMenu, message.content.sticker, unfaveSticker]);\n\n  const handleCancelVote = useCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  }, [closeMenu, message, cancelPollVote]);\n\n  const handlePollClose = useCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  }, [closeMenu, message, closePoll]);\n\n  const handleSelectMessage = useCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  }, [closeMenu, message.id, toggleMessageSelection, album]);\n\n  const handleScheduledMessageSend = useCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  }, [closeMenu, message.chatId, message.id, sendScheduledMessages]);\n\n  const handleOpenCalendar = useCallback(() => {\n    setIsMenuOpen(false);\n    openCalendar();\n  }, [openCalendar]);\n\n  const handleOpenSeenByModal = useCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  }, [closeMenu, message.chatId, message.id, openSeenByModal]);\n\n  const handleOpenReactorListModal = useCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  }, [closeMenu, openReactorListModal, message.chatId, message.id]);\n\n  const handleRescheduleMessage = useCallback((date: Date) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt: Math.round(date.getTime() / 1000),\n    });\n  }, [message.chatId, message.id, rescheduleMessage]);\n\n  const handleCopyMessages = useCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  }, [closeMenu, copyMessagesByIds]);\n\n  const handleCopyLink = useCallback(() => {\n    copyTextToClipboard(`https://t.me/${chatUsername || `c/${message.chatId.replace('-', '')}`}/${message.id}`);\n    closeMenu();\n  }, [chatUsername, closeMenu, message]);\n\n  const handleCopyNumber = useCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  }, [closeMenu, message]);\n\n  const handleDownloadClick = useCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      if (isDownloading) {\n        cancelMessageMediaDownload({ message: msg });\n      } else {\n        downloadMessageMedia({ message: msg });\n      }\n    });\n    closeMenu();\n  }, [album, message, closeMenu, isDownloading, cancelMessageMediaDownload, downloadMessageMedia]);\n\n  const handleSaveGif = useCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video });\n    closeMenu();\n  }, [closeMenu, message, saveGif]);\n\n  const handleSendReaction = useCallback((reaction: string | undefined, x: number, y: number) => {\n    sendReaction({\n      chatId: message.chatId, messageId: message.id, reaction, x, y, startSize: START_SIZE,\n    });\n    closeMenu();\n  }, [closeMenu, message.chatId, message.id, sendReaction]);\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        availableReactions={availableReactions}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        anchor={anchor}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canRemoveReaction={canRemoveReaction}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canDelete={canDelete}\n        canReport={canReport}\n        canPin={canPin}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        isDownloading={isDownloading}\n        seenByRecentUsers={seenByRecentUsers}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onSendReaction={handleSendReaction}\n        onShowReactors={handleOpenReactorListModal}\n      />\n      <DeleteMessageModal\n        isOpen={isDeleteModalOpen}\n        isSchedule={messageListType === 'scheduled'}\n        onClose={closeDeleteModal}\n        album={album}\n        message={message}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={reportMessageIds}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && (\n        <CalendarModal\n          isOpen={isCalendarOpen}\n          withTimePicker\n          selectedAt={message.date * 1000}\n          maxAt={getDayStartAt(scheduledMaxDate)}\n          isFutureMode\n          onClose={handleCloseCalendar}\n          onSubmit={handleRescheduleMessage}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const activeDownloads = selectActiveDownloadIds(global, message.chatId);\n    const chat = selectChat(global, message.chatId);\n    const { seenByExpiresAt, seenByMaxChatMembers } = global.appConfig || {};\n    const {\n      noOptions,\n      canReply,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canForward,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActions(global, message, threadId)) || {};\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n    const isLocal = isMessageLocal(message);\n    const canShowSeenBy = Boolean(chat\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwnMessage(message)\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isPrivate = chat && isUserId(chat.id);\n    const isAction = isActionMessage(message);\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const canRemoveReaction = isPrivate && message.reactions?.results?.some((l) => l.isChosen);\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      availableReactions: global.availableReactions,\n      noOptions,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReply,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canReport,\n      canEdit: !isPinned && canEdit,\n      canForward: !isProtected && !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: canCopyNumber || (!isProtected && canCopy),\n      canCopyLink: !isProtected && !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      enabledReactions: chat?.isForbidden ? undefined : chat?.fullInfo?.enabledReactions,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chat?.fullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID,\n      canRemoveReaction,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(ContextMenuContainer));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useFlag from '../../../hooks/useFlag';\n\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  onAboutAds: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n};\n\ntype StateProps = {\n  canBuyPremium?: boolean;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps & StateProps> = ({\n  message,\n  anchor,\n  onAboutAds,\n  onClose,\n  onCloseAnimationEnd,\n  canBuyPremium,\n}) => {\n  const { openPremiumModal } = getActions();\n\n  const [isMenuOpen, , closeMenu] = useFlag(true);\n  const { transitionClassNames } = useShowTransition(isMenuOpen, onCloseAnimationEnd, undefined, false);\n\n  const handleAboutAdsOpen = useCallback(() => {\n    onAboutAds();\n    closeMenu();\n  }, [closeMenu, onAboutAds]);\n\n  const handleSponsoredHide = useCallback(() => {\n    closeMenu();\n    openPremiumModal();\n    onClose();\n  }, [closeMenu, onClose, openPremiumModal]);\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isOpen={isMenuOpen}\n        anchor={anchor}\n        message={message}\n        onClose={closeMenu}\n        onCloseAnimationEnd={closeMenu}\n        onAboutAds={handleAboutAdsOpen}\n        onSponsoredHide={canBuyPremium ? handleSponsoredHide : undefined}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canBuyPremium: !selectIsCurrentUserPremium(global) && !selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(SponsoredMessageContextMenuContainer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\n\nimport { STICKER_SIZE_MODAL } from '../../config';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsChatWithSelf, selectIsCurrentUserPremium,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectStickerSetByShortName,\n} from '../../global/selectors';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport renderText from './helpers/renderText';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !stickerSet?.stickers) {\n      if (fromSticker) {\n        const { stickerSetId, stickerSetAccessHash } = fromSticker;\n        loadStickers({\n          stickerSetId,\n          stickerSetAccessHash,\n        });\n      } else if (stickerSetShortName) {\n        loadStickers({\n          stickerSetShortName,\n        });\n      }\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, stickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({ sticker, isSilent, scheduledAt });\n        onClose();\n      });\n    } else {\n      sendMessage({ sticker, isSilent });\n      onClose();\n    }\n  }, [onClose, requestCalendar, sendMessage, shouldSchedule]);\n\n  const handleButtonClick = useCallback(() => {\n    if (stickerSet) {\n      toggleStickerSet({ stickerSetId: stickerSet.id });\n      onClose();\n    }\n  }, [onClose, stickerSet, toggleStickerSet]);\n\n  return (\n    <Modal\n      className=\"StickerSetModal\"\n      isOpen={isOpen}\n      onClose={onClose}\n      hasCloseButton\n      title={stickerSet ? renderText(stickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n    >\n      {stickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\">\n            {stickerSet.stickers.map((sticker) => (\n              <StickerButton\n                sticker={sticker}\n                size={STICKER_SIZE_MODAL}\n                observeIntersection={observeIntersection}\n                onClick={canSendStickers ? handleSelect : undefined}\n                clickArg={sticker}\n                isSavedMessages={isSavedMessages}\n                isCurrentUserPremium={isCurrentUserPremium}\n              />\n            ))}\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={stickerSet.installedDate ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {lang(\n                stickerSet.installedDate ? 'StickerPack.RemoveStickerCount' : 'StickerPack.AddStickerCount',\n                stickerSet.count,\n                'i',\n              )}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat) : undefined;\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, threadId) && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: selectShouldSchedule(global),\n      stickerSet: fromSticker\n        ? selectStickerSet(global, fromSticker.stickerSetId)\n        : stickerSetShortName\n          ? selectStickerSetByShortName(global, stickerSetShortName)\n          : undefined,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiBotCommand, ApiChat } from '../../api/types';\nimport type { IAnchorPosition } from '../../types';\n\nimport { REPLIES_USER_ID } from '../../config';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../util/environment';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport {\n  selectChat, selectNotifySettings, selectNotifyExceptions, selectUser, selectChatBot,\n} from '../../global/selectors';\nimport {\n  isUserId, getCanDeleteChat, selectIsChatMuted, getCanAddContact, isChatChannel, isChatGroup,\n} from '../../global/helpers';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useLang from '../../hooks/useLang';\n\nimport Portal from '../ui/Portal';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport ReportModal from '../common/ReportModal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: string; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  privacy: {\n    icon: 'info',\n    label: 'Privacy',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: number;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  canAddContact?: boolean;\n  canReportChat?: boolean;\n  canDeleteChat?: boolean;\n  hasLinkedChat?: boolean;\n};\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  canStartBot,\n  canRestartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canReportChat,\n  canDeleteChat,\n  hasLinkedChat,\n  canAddContact,\n  onSubscribeChannel,\n  onSearchClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    joinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    requestCall,\n    toggleStatistics,\n  } = getActions();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const { x, y } = anchor;\n\n  useShowTransition(isOpen, onCloseAnimationEnd, undefined, false);\n\n  const handleReport = useCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  }, []);\n\n  const closeReportModal = useCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  }, [onClose]);\n\n  const handleDelete = useCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  }, []);\n\n  const closeMenu = useCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  }, [onClose]);\n\n  const closeDeleteModal = useCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  }, [onClose]);\n\n  const handleStartBot = useCallback(() => {\n    sendBotCommand({ command: '/start' });\n  }, [sendBotCommand]);\n\n  const handleRestartBot = useCallback(() => {\n    restartBot({ chatId });\n  }, [chatId, restartBot]);\n\n  const handleToggleMuteClick = useCallback(() => {\n    updateChatMutedState({ chatId, isMuted: !isMuted });\n    closeMenu();\n  }, [chatId, closeMenu, isMuted, updateChatMutedState]);\n\n  const handleEnterVoiceChatClick = useCallback(() => {\n    if (canCreateVoiceChat) {\n      // TODO show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      joinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  }, [closeMenu, canCreateVoiceChat, chatId, joinGroupCall, createGroupCall]);\n\n  const handleLinkedChatClick = useCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  }, [chatId, closeMenu, openLinkedChat]);\n\n  const handleAddContactClick = useCallback(() => {\n    openAddContactDialog({ userId: chatId });\n    closeMenu();\n  }, [openAddContactDialog, chatId, closeMenu]);\n\n  const handleSubscribe = useCallback(() => {\n    onSubscribeChannel();\n    closeMenu();\n  }, [closeMenu, onSubscribeChannel]);\n\n  const handleVideoCall = useCallback(() => {\n    requestCall({ userId: chatId, isVideo: true });\n    closeMenu();\n  }, [chatId, closeMenu, requestCall]);\n\n  const handleCall = useCallback(() => {\n    requestCall({ userId: chatId });\n    closeMenu();\n  }, [chatId, closeMenu, requestCall]);\n\n  const handleSearch = useCallback(() => {\n    onSearchClick();\n    closeMenu();\n  }, [closeMenu, onSearchClick]);\n\n  const handleStatisticsClick = useCallback(() => {\n    toggleStatistics();\n    closeMenu();\n  }, [closeMenu, toggleStatistics]);\n\n  const handleSelectMessages = useCallback(() => {\n    enterMessageSelectMode();\n    closeMenu();\n  }, [closeMenu, enterMessageSelectMode]);\n\n  useEffect(() => {\n    disableScrolling();\n\n    return enableScrolling;\n  }, []);\n\n  const lang = useLang();\n\n  const botButtons = useMemo(() => {\n    return botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {lang(cmd.label)}\n        </MenuItem>\n      );\n    });\n  }, [botCommands, closeMenu, lang, sendBotCommand]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n        >\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canRestartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {lang('AddContact')}\n            </MenuItem>\n          )}\n          {IS_SINGLE_COLUMN_LAYOUT && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {lang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {lang('VideoCall')}\n            </MenuItem>\n          )}\n          {IS_SINGLE_COLUMN_LAYOUT && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {lang('Search')}\n            </MenuItem>\n          )}\n          {canMute && (\n            <MenuItem\n              icon={isMuted ? 'unmute' : 'mute'}\n              onClick={handleToggleMuteClick}\n            >\n              {lang(isMuted ? 'ChatsUnmute' : 'ChatsMute')}\n            </MenuItem>\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {lang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {lang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          <MenuItem\n            icon=\"select\"\n            onClick={handleSelectMessages}\n          >\n            {lang('ReportSelectMessages')}\n          </MenuItem>\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {lang('Statistics')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {lang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canLeave && (\n            <MenuItem\n              destructive\n              icon=\"delete\"\n              onClick={handleDelete}\n            >\n              {lang(isPrivate\n                ? 'DeleteChatUser'\n                : (canDeleteChat ? 'GroupInfo.DeleteAndExit' : (isChannel ? 'LeaveChannel' : 'Group.LeaveGroup')))}\n            </MenuItem>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={chat}\n          />\n        )}\n        {canReportChat && chat?.id && (\n          <ReportModal\n            isOpen={isReportModalOpen}\n            onClose={closeReportModal}\n            subject=\"peer\"\n            chatId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const canReportChat = isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf);\n\n    const chatBot = chatId !== REPLIES_USER_ID ? selectChatBot(global, chatId) : undefined;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isPrivate,\n      canAddContact,\n      canReportChat,\n      canDeleteChat: getCanDeleteChat(chat),\n      hasLinkedChat: Boolean(chat?.fullInfo?.linkedChatId),\n      botCommands: chatBot?.fullInfo?.botInfo?.commands,\n    };\n  },\n)(HeaderMenuContainer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState, useLayoutEffect,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { debounce } from '../../util/schedulers';\nimport { selectCurrentTextSearch, selectCurrentChat } from '../../global/selectors';\nimport { getDayStartAt } from '../../util/dateFormat';\n\nimport Button from '../ui/Button';\nimport SearchInput from '../ui/SearchInput';\n\nimport './MobileSearch.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  query?: string;\n  totalCount?: number;\n  foundIds?: number[];\n  isHistoryCalendarOpen?: boolean;\n};\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MobileSearchFooter: FC<StateProps> = ({\n  isActive,\n  chat,\n  query,\n  totalCount,\n  foundIds,\n  isHistoryCalendarOpen,\n}) => {\n  const {\n    setLocalTextSearchQuery,\n    searchTextMessagesLocal,\n    focusMessage,\n    closeLocalTextSearch,\n    openHistoryCalendar,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [focusedIndex, setFocusedIndex] = useState(0);\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window as any;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n        mainEl.style.transform = `translateY(${pageTop}px)`;\n        mainEl.style.height = `${height}px`;\n        document.documentElement.scrollTop = pageTop;\n      } else {\n        mainEl.style.transform = '';\n        mainEl.style.height = '';\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Focus message\n  useEffect(() => {\n    if (chat?.id && foundIds?.length) {\n      focusMessage({ chatId: chat.id, messageId: foundIds[0] });\n      setFocusedIndex(0);\n    } else {\n      setFocusedIndex(-1);\n    }\n  }, [chat?.id, focusMessage, foundIds]);\n\n  // Disable native up/down buttons on iOS\n  useEffect(() => {\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n\n    Array.from(document.querySelectorAll<HTMLDivElement>('div[contenteditable]')).forEach((div) => {\n      div.contentEditable = isActive ? 'false' : 'true';\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n    }\n  }, [isActive]);\n\n  useLayoutEffect(() => {\n    const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n    searchInput.blur();\n  }, [isHistoryCalendarOpen]);\n\n  const handleMessageSearchQueryChange = useCallback((newQuery: string) => {\n    setLocalTextSearchQuery({ query: newQuery });\n\n    if (newQuery.length) {\n      runDebouncedForSearch(searchTextMessagesLocal);\n    }\n  }, [searchTextMessagesLocal, setLocalTextSearchQuery]);\n\n  const handleUp = useCallback(() => {\n    if (chat && foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      focusMessage({ chatId: chat.id, messageId: foundIds[newFocusIndex] });\n      setFocusedIndex(newFocusIndex);\n    }\n  }, [chat, focusedIndex, focusMessage, foundIds]);\n\n  const handleDown = useCallback(() => {\n    if (chat && foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      focusMessage({ chatId: chat.id, messageId: foundIds[newFocusIndex] });\n      setFocusedIndex(newFocusIndex);\n    }\n  }, [chat, focusedIndex, focusMessage, foundIds]);\n\n  return (\n    <div id=\"MobileSearch\" className={isActive ? 'active' : ''}>\n      <div className=\"header\">\n        <Button\n          size=\"smaller\"\n          round\n          color=\"translucent\"\n          onClick={closeLocalTextSearch}\n        >\n          <i className=\"icon-arrow-left\" />\n        </Button>\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          onChange={handleMessageSearchQueryChange}\n        />\n      </div>\n      <div className=\"footer\">\n        <div className=\"counter\">\n          {query ? (\n            foundIds?.length ? (\n              `${focusedIndex + 1} of ${totalCount}`\n            ) : foundIds && !foundIds.length ? (\n              'No results'\n            ) : (\n              ''\n            )\n          ) : (\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel=\"Search messages by date\"\n            >\n              <i className=\"icon-calendar\" />\n            </Button>\n          )}\n        </div>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleUp}\n          disabled={!foundIds || !foundIds.length || focusedIndex === foundIds.length - 1}\n        >\n          <i className=\"icon-up\" />\n        </Button>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleDown}\n          disabled={!foundIds || !foundIds.length || focusedIndex === 0}\n        >\n          <i className=\"icon-down\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chat = selectCurrentChat(global);\n    if (!chat) {\n      return {};\n    }\n\n    const { query, results } = selectCurrentTextSearch(global) || {};\n    const { totalCount, foundIds } = results || {};\n\n    return {\n      chat,\n      query,\n      totalCount,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(global.historyCalendarSelectedAt),\n    };\n  },\n)(MobileSearchFooter));\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n\nexport default isFullyVisible;\n","import findInViewport from './findInViewport';\nimport isFullyVisible from './isFullyVisible';\nimport fastSmoothScroll from './fastSmoothScroll';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    fastSmoothScroll(container, allElements[index], position, SCROLL_MARGIN);\n  }\n}\n","import { useCallback, useEffect, useState } from '../../../../lib/teact/teact';\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: AnyToVoidFunction;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  }, [items]);\n\n  const handleArrowKey = useCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  }, [setSelectedItemIndex, getSelectedIndex]);\n\n  const handleItemSelect = useCallback((e: KeyboardEvent) => {\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        e.preventDefault();\n        onSelect(item);\n      }\n    }\n  }, [items, onSelect, selectedItemIndex]);\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useCallback, useEffect, useRef, memo,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport ListItem from '../../ui/ListItem';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  }, [onInsertUserName]);\n\n  const handleSelectMention = useCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  }, [handleUserSelect]);\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePrevious(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => handleUserSelect(id)}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachment, ApiChatMember } from '../../../api/types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW,\n  EDITABLE_INPUT_MODAL_ID,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport usePrevious from '../../../hooks/usePrevious';\nimport useMentionTooltip from './hooks/useMentionTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useLang from '../../../hooks/useLang';\nimport useFlag from '../../../hooks/useFlag';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport { useStateRef } from '../../../hooks/useStateRef';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport File from '../../common/File';\nimport MessageInput from './MessageInput';\nimport MentionTooltip from './MentionTooltip';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\n\nimport './AttachmentModal.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: number;\n  attachments: ApiAttachment[];\n  caption: string;\n  canShowCustomSendMenu?: boolean;\n  isReady?: boolean;\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSchedule?: boolean;\n  addRecentEmoji: AnyToVoidFunction;\n  onCaptionUpdate: (html: string) => void;\n  onSend: () => void;\n  onFileAppend: (files: File[], isQuick: boolean) => void;\n  onClear: () => void;\n  onSendSilent: () => void;\n  onSendScheduled: () => void;\n  captionLimit: number;\n};\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst AttachmentModal: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  caption,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  shouldSchedule,\n  addRecentEmoji,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n}) => {\n  const captionRef = useStateRef(caption);\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useStateRef<HTMLButtonElement | null>(null);\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePrevious(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const isOpen = Boolean(attachments.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n  const isQuick = Boolean(renderingAttachments && renderingAttachments.every((a) => a.quick));\n  const lang = useLang();\n\n  const {\n    isMentionTooltipOpen, closeMentionTooltip, insertMention, mentionFilteredUsers,\n  } = useMentionTooltip(\n    isOpen,\n    captionRef,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n  const {\n    isEmojiTooltipOpen, closeEmojiTooltip, filteredEmojis, insertEmoji,\n  } = useEmojiTooltip(\n    isOpen,\n    captionRef,\n    recentEmojis,\n    EDITABLE_INPUT_MODAL_ID,\n    onCaptionUpdate,\n    baseEmojiKeywords,\n    emojiKeywords,\n    !isReady,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useCallback(() => {\n    if (isOpen) {\n      if (shouldSchedule) {\n        onSendScheduled();\n      } else {\n        onSend();\n      }\n    }\n  }, [isOpen, onSendScheduled, onSend, shouldSchedule]);\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.drop-target') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest('.AttachmentModal.hovered')) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      const newFiles = isQuick\n        ? Array.from(files).filter((file) => {\n          return file.type && CONTENT_TYPES_WITH_PREVIEW.has(file.type);\n        })\n        : Array.from(files);\n\n      onFileAppend(newFiles, isQuick);\n    }\n  }, [isQuick, onFileAppend, unmarkHovered]);\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const areAllPhotos = renderingAttachments.every((a) => SUPPORTED_IMAGE_CONTENT_TYPES.has(a.mimeType));\n  const areAllVideos = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n  const areAllAudios = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n\n  let title = '';\n  if (areAllPhotos) {\n    title = lang('PreviewSender.SendPhoto', renderingAttachments.length, 'i');\n  } else if (areAllVideos) {\n    title = lang('PreviewSender.SendVideo', renderingAttachments.length, 'i');\n  } else if (areAllAudios) {\n    title = lang('PreviewSender.SendAudio', renderingAttachments.length, 'i');\n  } else {\n    title = lang('PreviewSender.SendFile', renderingAttachments.length, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <i className=\"icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        <div className=\"AttachmentModal--send-wrapper\">\n          <Button\n            ref={mainButtonRef}\n            color=\"primary\"\n            size=\"smaller\"\n            className=\"modal-action-button\"\n            onClick={sendAttachments}\n            onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n          >\n            {lang('Send')}\n          </Button>\n          {canShowCustomSendMenu && (\n            <CustomSendMenu\n              isOpen={isCustomSendMenuOpen}\n              isOpenToBottom\n              onSendSilent={!isChatWithSelf ? onSendSilent : undefined}\n              onSendSchedule={onSendScheduled}\n              onClose={handleContextMenuClose}\n              onCloseAnimationEnd={handleContextMenuHide}\n              isSavedMessages={isChatWithSelf}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  const leftChars = (captionLimit - caption.length) <= 100 ? captionLimit - caption.length : undefined;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={`AttachmentModal ${isHovered ? 'hovered' : ''}`}\n    >\n      <div\n        className=\"drop-target\"\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        data-attach-description={lang('Preview.Dragging.AddItems', 10)}\n      >\n        {isQuick ? (\n          <div className=\"media-wrapper custom-scroll\">\n            {renderingAttachments.map((attachment) => (\n              attachment.mimeType.startsWith('image/')\n                ? <img src={attachment.blobUrl} alt=\"\" />\n                : <video src={attachment.blobUrl} autoPlay muted loop />\n            ))}\n          </div>\n        ) : (\n          <div className=\"document-wrapper custom-scroll\">\n            {renderingAttachments.map((attachment) => (\n              <File\n                name={attachment.filename}\n                extension={getFileExtension(attachment.filename, attachment.mimeType)}\n                previewData={attachment.previewBlobUrl}\n                size={attachment.size}\n                smaller\n              />\n            ))}\n          </div>\n        )}\n\n        <div className=\"attachment-caption-wrapper\">\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            onClose={closeMentionTooltip}\n            onInsertUserName={insertMention}\n            filteredUsers={mentionFilteredUsers}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            onClose={closeEmojiTooltip}\n            onEmojiSelect={insertEmoji}\n            addRecentEmoji={addRecentEmoji}\n          />\n          <MessageInput\n            id=\"caption-input-text\"\n            chatId={chatId}\n            threadId={threadId}\n            isAttachmentModalInput\n            html={caption}\n            editableInputId={EDITABLE_INPUT_MODAL_ID}\n            placeholder={lang('Caption')}\n            onUpdate={onCaptionUpdate}\n            onSend={sendAttachments}\n            canAutoFocus={Boolean(isReady && attachments.length)}\n            captionLimit={leftChars}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(AttachmentModal);\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseMessageInput from '../../../util/parseMessageInput';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport InputText from '../../ui/InputText';\nimport Checkbox from '../../ui/Checkbox';\nimport RadioGroup from '../../ui/RadioGroup';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const solutionRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<string>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useLang();\n\n  const focusInput = useCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  }, [isOpen]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption('');\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  useLayoutEffect(() => {\n    const solutionEl = solutionRef.current;\n\n    if (solutionEl && solution !== solutionEl.innerHTML) {\n      solutionEl.innerHTML = solution;\n    }\n  }, [solution]);\n\n  const addNewOption = useCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n    requestAnimationFrame(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      list.classList.toggle('overflown', list.scrollHeight > MAX_LIST_HEIGHT);\n      list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n    });\n  }, []);\n\n  const handleCreate = useCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter((o) => o.length);\n\n    if (!questionTrimmed || optionsTrimmed.length < 2) {\n      setQuestion(questionTrimmed);\n      if (optionsTrimmed.length) {\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isQuizMode && (!correctOption || !optionsTrimmed[Number(correctOption)])) {\n      setHasErrors(true);\n      return;\n    }\n\n    const answers = optionsTrimmed\n      .map((text, index) => ({\n        text: text.trim(),\n        option: String(index),\n        ...(String(index) === correctOption && { correct: true }),\n      }));\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: questionTrimmed,\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseMessageInput(solution.substring(0, MAX_SOLUTION_LENGTH))) || {};\n\n      payload.quiz = {\n        correctAnswers: [correctOption],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  }, [\n    isOpen,\n    question,\n    options,\n    isQuizMode,\n    correctOption,\n    isAnonymous,\n    isMultipleAnswers,\n    onSend,\n    addNewOption,\n    solution,\n  ]);\n\n  const updateOption = useCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  }, [options, addNewOption]);\n\n  const removeOption = useCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n    requestAnimationFrame(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  }, [options]);\n\n  const handleCorrectOptionChange = useCallback((newValue: string) => {\n    setCorrectOption(newValue);\n  }, [setCorrectOption]);\n\n  const handleIsAnonymousChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  }, []);\n\n  const handleMultipleAnswersChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  }, []);\n\n  const handleQuizModeChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  }, []);\n\n  const handleKeyPress = useCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  }, [handleCreate]);\n\n  const handleQuestionChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  }, []);\n\n  const getQuestionError = useCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  }, [hasErrors, lang, question]);\n\n  const getOptionsError = useCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  }, [hasErrors, lang, options]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <i className=\"icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <i className=\"icon-close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: index === options.length - 1 }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (!correctOption || !optionsTrimmed[Number(correctOption)]) && (\n      <p className=\"error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        {!shouldBeAnonymous && (\n          <Checkbox\n            label={lang('PollAnonymous')}\n            checked={isAnonymous}\n            onChange={handleIsAnonymousChange}\n          />\n        )}\n        <Checkbox\n          label={lang('PollMultiple')}\n          checked={isMultipleAnswers}\n          disabled={isQuizMode}\n          onChange={handleMultipleAnswersChange}\n        />\n        <Checkbox\n          label={lang('PollQuiz')}\n          checked={isQuizMode}\n          disabled={isMultipleAnswers || isQuiz !== undefined}\n          onChange={handleQuizModeChange}\n        />\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <div\n              ref={solutionRef}\n              className=\"form-control\"\n              contentEditable\n              dir=\"auto\"\n              onChange={(e) => setSolution(e.currentTarget.innerHTML)}\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\n\nimport { IS_EMOJI_SUPPORTED } from '../../../util/environment';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({ emoji, focus, onClick }) => {\n  const handleClick = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  }, [emoji, onClick]);\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `./img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport { RECENT_SYMBOL_SET_ID } from '../../../config';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useLang from '../../../hooks/useLang';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 9;\nconst EMOJI_MARGIN = 4;\nconst MOBILE_CONTAINER_PADDING = 8;\nconst EMOJI_SIZE = 40;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransition(shouldRender);\n\n  const lang = useLang();\n\n  const emojisPerRow = IS_SINGLE_COLUMN_LAYOUT\n    ? Math.floor((windowSize.get().width - MOBILE_CONTAINER_PADDING) / (EMOJI_SIZE + EMOJI_MARGIN))\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow) * (EMOJI_SIZE + EMOJI_MARGIN);\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useState, useEffect, memo, useRef, useMemo, useCallback,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport { IS_SINGLE_COLUMN_LAYOUT, IS_TOUCH_ENV } from '../../../util/environment';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport type {\n  EmojiModule,\n  EmojiRawData,\n  EmojiData,\n} from '../../../util/emoji';\nimport {\n  uncompressEmoji,\n} from '../../../util/emoji';\nimport fastSmoothScroll from '../../../util/fastSmoothScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { pick } from '../../../util/iteratees';\nimport fastSmoothScrollHorizontal from '../../../util/fastSmoothScrollHorizontal';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, string> = {\n  recent: 'icon-recent',\n  people: 'icon-smile',\n  nature: 'icon-animals',\n  foods: 'icon-eats',\n  activity: 'icon-sport',\n  places: 'icon-car',\n  objects: 'icon-lamp',\n  symbols: 'icon-language',\n  flags: 'icon-flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\n// Only a few categories are above this height.\nconst SMOOTH_SCROLL_DISTANCE = 800;\nconst FOCUS_MARGIN = 50;\nconst HEADER_BUTTON_WIDTH = 42; // px. Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className, onEmojiSelect, recentEmojis,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const intersectingWithIndexes = categoryIntersections\n      .map((isIntersecting, index) => ({ index, isIntersecting }))\n      .filter(({ isIntersecting }) => isIntersecting);\n\n    if (!intersectingWithIndexes.length) {\n      return;\n    }\n\n    setActiveCategoryIndex(intersectingWithIndexes[Math.floor(intersectingWithIndexes.length / 2)].index);\n  });\n\n  useHorizontalScroll(headerRef.current, !IS_SINGLE_COLUMN_LAYOUT);\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    fastSmoothScrollHorizontal(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = document.getElementById(`emoji-category-${index}`)!;\n    fastSmoothScroll(containerRef.current!, categoryEl, 'start', FOCUS_MARGIN, SMOOTH_SCROLL_DISTANCE);\n  }, []);\n\n  const handleEmojiSelect = useCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  }, [onEmojiSelect]);\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <i className={icon} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!emojis || !canRenderContents) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  return (\n    <div className={containerClassName}>\n      <div ref={headerRef} className=\"EmojiPicker-header\" dir={lang.isRtl ? 'rtl' : ''}>\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        className={buildClassName('EmojiPicker-main no-selection', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { StickerSetOrRecent } from '../../../types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\n\nimport { FAVORITE_SYMBOL_SET_ID, RECENT_SYMBOL_SET_ID, STICKER_SIZE_PICKER } from '../../../config';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport windowSize from '../../../util/windowSize';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useFlag from '../../../hooks/useFlag';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\n\nimport StickerButton from '../../common/StickerButton';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  shouldRender: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onStickerUnfave: (sticker: ApiSticker) => void;\n  onStickerFave: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent: (sticker: ApiSticker) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst STICKERS_PER_ROW_ON_DESKTOP = 5;\nconst STICKER_MARGIN = IS_SINGLE_COLUMN_LAYOUT ? 8 : 16;\nconst MOBILE_CONTAINER_PADDING = 8;\n\nconst StickerSet: FC<OwnProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  shouldRender,\n  favoriteStickers,\n  isSavedMessages,\n  observeIntersection,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  isCurrentUserPremium,\n}) => {\n  const { clearRecentStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const lang = useLang();\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransition(shouldRender);\n\n  const handleClearRecent = useCallback(() => {\n    clearRecentStickers();\n    closeConfirmModal();\n  }, [clearRecentStickers, closeConfirmModal]);\n\n  const stickersPerRow = IS_SINGLE_COLUMN_LAYOUT\n    ? Math.floor((windowSize.get().width - MOBILE_CONTAINER_PADDING) / (STICKER_SIZE_PICKER + STICKER_MARGIN))\n    : STICKERS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(stickerSet.count / stickersPerRow) * (STICKER_SIZE_PICKER + STICKER_MARGIN);\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`sticker-set-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\">{stickerSet.title}</p>\n        {isRecent && (\n          <i className=\"symbol-set-remove icon-close\" onClick={openConfirmModal} />\n        )}\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n      >\n        {shouldRender && stickerSet.stickers && stickerSet.stickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            noAnimate={!loadAndPlay}\n            onClick={onStickerSelect}\n            clickArg={sticker}\n            onUnfaveClick={stickerSet.id === FAVORITE_SYMBOL_SET_ID && favoriteStickerIdsSet?.has(sticker.id)\n              ? onStickerUnfave : undefined}\n            onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n            onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang('ClearRecentEmoji')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSet);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useState, useEffect, memo, useRef, useMemo, useCallback,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStickerSet, ApiSticker, ApiChat } from '../../../api/types';\nimport type { StickerSetOrRecent } from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  PREMIUM_STICKER_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { IS_TOUCH_ENV } from '../../../util/environment';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport fastSmoothScroll from '../../../util/fastSmoothScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport fastSmoothScrollHorizontal from '../../../util/fastSmoothScrollHorizontal';\nimport { pickTruthy } from '../../../util/iteratees';\nimport { selectChat, selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\n\nimport Avatar from '../../common/Avatar';\nimport Loading from '../../ui/Loading';\nimport Button from '../../ui/Button';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from './StickerSet';\nimport StickerSetCover from './StickerSetCover';\nimport StickerSetCoverAnimated from './StickerSetCoverAnimated';\nimport PremiumIcon from '../../common/PremiumIcon';\n\nimport './StickerPicker.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className: string;\n  loadAndPlay: boolean;\n  canSendStickers: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  addedSetIds?: string[];\n  shouldPlay?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst SMOOTH_SCROLL_DISTANCE = 500;\nconst HEADER_BUTTON_WIDTH = 52; // px (including margin)\nconst STICKER_INTERSECTION_THROTTLE = 200;\n\nconst stickerSetIntersections: boolean[] = [];\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  addedSetIds,\n  stickerSetsById,\n  shouldPlay,\n  isSavedMessages,\n  onStickerSelect,\n  isCurrentUserPremium,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const sendMessageAction = useSendMessageAction(chat!.id, threadId);\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('sticker-set-')) {\n        return;\n      }\n\n      const index = Number(id.replace('sticker-set-', ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const intersectingWithIndexes = stickerSetIntersections\n      .map((isIntersecting, index) => ({ index, isIntersecting }))\n      .filter(({ isIntersecting }) => isIntersecting);\n\n    if (!intersectingWithIndexes.length) {\n      return;\n    }\n\n    setActiveSetIndex(intersectingWithIndexes[Math.floor(intersectingWithIndexes.length / 2)].index);\n  });\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: headerRef });\n\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, addedSetIds));\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    if (isCurrentUserPremium) {\n      const premiumStickers = existingAddedSetIds\n        .map((l) => l.stickers?.filter((sticker) => sticker.hasEffect))\n        .flat()\n        .filter(Boolean);\n\n      if (premiumStickers.length) {\n        defaultSets.push({\n          id: PREMIUM_STICKER_SET_ID,\n          title: lang('PremiumStickers'),\n          stickers: premiumStickers,\n          count: premiumStickers.length,\n        });\n      }\n    }\n\n    if (chat?.fullInfo?.stickerSet) {\n      const fullSet = stickerSetsById[chat.fullInfo.stickerSet.id];\n      if (fullSet) {\n        defaultSets.push({\n          id: CHAT_STICKER_SET_ID,\n          title: lang('GroupStickers'),\n          stickers: fullSet.stickers,\n          count: fullSet.stickers!.length,\n        });\n      }\n    }\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds, favoriteStickers, isCurrentUserPremium, recentStickers, chat, lang, stickerSetsById,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadRecentStickers();\n      sendMessageAction({ type: 'chooseSticker' });\n    }\n  }, [loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  useHorizontalScroll(headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    fastSmoothScrollHorizontal(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const selectStickerSet = useCallback((index: number) => {\n    setActiveSetIndex(index);\n    const stickerSetEl = document.getElementById(`sticker-set-${index}`)!;\n    fastSmoothScroll(containerRef.current!, stickerSetEl, 'start', undefined, SMOOTH_SCROLL_DISTANCE);\n  }, []);\n\n  const handleStickerSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule);\n    addRecentSticker({ sticker });\n  }, [addRecentSticker, onStickerSelect]);\n\n  const handleStickerUnfave = useCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  }, [unfaveSticker]);\n\n  const handleStickerFave = useCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  }, [faveSticker]);\n\n  const handleMouseMove = useCallback(() => {\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [sendMessageAction]);\n\n  const handleRemoveRecentSticker = useCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  }, [removeRecentSticker]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  function renderCover(stickerSet: StickerSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      'symbol-set-button sticker-set-button',\n      index === activeSetIndex && 'activated',\n    );\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.id === PREMIUM_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === PREMIUM_STICKER_SET_ID ? (\n            <PremiumIcon withGradient />\n          ) : stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <i className=\"icon-recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <i className=\"icon-favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar chat={chat} size=\"small\" noVideo />\n          ) : stickerSet.isLottie ? (\n            <StickerSetCoverAnimated\n              stickerSet={stickerSet as ApiStickerSet}\n              observeIntersection={observeIntersectionForCovers}\n            />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              observeIntersection={observeIntersectionForCovers}\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          observeIntersection={observeIntersectionForCovers}\n          onClick={selectStickerSet}\n          clickArg={index}\n          noContextMenu\n          isCurrentUserPremium\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName('StickerPicker', className);\n\n  if (!areAddedLoaded || !canRenderContents || noPopulatedSets || !canSendStickers) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers ? (\n          <div className=\"picker-disabled\">{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className=\"picker-disabled\">{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className=\"StickerPicker-header no-selection no-scrollbar\"\n      >\n        {allSets.map(renderCover)}\n      </div>\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        className={buildClassName('StickerPicker-main no-selection', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(shouldPlay && loadAndPlay)}\n            index={i}\n            observeIntersection={observeIntersection}\n            shouldRender={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      shouldPlay: global.settings.byKey.shouldLoopStickers,\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport buildClassName from '../../util/buildClassName';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useMedia from '../../hooks/useMedia';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLang from '../../hooks/useLang';\nimport useContextMenuPosition from '../../hooks/useContextMenuPosition';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\n\nimport Spinner from '../ui/Spinner';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n\n  const hasThumbnail = Boolean(gif.thumbnail?.dataUri);\n  const localMediaHash = `gif${gif.id}`;\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`, !loadAndPlay, ApiMediaFormat.BlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, Boolean(previewBlobUrl));\n  const videoData = useMedia(localMediaHash, !loadAndPlay, ApiMediaFormat.BlobUrl);\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  useVideoCleanup(videoRef, [shouldRenderVideo]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useCallback(() => ref.current, []);\n\n  const getRootElement = useCallback(\n    () => ref.current!.closest('.custom-scroll, .no-scrollbar'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => ref.current!.querySelector('.gif-context-menu .bubble'),\n    [],\n  );\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  const handleClick = useCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  }, [isContextMenuOpen, onClick, gif, videoData]);\n\n  const handleUnsaveClick = useCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  }, [onUnsaveClick, gif]);\n\n  const handleContextDelete = useCallback(() => {\n    onUnsaveClick?.(gif);\n  }, [gif, onUnsaveClick]);\n\n  const handleSendQuiet = useCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  }, [gif, onClick, videoData]);\n\n  const handleSendScheduled = useCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  }, [gif, onClick, videoData]);\n\n  const handleMouseDown = useCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  }, [handleBeforeContextMenu]);\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    localMediaHash,\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          onClick={handleUnsaveClick}\n        >\n          <i className=\"icon-close gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {hasThumbnail && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          // We need to always render to avoid blur re-calculation\n          style={isVideoReady ? 'display: none;' : undefined}\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n        />\n      )}\n      {shouldRenderVideo && (\n        <video\n          ref={videoRef}\n          autoPlay\n          loop\n          muted\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        >\n          <source src={videoData} />\n        </video>\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || hasThumbnail ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, memo, useRef, useCallback,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { IS_TOUCH_ENV } from '../../../util/environment';\nimport buildClassName from '../../../util/buildClassName';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Loading from '../../ui/Loading';\nimport GifButton from '../../common/GifButton';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs: boolean;\n  onGifSelect: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  }, [saveGif]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n    >\n      {!canSendGifs ? (\n        <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n      ) : canRenderContents && savedGifs && savedGifs.length ? (\n        savedGifs.map((gif) => (\n          <GifButton\n            key={gif.id}\n            gif={gif}\n            observeIntersection={observeIntersection}\n            isDisabled={!loadAndPlay}\n            onClick={canSendGifs ? onGifSelect : undefined}\n            onUnsaveClick={handleUnsaveClick}\n            isSavedMessages={isSavedMessages}\n          />\n        ))\n      ) : canRenderContents && savedGifs ? (\n        <div className=\"picker-disabled\">No saved GIFs.</div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'Stickers',\n  'GIFs',\n}\n\n// Getting enum string values for display in Tabs.\n// See: https://www.typescriptlang.org/docs/handbook/enums.html#reverse-mappings\nexport const SYMBOL_MENU_TAB_TITLES = Object.values(SymbolMenuTabs)\n  .filter((value): value is string => typeof value === 'string');\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen,\n}) => {\n  const lang = useLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={SYMBOL_MENU_TAB_TITLES[tab]}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={SYMBOL_MENU_TAB_ICONS[tab]} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  }, [activeTab, onSearchOpen]);\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <i className=\"icon-search\" />\n        </Button>\n      )}\n\n      {/*{renderTabButton(SymbolMenuTabs.Emoji)}*/}\n      {/*{renderTabButton(SymbolMenuTabs.Stickers)}*/}\n      {/*{renderTabButton(SymbolMenuTabs.GIFs)}*/}\n\n      {activeTab === SymbolMenuTabs.Emoji && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <i className=\"icon-delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\n\nimport { IS_SINGLE_COLUMN_LAYOUT, IS_TOUCH_ENV } from '../../../util/environment';\nimport { fastRaf } from '../../../util/schedulers';\nimport buildClassName from '../../../util/buildClassName';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport StickerPicker from './StickerPicker';\nimport GifPicker from './GifPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\nimport Portal from '../../ui/Portal';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isOpen: boolean;\n  canSendStickers: boolean;\n  canSendGifs: boolean;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, shouldPreserveInput?: boolean\n  ) => void;\n  onGifSelect: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: AnyToVoidFunction;\n};\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isLeftColumnShown,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, IS_SINGLE_COLUMN_LAYOUT);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, onClose, false, false);\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  useLayoutEffect(() => {\n    if (!IS_SINGLE_COLUMN_LAYOUT) {\n      return undefined;\n    }\n\n    if (isOpen) {\n      document.body.classList.add('enable-symbol-menu-transforms');\n      document.body.classList.add('is-symbol-menu-open');\n    }\n\n    return () => {\n      if (isOpen) {\n        fastRaf(() => {\n          document.body.classList.remove('is-symbol-menu-open');\n          setTimeout(() => {\n            document.body.classList.remove('enable-symbol-menu-transforms');\n          }, ANIMATION_DURATION);\n        });\n      }\n    };\n  }, [isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, activeTab, addRecentEmoji]);\n\n  const handleEmojiSelect = useCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => {\n      return [...emojis, name];\n    });\n\n    onEmojiSelect(emoji);\n  }, [onEmojiSelect]);\n\n  const handleSearch = useCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  }, [onClose, onSearchOpen]);\n\n  const handleStickerSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n  }, [onStickerSelect]);\n\n  const lang = useLang();\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            canSendStickers={canSendStickers}\n            onStickerSelect={handleStickerSelect}\n            chatId={chatId}\n            threadId={threadId}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition name=\"slide\" activeKey={activeTab} renderCount={SYMBOL_MENU_TAB_TITLES.length}>\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {IS_SINGLE_COLUMN_LAYOUT && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <i className=\"icon-close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearch}\n      />\n    </>\n  );\n\n  if (IS_SINGLE_COLUMN_LAYOUT) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const className = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n    );\n\n    return (\n      <Portal>\n        <div className={className}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SymbolMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: global.isLeftColumnShown,\n    };\n  },\n)(SymbolMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiUser } from '../../../api/types';\n\nimport renderText from '../../common/helpers/renderText';\nimport buildClassName from '../../../util/buildClassName';\n\nimport ListItem from '../../ui/ListItem';\nimport Avatar from '../../common/Avatar';\n\nimport './BotCommand.scss';\n\ntype OwnProps = {\n  botCommand: ApiBotCommand;\n  bot?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  onClick: (botCommand: ApiBotCommand) => void;\n};\n\nconst BotCommand: FC<OwnProps> = ({\n  withAvatar,\n  focus,\n  botCommand,\n  bot,\n  onClick,\n}) => {\n  return (\n    <ListItem\n      key={botCommand.command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick={() => onClick(botCommand)}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" user={bot} noVideo />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{botCommand.command}</span>\n        <span className=\"subtitle\">{renderText(botCommand.description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BotCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useCallback, useEffect, useRef, memo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiBotCommand, ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport usePrevious from '../../../hooks/usePrevious';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport BotCommand from './BotCommand';\n\nimport './BotCommandTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n};\n\nconst BotCommandTooltip: FC<OwnProps & StateProps> = ({\n  usersById,\n  isOpen,\n  withUsername,\n  botCommands,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useCallback(({ botId, command }: ApiBotCommand) => {\n    const bot = usersById[botId];\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.username}` : ''}`,\n      botId,\n    });\n    onClick();\n  }, [onClick, sendBotCommand, usersById, withUsername]);\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: botCommands,\n    onSelect: handleSendCommand,\n    onClose,\n  });\n\n  useEffect(() => {\n    if (botCommands && !botCommands.length) {\n      onClose();\n    }\n  }, [botCommands, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  const prevCommands = usePrevious(botCommands && botCommands.length ? botCommands : undefined, shouldRender);\n  const renderedCommands = botCommands && !botCommands.length ? prevCommands : botCommands;\n\n  if (!shouldRender || (renderedCommands && !renderedCommands.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'BotCommandTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedCommands && renderedCommands.map((chatBotCommand, index) => (\n        <BotCommand\n          key={`${chatBotCommand.botId}_${chatBotCommand.command}`}\n          botCommand={chatBotCommand}\n          bot={usersById[chatBotCommand.botId]}\n          withAvatar\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({\n    usersById: global.users.byId,\n  }),\n)(BotCommandTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_SINGLE_COLUMN_LAYOUT, IS_TOUCH_ENV } from '../../../util/environment';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport BotCommand from './BotCommand';\n\nimport './BotCommandMenu.scss';\nimport { getActions } from '../../../global';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, IS_SINGLE_COLUMN_LAYOUT);\n\n  const handleClick = useCallback((botCommand: ApiBotCommand) => {\n    sendBotCommand({\n      command: `/${botCommand.command}`,\n      botId: botCommand.botId,\n    });\n    onClose();\n  }, [onClose, sendBotCommand]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <BotCommand\n          key={botCommand.command}\n          botCommand={botCommand}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport Loading from '../../ui/Loading';\nimport StickerButton from '../../common/StickerButton';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  stickers,\n  isSavedMessages,\n  onStickerSelect,\n  isCurrentUserPremium,\n}) => {\n  const { clearStickersForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const prevStickers = usePrevious(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(clearStickersForEmoji) : undefined), [isOpen, clearStickersForEmoji]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={onStickerSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../../../util/environment';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useLang from '../../../hooks/useLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  onSendSilent,\n  onSendSchedule,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n\n  const lang = useLang();\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className=\"CustomSendMenu\"\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n      {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{lang('SendWithoutSound')}</MenuItem>}\n      {onSendSchedule && (\n        <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/isFullyVisible';\nimport fastSmoothScrollHorizontal from '../../../util/fastSmoothScrollHorizontal';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    fastSmoothScrollHorizontal(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onEmojiSelect: (text: string) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: AnyToVoidFunction;\n  emojis: Emoji[];\n};\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  onClose,\n  onEmojiSelect,\n  addRecentEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const listEmojis: Emoji[] = usePrevDuringAnimation(emojis.length ? emojis : undefined, CLOSE_DURATION) || [];\n\n  const handleSelectEmoji = useCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  }, [addRecentEmoji, onEmojiSelect]);\n\n  const handleClick = useCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  }, [addRecentEmoji, onEmojiSelect]);\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: emojis,\n    onSelect: handleSelectEmoji,\n    onClose,\n  });\n\n  useEffect(() => {\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          <EmojiButton\n            key={emoji.id}\n            emoji={emoji}\n            focus={selectedIndex === index}\n            onClick={handleClick}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport useMedia from '../../../../hooks/useMedia';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? `webDocument:${thumbnail.url}` : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable=\"false\" />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransition from '../../../../hooks/useMediaTransition';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult && isForGallery) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailDataUrl = useMedia(webThumbnail ? `webDocument:${webThumbnail.url}` : undefined);\n  const mediaBlobUrl = useMedia(photo && `photo${photo.id}?size=m`);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const handleClick = useCallback(() => {\n    onClick(inlineResult);\n  }, [inlineResult, onClick]);\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailDataUrl} alt=\"\" />\n        <img src={mediaBlobUrl} className={buildClassName('full-media', transitionClassNames)} alt=\"\" />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbUrl={mediaBlobUrl || (thumbnail?.dataUri || thumbnailDataUrl)}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineResult } from '../../../../api/types';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, url, description, webThumbnail,\n  } = inlineResult;\n\n  const handleClick = useCallback(() => {\n    onClick(inlineResult);\n  }, [inlineResult, onClick]);\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult, ApiVideo } from '../../../../api/types';\n\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  }, [inlineResult, onClick]);\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { IS_TOUCH_ENV } from '../../../util/environment';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport buildClassName from '../../../util/buildClassName';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { throttle } from '../../../util/schedulers';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePrevious from '../../../hooks/usePrevious';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport MediaResult from './inlineResults/MediaResult';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport StickerResult from './inlineResults/StickerResult';\nimport ListItem from '../../ui/ListItem';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  }, [loadMore]);\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: isGallery,\n    noArrowNavigation: isGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  }, [botId, openChat, startBot, switchPm]);\n\n  const prevInlineBotResults = usePrevious(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults && !inlineBotResults.length\n    ? prevInlineBotResults\n    : inlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    isGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={isGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {renderedInlineBotResults?.length && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useCallback, useEffect, useRef, memo,\n} from '../../../lib/teact/teact';\n\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\nimport { IS_TOUCH_ENV } from '../../../util/environment';\nimport renderText from '../../common/helpers/renderText';\nimport { getUserFullName, isUserId } from '../../../global/helpers';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useLang from '../../../hooks/useLang';\nimport buildClassName from '../../../util/buildClassName';\nimport { getActions, getGlobal } from '../../../global';\n\nimport ListItem from '../../ui/ListItem';\nimport Avatar from '../../common/Avatar';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsIds?: string[];\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  chatId,\n  selectedSendAsId,\n  sendAsIds,\n}) => {\n  const { saveDefaultSendAs } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId, sendAsId: id });\n  }, [chatId, onClose, saveDefaultSendAs]);\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsIds && !sendAsIds.length) {\n      onClose();\n    }\n  }, [sendAsIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsIds?.map((id, index) => {\n        const user = isUserId(id) ? usersById[id] : undefined;\n        const chat = !user ? chatsById[id] : undefined;\n        const fullName = user ? getUserFullName(user) : chat?.title;\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleUserSelect(id)}\n            focus={selectedSendAsIndex === index}\n          >\n            <Avatar\n              size=\"small\"\n              user={user}\n              chat={chat}\n              className={buildClassName(selectedSendAsId === id && 'selected')}\n            />\n            <div className=\"info\">\n              <div className=\"title\">\n                <h3 dir=\"auto\">{fullName && renderText(fullName)}</h3>\n              </div>\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useMemo, memo, useRef } from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiMessage, ApiUser, ApiChat } from '../../api/types';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport {\n  selectUser,\n  selectChatMessages,\n  selectChat,\n  selectCurrentTextSearch,\n} from '../../global/selectors';\nimport {\n  getChatTitle,\n  getUserFullName,\n  isChatChannel,\n} from '../../global/helpers';\nimport useLang from '../../hooks/useLang';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport { renderMessageSummary } from '../common/helpers/renderMessageText';\nimport renderText from '../common/helpers/renderText';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport LastMessageMeta from '../common/LastMessageMeta';\nimport Avatar from '../common/Avatar';\n\nimport './RightSearch.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: number;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  messagesById?: Record<number, ApiMessage>;\n  query?: string;\n  totalCount?: number;\n  foundIds?: number[];\n};\n\nconst RightSearch: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  onClose,\n  isActive,\n  chat,\n  messagesById,\n  query,\n  totalCount,\n  foundIds,\n}) => {\n  const {\n    searchTextMessagesLocal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(searchTextMessagesLocal, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if (!query || !viewportIds?.length || !messagesById) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return viewportIds.map((id) => {\n      const message = messagesById[id];\n      if (!message) {\n        return undefined;\n      }\n\n      const senderUser = message.senderId ? selectUser(getGlobal(), message.senderId) : undefined;\n\n      let senderChat;\n      if (chat && isChatChannel(chat)) {\n        senderChat = chat;\n      } else if (message.forwardInfo) {\n        const { isChannelPost, fromChatId } = message.forwardInfo;\n        senderChat = isChannelPost && fromChatId ? selectChat(getGlobal(), fromChatId) : undefined;\n      } else {\n        senderChat = message.senderId ? selectChat(getGlobal(), message.senderId) : undefined;\n      }\n\n      return {\n        message,\n        senderUser,\n        senderChat,\n        onClick: () => focusMessage({ chatId, threadId, messageId: id }),\n      };\n    }).filter(Boolean);\n  }, [query, viewportIds, messagesById, chat, focusMessage, chatId, threadId]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, true, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      foundResult.onClick();\n    }\n  }, '.ListItem-button', true);\n\n  const renderSearchResult = ({\n    message, senderUser, senderChat, onClick,\n  }: {\n    message: ApiMessage;\n    senderUser?: ApiUser;\n    senderChat?: ApiChat;\n    onClick: NoneToVoidFunction;\n  }) => {\n    const title = senderChat ? getChatTitle(lang, senderChat) : getUserFullName(senderUser);\n    const text = renderMessageSummary(lang, message, undefined, query);\n\n    return (\n      <ListItem\n        key={message.id}\n        teactOrderKey={-message.date}\n        className=\"chat-item-clickable search-result-message m-0\"\n        onClick={onClick}\n      >\n        <Avatar chat={senderChat} user={senderUser} />\n        <div className=\"info\">\n          <div className=\"title\">\n            <h3 dir=\"auto\">{title && renderText(title)}</h3>\n            <LastMessageMeta message={message} />\n          </div>\n          <div className=\"subtitle\" dir=\"auto\">\n            {text}\n          </div>\n        </div>\n      </ListItem>\n    );\n  };\n\n  const isOnTop = viewportIds?.[0] === foundIds?.[0];\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className=\"RightSearch custom-scroll\"\n      items={viewportResults}\n      preloadBackwards={0}\n      onLoadMore={getMore}\n      onKeyDown={handleKeyDown}\n    >\n      {isOnTop && (\n        <p key=\"helper-text\" className=\"helper-text\" dir=\"auto\">\n          {!query ? (\n            lang('lng_dlg_search_for_messages')\n          ) : (totalCount === 0 || !viewportResults.length) ? (\n            lang('lng_search_no_results')\n          ) : totalCount === 1 ? (\n            '1 message found'\n          ) : (\n            `${(viewportResults.length && (totalCount || viewportResults.length))} messages found`\n          )}\n        </p>\n      )}\n      {viewportResults.map(renderSearchResult)}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const messagesById = chat && selectChatMessages(global, chat.id);\n    if (!chat || !messagesById) {\n      return {};\n    }\n\n    const { query, results } = selectCurrentTextSearch(global) || {};\n    const { totalCount, foundIds } = results || {};\n\n    return {\n      chat,\n      messagesById,\n      query,\n      totalCount,\n      foundIds,\n    };\n  },\n)(RightSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, memo, useMemo, useCallback,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\nimport useFlag from '../../hooks/useFlag';\nimport useOnChange from '../../hooks/useOnChange';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport StickerButton from '../common/StickerButton';\nimport StickerSetModal from '../common/StickerSetModal.async';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isSomeModalOpen: boolean;\n  onModalToggle: (isOpen: boolean) => void;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isSomeModalOpen, onModalToggle, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet } = getActions();\n\n  const lang = useLang();\n  const isAdded = set && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useOnChange(() => {\n    onModalToggle(isModalOpen);\n  }, [isModalOpen, onModalToggle]);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY) {\n      loadStickers({ stickerSetId });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main\">\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noAnimate={!shouldPlay || isModalOpen || isSomeModalOpen}\n            clickArg={undefined}\n            onClick={openModal}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))}\n      </div>\n      {canRenderStickers && (\n        <StickerSetModal\n          isOpen={isModalOpen}\n          fromSticker={displayedStickers[0]}\n          onClose={closeModal}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { throttle } from '../../util/schedulers';\nimport { selectCurrentStickerSearch } from '../../global/selectors';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  onClose,\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isSomeModalOpen={isModalOpen}\n          onModalToggle={setIsModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isSomeModalOpen={isModalOpen}\n          onModalToggle={setIsModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiVideo } from '../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport {\n  selectCurrentGifSearch,\n  selectChat,\n  selectIsChatWithBot,\n  selectCurrentMessageList,\n  selectCanScheduleUntilOnline,\n  selectIsChatWithSelf,\n} from '../../global/selectors';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport GifButton from '../common/GifButton';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({ gif, scheduledAt, isSilent });\n        });\n      } else {\n        sendMessage({ gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, requestCalendar, sendMessage, setGifSearchQuery]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={searchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const canPostInChat = Boolean(chat) && Boolean(threadId) && getCanPostInChat(chat, threadId);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n    };\n  },\n)(GifSearch));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChannelStatistics, ApiGroupStatistics, ApiMessageStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\nimport { formatFullDate } from '../../../util/dateFormat';\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\n\nimport './StatisticsOverview.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'views', title: 'Stats.Message.Views', isPlain: true },\n    {\n      name: 'forwards', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n  [\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n];\n\nexport type OwnProps = {\n  isGroup?: boolean;\n  isMessage?: boolean;\n  statistics: ApiChannelStatistics | ApiGroupStatistics | ApiMessageStatistics;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({ isGroup, isMessage, statistics }) => {\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName('StatisticsOverview__value', isChangeNegative && 'negative')}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n\n  return (\n    <div className=\"StatisticsOverview\">\n      <div className=\"StatisticsOverview__header\">\n        <div className=\"StatisticsOverview__title\">{lang('StatisticOverview')}</div>\n\n        {period && (\n          <div className=\"StatisticsOverview__caption\">\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className=\"StatisticsOverview__table\">\n        {(isMessage ? MESSAGE_OVERVIEW : isGroup ? GROUP_OVERVIEW : CHANNEL_OVERVIEW).map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className=\"StatisticsOverview__table-cell\">\n                    <b className=\"StatisticsOverview__table-value\">\n                      {cell.isApproximate ? `≈${formatInteger(field)}` : formatInteger(field)}\n                    </b>\n                    <h3 className=\"StatisticsOverview__table-heading\">{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className=\"StatisticsOverview__table-cell\">\n                    <b className=\"StatisticsOverview__table-value\">{field.percentage}%</b>\n                    <h3 className=\"StatisticsOverview__table-heading\">{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className=\"StatisticsOverview__table-cell\">\n                  <b className=\"StatisticsOverview__table-value\">\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className=\"StatisticsOverview__table-heading\">{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nexport default memo(StatisticsOverview);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\n\nimport type { LangFn } from '../../../hooks/useLang';\nimport useLang from '../../../hooks/useLang';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsRecentMessage as StatisticsRecentMessageType } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dateFormat';\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageRoundVideo,\n} from '../../../global/helpers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport useMedia from '../../../hooks/useMedia';\n\nimport './StatisticsRecentMessage.scss';\n\nexport type OwnProps = {\n  message: ApiMessage & StatisticsRecentMessageType;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ message }) => {\n  const lang = useLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        'StatisticsRecentMessage',\n        Boolean(mediaBlobUrl || mediaThumbnail) && 'StatisticsRecentMessage--with-image',\n      )}\n      onClick={handleClick}\n    >\n      <div className=\"StatisticsRecentMessage__title\">\n        <div className=\"StatisticsRecentMessage__summary\">\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className=\"StatisticsRecentMessage__meta\">\n          {lang('ChannelStats.ViewsCount', message.views, 'i')}\n        </div>\n      </div>\n\n      <div className=\"StatisticsRecentMessage__info\">\n        <div className=\"StatisticsRecentMessage__date\">\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <div className=\"StatisticsRecentMessage__meta\">\n          {message.forwards ? lang('ChannelStats.SharesCount', message.forwards) : 'No shares'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: LangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span className=\"media-preview\">\n      <img src={blobUrl} alt=\"\" className={buildClassName('media-preview__image', isRoundVideo && 'round')} />\n      {getMessageVideo(message) && <i className=\"icon-play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useState, useEffect, useRef, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { callApi } from '../../../api/gramjs';\nimport type {\n  ApiMessage,\n  ApiChannelStatistics,\n  ApiGroupStatistics,\n  StatisticsRecentMessage as StatisticsRecentMessageType,\n  StatisticsGraph,\n} from '../../../api/types';\nimport { selectChat, selectStatistics } from '../../../global/selectors';\n\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\n\nimport './Statistics.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  statistics,\n  dcId,\n  isGroup,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove('hidden');\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName('Statistics custom-scroll', isReady && 'ready')}>\n      <StatisticsOverview statistics={statistics} isGroup={isGroup} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className=\"Statistics__graph hidden\" />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics).recentTopMessages?.length) && (\n        <div className=\"Statistics__messages\">\n          <h2 className=\"Statistics__messages-title\">{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentTopMessages.map((message) => (\n            <StatisticsRecentMessage message={message as ApiMessage & StatisticsRecentMessageType} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = chat?.fullInfo?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n\n    return {\n      statistics, dcId, isGroup,\n    };\n  },\n)(Statistics));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\nimport { getActions } from '../../../global';\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport Avatar from '../../common/Avatar';\n\nimport './StatisticsPublicForward.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsPublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useLang();\n  const { openChatByUsername } = getActions();\n\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: data.chat.username, messageId: data.messageId });\n  }, [data, openChatByUsername]);\n\n  return (\n    <div className=\"StatisticsPublicForward\" onClick={handleClick}>\n      <Avatar size=\"medium\" chat={data.chat} />\n\n      <div className=\"StatisticsPublicForward__info\">\n        <div className=\"StatisticsPublicForward__title\">\n          {data.title}\n        </div>\n\n        <div className=\"StatisticsPublicForward__views\">\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsPublicForward);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useState, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { callApi } from '../../../api/gramjs';\nimport type { ApiMessageStatistics, ApiMessagePublicForward, StatisticsGraph } from '../../../api/types';\nimport { selectChat } from '../../../global/selectors';\n\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsPublicForward from './StatisticsPublicForward';\n\nimport './Statistics.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiMessageStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiMessageStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName('Statistics custom-scroll', isReady && 'ready')}>\n      <StatisticsOverview statistics={statistics} isMessage />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName('Statistics__graph', !loadedCharts.current.includes(graph) && 'hidden')} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className=\"Statistics__public-forwards\">\n          <h2 className=\"Statistics__public-forwards-title\">{lang('Stats.Message.PublicShares')}</h2>\n\n          {statistics.publicForwardsData!.map((item: ApiMessagePublicForward) => (\n            <StatisticsPublicForward data={item} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const dcId = chat?.fullInfo?.statisticsDcId;\n    const statistics = global.statistics.currentMessage;\n    const messageId = global.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, useState, memo, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\nimport usePrevious from '../../hooks/usePrevious';\nimport useLang from '../../hooks/useLang';\n\nimport ShowMoreButton from '../ui/ShowMoreButton';\nimport Loading from '../ui/Loading';\nimport ListItem from '../ui/ListItem';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePrevious<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              <PrivateChatInfo\n                avatarSize=\"tiny\"\n                userId={id}\n                forceShowSelf\n                noStatusOrTyping\n              />\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">{text}</span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = global.pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiMessage, ApiChat } from '../../api/types';\nimport { selectChat, selectChatMessage } from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport { getMessagePoll } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport PollAnswerResults from './PollAnswerResults';\nimport Loading from '../ui/Loading';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n  lastSyncTime?: number;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  onClose,\n  isActive,\n  chat,\n  message,\n  lastSyncTime,\n}) => {\n  const lang = useLang();\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = getMessagePoll(message)!;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">{renderText(summary.question, ['emoji', 'br'])}</h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {lastSyncTime && summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${message.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n        {!lastSyncTime && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n      lastSyncTime,\n    } = global;\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      chat,\n      message,\n      lastSyncTime,\n    };\n  },\n)(PollResults));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport {\n  selectChat, selectNotifyExceptions, selectNotifySettings, selectUser,\n} from '../../../global/selectors';\nimport { selectIsChatMuted } from '../../../global/helpers';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Spinner from '../../ui/Spinner';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            status=\"original name\"\n            withFullInfo\n          />\n          <InputText\n            id=\"user-first-name\"\n            label={lang('UserInfo.FirstNamePlaceholder')}\n            onChange={handleFirstNameChange}\n            value={firstName}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            id=\"user-last-name\"\n            label={lang('UserInfo.LastNamePlaceholder')}\n            onChange={handleLastNameChange}\n            value={lastName}\n          />\n          <div className=\"ListItem no-selection narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId)!;\n    const { progress } = global.management;\n    const isMuted = selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n\n    return {\n      user, progress, isMuted,\n    };\n  },\n)(ManageUser));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { ManagementScreens, ManagementProgress } from '../../../types';\nimport type { ApiChat, ApiChatBannedRights, ApiExportedInvite } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatBasicGroup } from '../../../global/helpers';\nimport useMedia from '../../../hooks/useMedia';\nimport useLang from '../../../hooks/useLang';\nimport useFlag from '../../../hooks/useFlag';\nimport { selectChat } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\nimport Spinner from '../../ui/Spinner';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  lastSyncTime?: number;\n  availableReactionsCount?: number;\n  isChannelsPremiumLimitReached: boolean;\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = 8;\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  onScreenSelect,\n  onClose,\n  isActive,\n  exportedInvites,\n  lastSyncTime,\n  availableReactionsCount,\n  isChannelsPremiumLimitReached,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chat.fullInfo ? (chat.fullInfo.about || '') : '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle || '');\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = chat.username || hasLinkedChannel;\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (lastSyncTime && canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, loadExportedChatInvites, lastSyncTime, canInvite, loadChatJoinRequests]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickPermissions = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateGroup = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleClickMembers = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  }, [onScreenSelect]);\n\n  const handleTogglePreHistory = useCallback(() => {\n    if (!chat.fullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chat.fullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  }, [chat, togglePreHistoryHidden]);\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chat.fullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chat.fullInfo?.isPreHistoryHidden]);\n\n  const enabledReactionsCount = chat.fullInfo?.enabledReactions?.length || 0;\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = [\n      'sendMessages',\n      'sendMedia',\n      'embedLinks',\n      'sendPolls',\n      'changeInfo',\n      'inviteUsers',\n      'pinMessages',\n    ].filter(\n      (key) => !chat.defaultBannedRights![key as keyof ApiChatBannedRights],\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat]);\n\n  const adminsCount = (chat.fullInfo?.adminMembers?.length) || 0;\n\n  const handleDeleteGroup = useCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [\n    isBasicGroup, chat.isCreator, chat.id,\n    closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, deleteChat, openChat,\n  ]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"group-title\"\n            label={lang('GroupName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === GROUP_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"group-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            maxLength={GROUP_MAX_DESCRIPTION}\n            maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n            onChange={handleAboutChange}\n            value={about}\n            disabled={!canChangeInfo}\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{chat.username ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT}\n            </span>\n          </ListItem>\n\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledReactionsCount}/{availableReactionsCount}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && chat.fullInfo && (\n            <div className=\"ListItem narrow no-selection\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chat.fullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { progress } = global.management;\n    const hasLinkedChannel = Boolean(chat.fullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = global.management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo: isBasicGroup ? chat.isCreator : getHasAdminRight(chat, 'changeInfo'),\n      canBanUsers: isBasicGroup ? chat.isCreator : getHasAdminRight(chat, 'banUsers'),\n      canInvite: isBasicGroup ? chat.isCreator : getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      lastSyncTime: global.lastSyncTime,\n      availableReactionsCount: global.availableReactions?.filter((l) => !l.isInactive).length,\n      isChannelsPremiumLimitReached: global.limitReachedModal?.limit === 'channels',\n    };\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { ManagementScreens } from '../../../types';\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\n\nimport useLang from '../../../hooks/useLang';\nimport { selectChat } from '../../../global/selectors';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Spinner from '../../ui/Spinner';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n};\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\n\nfunction getLangKeyForBannedRightKey(key: string) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  currentUserId,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatDefaultBannedRights } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  useEffect(() => {\n    setPermissions((chat?.defaultBannedRights) || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [chat]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as Exclude<keyof ApiChatBannedRights, 'untilDate'>]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(p[name]),\n      }),\n    }));\n    setHavePermissionChanged(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  }, [chat, permissions, updateChatDefaultBannedRights]);\n\n  const removedUsersCount = useMemo(() => {\n    if (!chat || !chat.fullInfo || !chat.fullInfo.kickedMembers) {\n      return 0;\n    }\n\n    return chat.fullInfo.kickedMembers.length;\n  }, [chat]);\n\n  const exceptionMembers = useMemo(() => {\n    if (!chat || !chat.fullInfo || !chat.fullInfo.members) {\n      return [];\n    }\n\n    return chat.fullInfo.members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [chat]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, key) => {\n      if (\n        !bannedRights[key as keyof ApiChatBannedRights]\n        || (defaultBannedRights?.[key as keyof ApiChatBannedRights])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = lang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, lang]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"sendMessages\"\n              checked={!permissions.sendMessages}\n              label={lang('UserRestrictionsSend')}\n              blocking\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"sendMedia\"\n              checked={!permissions.sendMedia}\n              label={lang('UserRestrictionsSendMedia')}\n              blocking\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"sendStickers\"\n              checked={!permissions.sendStickers && !permissions.sendGifs}\n              label={lang('UserRestrictionsSendStickers')}\n              blocking\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"sendPolls\"\n              checked={!permissions.sendPolls}\n              label={lang('UserRestrictionsSendPolls')}\n              blocking\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"embedLinks\"\n              checked={!permissions.embedLinks}\n              label={lang('UserRestrictionsEmbedLinks')}\n              blocking\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={!permissions.inviteUsers}\n              label={lang('UserRestrictionsInviteUsers')}\n              blocking\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"pinMessages\"\n              checked={!permissions.pinMessages}\n              label={lang('UserRestrictionsPinMessages')}\n              blocking\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={!permissions.changeInfo}\n              label={lang('UserRestrictionsChangeInfo')}\n              blocking\n              onChange={handlePermissionChange}\n            />\n          </div>\n        </div>\n\n        <div className=\"section\">\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return { chat, currentUserId: global.currentUserId };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useMemo, useState, memo, useRef, useCallback,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport useLang from '../../../hooks/useLang';\n\nimport ChatOrUserPicker from '../../common/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useLang();\n  const [filter, setFilter] = useState('');\n  // eslint-disable-next-line no-null/no-null\n  const filterRef = useRef<HTMLInputElement>(null);\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chat.fullInfo?.members || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n\n    return filterUsersByName(availableMemberIds, usersById, filter);\n  }, [chat.fullInfo?.members, currentUserId, filter]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      filterRef={filterRef}\n      filterPlaceholder={lang('ChannelBlockUser')}\n      filter={filter}\n      onFilterChange={setFilter}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n\n    return { currentUserId };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { selectChat } from '../../../global/selectors';\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useFlag from '../../../hooks/useFlag';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const removedMembers = useMemo(() => {\n    if (!chat || !chat.fullInfo || !chat.fullInfo.kickedMembers) {\n      return [];\n    }\n\n    return chat.fullInfo.kickedMembers;\n  }, [chat]);\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember) => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <i className=\"icon-add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { ManagementScreens, ManagementProgress } from '../../../types';\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getChatAvatarHash, getHasAdminRight } from '../../../global/helpers';\nimport useMedia from '../../../hooks/useMedia';\nimport useLang from '../../../hooks/useLang';\nimport { selectChat } from '../../../global/selectors';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\nimport Spinner from '../../ui/Spinner';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  progress?: ManagementProgress;\n  isSignaturesShown: boolean;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  lastSyncTime?: number;\n  availableReactionsCount?: number;\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  progress,\n  isSignaturesShown,\n  canChangeInfo,\n  canInvite,\n  exportedInvites,\n  lastSyncTime,\n  availableReactionsCount,\n  onScreenSelect,\n  onClose,\n  isActive,\n}) => {\n  const {\n    updateChat,\n    toggleSignatures,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat ? (chat.title || '') : '';\n  const currentAbout = chat?.fullInfo ? (chat.fullInfo.about || '') : '';\n  const hasLinkedChat = chat?.fullInfo?.linkedChatId;\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (lastSyncTime) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, loadExportedChatInvites, lastSyncTime, loadChatJoinRequests]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = (chat?.fullInfo?.adminMembers?.length) || 0;\n  const removedUsersCount = (chat?.fullInfo?.kickedMembers?.length) || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleToggleSignatures = useCallback(() => {\n    toggleSignatures({ chatId, isEnabled: !isSignaturesShown });\n  }, [chatId, isSignaturesShown, toggleSignatures]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const enabledReactionsCount = chat.fullInfo?.enabledReactions?.length || 0;\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"channel-title\"\n            label={lang('EnterChannelName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"channel-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            onChange={handleAboutChange}\n            value={about}\n            maxLength={CHANNEL_MAX_DESCRIPTION}\n            maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n            disabled={!canChangeInfo}\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{chat.username ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledReactionsCount}/{availableReactionsCount}\n            </span>\n          </ListItem>\n          <div className=\"ListItem no-selection narrow\">\n            <Checkbox\n              checked={isSignaturesShown}\n              label={lang('ChannelSignMessages')}\n              onChange={handleToggleSignatures}\n            />\n          </div>\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{lang('Subscribers', chat.membersCount ?? 0, 'i')}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { progress } = global.management;\n    const isSignaturesShown = Boolean(chat?.isSignaturesShown);\n    const { invites } = global.management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      progress,\n      isSignaturesShown,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      lastSyncTime: global.lastSyncTime,\n      exportedInvites: invites,\n      availableReactionsCount: global.availableReactions?.filter((l) => !l.isInactive).length,\n    };\n  },\n)(ManageChannel));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { selectChat, selectManagement } from '../../../global/selectors';\nimport { isChatChannel } from '../../../global/helpers';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport SafeLink from '../../common/SafeLink';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Loading from '../../ui/Loading';\nimport Spinner from '../../ui/Spinner';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  isProtected,\n  maxPublicLinks,\n}) => {\n  const {\n    checkPublicLink,\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n  } = getActions();\n\n  const isPublic = Boolean(chat.username);\n  const privateLink = chat.fullInfo?.inviteLink;\n\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [username, setUsername] = useState();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n\n  const canUpdate = Boolean(\n    (privacyType === 'public' && username && isUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (privacyType && !privateLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateLink, updatePrivateLink]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId).filter((l) => l.isCreator && l.username);\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    updatePublicLink({ username: privacyType === 'public' ? username : '' });\n  }, [privacyType, updatePublicLink, username]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateLink ? (\n              <>\n                <SafeLink url={privateLink} className=\"group-link\" text={privateLink} />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <UsernameInput\n              asLink\n              currentUsername={chat.username}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkUsername={checkPublicLink}\n              onChange={setUsername}\n            />\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: global.management.progress,\n      isUsernameAvailable,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n    };\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport { selectChat } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport NothingFound from '../../common/NothingFound';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport useFlag from '../../../hooks/useFlag';\nimport renderText from '../../common/helpers/renderText';\nimport Avatar from '../../common/Avatar';\nimport { isChatChannel } from '../../../global/helpers';\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(linkedChat?.isJoinToSend);\n  const [isJoinRequest, setIsJoinRequest] = useState(linkedChat?.isJoinRequest);\n  const lang = useLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          chat={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    const linkedGroup = chatsByIds[linkedGroupId];\n\n    if (!linkedGroup) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          chat={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    const linkedGroup = chatsByIds[linkedGroupId];\n\n    if (!linkedGroup) {\n      return undefined;\n    }\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            className=\"not-implemented\"\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n          isButtonsInOneRow\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <Checkbox\n              checked={isJoinToSend}\n              onCheck={handleJoinToSendCheck}\n              label={lang('ChannelSettingsJoinToSend')}\n            />\n            {isJoinToSend && (\n              <Checkbox\n                checked={isJoinRequest}\n                onCheck={handleJoinRequestCheck}\n                label={lang('ChannelSettingsJoinRequest')}\n              />\n            )}\n            <p className=\"text-muted\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = chat?.fullInfo?.linkedChatId\n      ? selectChat(global, chat.fullInfo.linkedChatId)\n      : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Spinner from '../../ui/Spinner';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isFormFullyDisabled?: boolean;\n};\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    if (!chat || !chat.fullInfo || !chat.fullInfo.members) {\n      return undefined;\n    }\n\n    return chat.fullInfo.members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [chat, selectedChatMemberId]);\n\n  useEffect(() => {\n    if (chat?.fullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  useEffect(() => {\n    setPermissions((selectedChatMember?.bannedRights) || (chat?.defaultBannedRights) || {});\n    setHavePermissionChanged(false);\n    setIsLoading(false);\n  }, [chat, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as Exclude<keyof ApiChatBannedRights, 'untilDate'>]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(p[name]),\n      }),\n    }));\n    setHavePermissionChanged(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, permissions, updateChatMemberBannedRights]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('UserRestrictionsCanDo')}</h3>\n\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"sendMessages\"\n              checked={!permissions.sendMessages}\n              label={lang('UserRestrictionsSend')}\n              blocking\n              disabled={getControlIsDisabled('sendMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"sendMedia\"\n              checked={!permissions.sendMedia}\n              label={lang('UserRestrictionsSendMedia')}\n              blocking\n              disabled={getControlIsDisabled('sendMedia')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"sendStickers\"\n              checked={!permissions.sendStickers && !permissions.sendGifs}\n              label={lang('UserRestrictionsSendStickers')}\n              blocking\n              disabled={getControlIsDisabled('sendStickers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"sendPolls\"\n              checked={!permissions.sendPolls}\n              label={lang('UserRestrictionsSendPolls')}\n              blocking\n              disabled={getControlIsDisabled('sendPolls')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"embedLinks\"\n              checked={!permissions.embedLinks}\n              label={lang('UserRestrictionsEmbedLinks')}\n              blocking\n              disabled={getControlIsDisabled('embedLinks')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={!permissions.inviteUsers}\n              label={lang('UserRestrictionsInviteUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"pinMessages\"\n              checked={!permissions.pinMessages}\n              label={lang('UserRestrictionsPinMessages')}\n              blocking\n              disabled={getControlIsDisabled('pinMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={!permissions.changeInfo}\n              label={lang('UserRestrictionsChangeInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div className=\"section\">\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {lang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text=\"Are you sure you want to ban and remove this user from the group?\"\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return { chat, isFormFullyDisabled };\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../../global';\n\nimport { ManagementScreens } from '../../../types';\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  currentUserId?: string;\n  isChannel: boolean;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  chat,\n  isChannel,\n  currentUserId,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRecentActionsClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRecentActions);\n  }, [onScreenSelect]);\n\n  const adminMembers = useMemo(() => {\n    if (!chat.fullInfo || !chat.fullInfo.adminMembers) {\n      return [];\n    }\n\n    return chat.fullInfo.adminMembers.sort((a, b) => {\n      if (a.isOwner) {\n        return -1;\n      } else if (b.isOwner) {\n        return 1;\n      }\n\n      return 0;\n    });\n  }, [chat]);\n\n  const handleAdminMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const handleAddAdminClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  }, [onScreenSelect]);\n\n  const getMemberStatus = useCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [lang]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            onClick={handleRecentActionsClick}\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\" dir=\"auto\">\n            {isChannel\n              ? 'You can add administrators to help you manage your channel.'\n              : 'You can add administrators to help you manage your group.'}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <i className=\"icon-add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: isChatChannel(chat),\n    };\n  },\n)(ManageChatAdministrators));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport useLang from '../../../hooks/useLang';\nimport { selectChat } from '../../../global/selectors';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n};\n\nconst ManageGroupRecentActions: FC<OwnProps & StateProps> = ({ chat, onClose, isActive }) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const adminMembers = useMemo(() => {\n    if (!chat || !chat.fullInfo || !chat.fullInfo.adminMembers) {\n      return [];\n    }\n\n    return chat.fullInfo.adminMembers.sort((a, b) => {\n      if (a.isOwner) {\n        return -1;\n      } else if (b.isOwner) {\n        return 1;\n      }\n\n      return 0;\n    });\n  }, [chat]);\n\n  const getMemberStatus = useCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    return lang('ChannelAdmin');\n  }, [lang]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section not-implemented\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\" dir=\"auto\">Actions</h3>\n\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={!false}\n              label={lang('EventLogAllEvents')}\n              onChange={undefined}\n            />\n          </div>\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={!false}\n              label={lang('EventLogFilterNewAdmins')}\n              onChange={undefined}\n            />\n          </div>\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={!false}\n              label={lang('EventLogFilterNewMembers')}\n              onChange={undefined}\n            />\n          </div>\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={!false}\n              label={lang('EventLogFilterChannelInfo')}\n              onChange={undefined}\n            />\n          </div>\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={!false}\n              label={lang('EventLogFilterDeletedMessages')}\n              onChange={undefined}\n            />\n          </div>\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={!false}\n              label={lang('EventLogFilterEditedMessages')}\n              onChange={undefined}\n            />\n          </div>\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={!false}\n              label={lang('EventLogFilterLeavingMembers')}\n              onChange={undefined}\n            />\n          </div>\n        </div>\n\n        <div className=\"section not-implemented\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('Channel.Management.Title')}</h3>\n\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={!false}\n              label={lang('EventLogAllAdmins')}\n              onChange={undefined}\n            />\n          </div>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable picker-list-item\"\n              onClick={undefined}\n              ripple\n            >\n              <Checkbox label=\"\" checked={!false} />\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return { chat };\n  },\n)(ManageGroupRecentActions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatAdminRights, ApiUser } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat } from '../../../global/selectors';\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport useLang from '../../../hooks/useLang';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Spinner from '../../ui/Spinner';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  onScreenSelect,\n  chat,\n  usersById,\n  currentUserId,\n  isChannel,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = chat.fullInfo?.adminMembers?.find(({ userId }) => userId === selectedUserId);\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [chat.fullInfo?.adminMembers, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (chat?.fullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem no-selection\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem no-selection\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem no-selection\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem no-selection\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem no-selection\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n    };\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { unique } from '../../../util/iteratees';\nimport { selectChat } from '../../../global/selectors';\nimport {\n  sortUserIds, isChatChannel, filterUsersByName, sortChatIds, isUserBot,\n} from '../../../global/helpers';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport ListItem from '../../ui/ListItem';\nimport InputText from '../../ui/InputText';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  adminMembers?: ApiChatMember[];\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  serverTimeOffset: number;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  noAdmins,\n  members,\n  adminMembers,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  serverTimeOffset,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const { openChat, setUserSearchQuery, closeManagement } = getActions();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const adminIds = useMemo(() => {\n    return noAdmins ? adminMembers?.map(({ userId }) => userId) || [] : [];\n  }, [adminMembers, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n      undefined,\n      serverTimeOffset,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, serverTimeOffset, noAdmins, adminIds]);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      chatsById,\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, false);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  }, [closeManagement, noAdmins, onChatMemberSelect, onScreenSelect, openChat]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  }, [setUserSearchQuery]);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const members = chat?.fullInfo?.members;\n    const adminMembers = chat?.fullInfo?.adminMembers;\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = global.userSearch;\n\n    return {\n      members,\n      adminMembers,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      serverTimeOffset: global.serverTimeOffset,\n    };\n  },\n)(ManageGroupMembers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat } from '../../../global/selectors';\nimport { sortUserIds, isChatChannel } from '../../../global/helpers';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport NothingFound from '../../common/NothingFound';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n  serverTimeOffset: number;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  serverTimeOffset,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n      undefined,\n      serverTimeOffset,\n    );\n  }, [members, serverTimeOffset, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = chat?.fullInfo?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n      serverTimeOffset: global.serverTimeOffset,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES } from '../../../config';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dateFormat';\nimport useInterval from '../../../hooks/useInterval';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport { selectChat } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport { getServerTime } from '../../../util/serverTime';\nimport useFlag from '../../../hooks/useFlag';\nimport { isChatChannel } from '../../../global/helpers';\n\nimport ListItem from '../../ui/ListItem';\nimport NothingFound from '../../common/NothingFound';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport AnimatedIcon from '../../common/AnimatedIcon';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n  serverTimeOffset: number;\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  serverTimeOffset,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime(serverTimeOffset) < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites, serverTimeOffset]);\n  const forceUpdate = useForceUpdate();\n  useInterval(() => {\n    forceUpdate();\n  }, hasDetailedCountdown ? 1000 : undefined);\n\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chat?.username ? `t.me/${chat.username}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.username ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.username, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleCopyPrimaryClicked = useCallback(() => {\n    copyLink(primaryInviteLink!);\n  }, [copyLink, primaryInviteLink]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = lang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = lang('PeopleJoined', usage);\n    } else {\n      text = lang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${lang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${lang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${lang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = (expireDate - getServerTime(serverTimeOffset)) * 1000;\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += lang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += lang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${lang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime(serverTimeOffset)) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions = [];\n    actions.push({\n      title: lang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: lang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: lang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: lang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!IS_SINGLE_COLUMN_LAYOUT}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"Actions\"\n      >\n        <i className=\"icon-more\" />\n      </Button>\n    );\n  }, []);\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"text-muted\">{isChannel ? lang('PrimaryLinkHelpChannel') : lang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <div className=\"section\">\n            <p className=\"text-muted\">\n              {chat?.username ? lang('PublicLink') : lang('lng_create_permanent_link_title')}\n            </p>\n            <div className=\"primary-link\">\n              <input\n                className=\"form-control primary-link-input\"\n                value={primaryInviteLink}\n                readOnly\n                onClick={handleCopyPrimaryClicked}\n              />\n              <DropdownMenu\n                className=\"primary-link-more-menu\"\n                trigger={PrimaryLinkMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"copy\" onClick={handleCopyPrimaryClicked}>{lang('Copy')}</MenuItem>\n                {!chat?.username && (\n                  <MenuItem icon=\"delete\" onClick={handlePrimaryRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n                )}\n              </DropdownMenu>\n            </div>\n            <Button onClick={handleCopyPrimaryClicked}>{lang('CopyLink')}</Button>\n          </div>\n        )}\n        <div className=\"section\" teactFastList>\n          <Button isText key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {lang('CreateNewLink')}\n          </Button>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<i className={`icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"text-muted hint\" key=\"links-hint\">{lang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"text-muted\" key=\"title\">{lang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{lang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<i className={`icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={lang('DeleteAllRevokedLinks')}\n        text={lang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={lang('RevokeLink')}\n        text={lang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={lang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={lang('DeleteLink')}\n        text={lang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = global.management.byChatId[chatId];\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      serverTimeOffset: global.serverTimeOffset,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport { formatFullDate, formatTime } from '../../../util/dateFormat';\nimport useFlag from '../../../hooks/useFlag';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport useOnChange from '../../../hooks/useOnChange';\nimport CalendarModal from '../../common/CalendarModal';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n  serverTimeOffset: number;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  serverTimeOffset,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useOnChange(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime(serverTimeOffset) * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime(serverTimeOffset) + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite, serverTimeOffset]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : selectedUsageOption;\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime(serverTimeOffset) + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime(serverTimeOffset) + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n    serverTimeOffset,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"text-muted hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-header\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"text-muted hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-header\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"text-muted hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <i className=\"icon-check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = global.management.byChatId[chatId];\n\n    return {\n      editingInvite,\n      serverTimeOffset: global.serverTimeOffset,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiChat } from '../../../api/types';\n\nimport { selectChat } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: string[];\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState(enabledReactions || []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions || []);\n  }, [enabledReactions]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter((l) => !l.isInactive),\n    [availableReactions],\n  );\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    const newEnabledReactions = name === 'all' ? (checked ? availableActiveReactions.map((l) => l.reaction) : [])\n      : (!checked\n        ? localEnabledReactions.filter((l) => l !== name)\n        : [...localEnabledReactions, name]);\n\n    setLocalEnabledReactions(newEnabledReactions);\n    setIsTouched(true);\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"all\"\n              checked={!localEnabledReactions || localEnabledReactions.length > 0}\n              label={lang('EnableReactions')}\n              onChange={handleReactionChange}\n            />\n          </div>\n          {availableActiveReactions?.map(({ reaction, title }) => (\n            <div className=\"ListItem no-selection\">\n              <Checkbox\n                name={reaction}\n                checked={!localEnabledReactions || localEnabledReactions?.includes(reaction)}\n                disabled={localEnabledReactions?.length === 0}\n                label={(\n                  <div className=\"Reaction\">\n                    <ReactionStaticEmoji reaction={reaction} />\n                    {title}\n                  </div>\n                )}\n                onChange={handleReactionChange}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n\n    return {\n      enabledReactions: chat.fullInfo?.enabledReactions,\n      availableReactions: global.availableReactions,\n      chat,\n    };\n  },\n)(ManageReactions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getServerTime } from '../../../util/serverTime';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dateFormat';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport Button from '../../ui/Button';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n  serverTimeOffset: number;\n};\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  serverTimeOffset,\n  onClose,\n}) => {\n  const {\n    showNotification,\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime(serverTimeOffset)) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime(serverTimeOffset)) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  const handleCopyClicked = useCallback(() => {\n    copyTextToClipboard(invite!.link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [invite, lang, showNotification]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p>{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"text-muted\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: importer.userId })}\n            >\n              <PrivateChatInfo\n                userId={importer.userId}\n                status={formatMediaDateTime(lang, importer.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p>{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"text-muted\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"custom-scroll\">\n        {!invite && (\n          <p className=\"text-muted\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <h3 className=\"link-title\">{invite.title || invite.link}</h3>\n              <input\n                className=\"form-control\"\n                value={invite.link}\n                readOnly\n                onClick={handleCopyClicked}\n              />\n              <Button className=\"copy-link\" onClick={handleCopyClicked}>{lang('CopyLink')}</Button>\n              {expireDate && (\n                <p className=\"text-muted\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p>{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = global.management.byChatId[chatId];\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n      serverTimeOffset: global.serverTimeOffset,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport useLang from '../../../hooks/useLang';\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  serverTimeOffset: number;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  about,\n  date,\n  isChannel,\n  user,\n  serverTimeOffset,\n  chatId,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime(serverTimeOffset)) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            user={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n      serverTimeOffset: global.serverTimeOffset,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { selectChat } from '../../../global/selectors';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport useLang from '../../../hooks/useLang';\nimport useFlag from '../../../hooks/useFlag';\n\nimport JoinRequest from './JoinRequest';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport AnimatedIcon from '../../common/AnimatedIcon';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  serverTimeOffset: number;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"text-muted\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      serverTimeOffset: global.serverTimeOffset,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageUser from './ManageUser';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageChannel from './ManageChannel';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageGroupRecentActions from './ManageGroupRecentActions';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvites from './ManageInvites';\nimport ManageInvite from './ManageInvite';\nimport ManageReactions from './ManageReactions';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageJoinRequests from './ManageJoinRequests';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupRecentActions:\n      return (\n        <ManageGroupRecentActions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4[0-9]{12}(?:[0-9]{1,3})?$/;\nconst MASTERCARD1 = /^5[1-5][0-9]{11,14}$/;\nconst MASTERCARD2 = /^2[2-7][0-9]{11,14}$/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { StateReducer, Dispatch } from '../useReducer';\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Record<string, string>;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState'\n);\nexport type FormEditDispatch = Dispatch<FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","import type { RefObject } from 'react';\n\nimport { IS_TOUCH_ENV } from '../util/environment';\nimport { fastRaf } from '../util/schedulers';\nimport { useEffect } from '../lib/teact/teact';\n\nconst DEFAULT_DURATION = 400;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      fastRaf(() => {\n        if (ref.current) {\n          ref.current.focus();\n        }\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  id?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  ref?: RefObject<HTMLSelectElement>;\n  hasArrow?: boolean;\n  placeholder?: string;\n  tabIndex?: number;\n  onChange?: (e: ChangeEvent<HTMLSelectElement>) => void;\n  children: React.ReactNode;\n};\n\nconst Select: FC<OwnProps> = (props) => {\n  const {\n    id,\n    value,\n    label,\n    hasArrow,\n    error,\n    ref,\n    placeholder,\n    tabIndex,\n    onChange,\n    children,\n  } = props;\n  const labelText = error || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error && 'error',\n    labelText && 'with-label',\n    hasArrow && 'with-arrow',\n    'input-group',\n  );\n\n  return (\n    <div className={fullClassName}>\n      <select\n        className=\"form-control\"\n        id={id}\n        value={value || ''}\n        onChange={onChange}\n        placeholder={placeholder || label}\n        tabIndex={tabIndex}\n        ref={ref}\n      >\n        {children}\n      </select>\n      {labelText && id && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Select);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useRef, useCallback, useEffect, memo,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\n\nimport type { FormState, FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\n\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport Checkbox from '../ui/Checkbox';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const lang = useLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{lang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={lang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1}\n            />\n            <InputText\n              label={lang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2}\n            />\n            <InputText\n              label={lang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city}\n            />\n            <InputText\n              label={lang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state}\n            />\n            <Select\n              label={lang('PaymentShippingCountry')}\n              placeholder={lang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={lang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{lang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={lang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={lang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={lang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={lang('PaymentShippingSave')}\n          subLabel={lang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, memo, useMemo, useEffect,\n} from '../../lib/teact/teact';\n\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\nimport type { FormState, FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport useLang from '../../hooks/useLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!shippingOptions || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(amount, currency, lang.code),\n    value,\n  }))), [shippingOptions, currency, lang.code]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{lang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"src-components-payment-Checkout-module__root\",\"description\":\"src-components-payment-Checkout-module__description\",\"checkout-picture\":\"src-components-payment-Checkout-module__checkout-picture\",\"checkoutPicture\":\"src-components-payment-Checkout-module__checkout-picture\",\"text\":\"src-components-payment-Checkout-module__text\",\"checkout-title\":\"src-components-payment-Checkout-module__checkout-title\",\"checkoutTitle\":\"src-components-payment-Checkout-module__checkout-title\",\"checkout-description\":\"src-components-payment-Checkout-module__checkout-description\",\"checkoutDescription\":\"src-components-payment-Checkout-module__checkout-description\",\"price-info\":\"src-components-payment-Checkout-module__price-info\",\"priceInfo\":\"src-components-payment-Checkout-module__price-info\",\"price-info-item\":\"src-components-payment-Checkout-module__price-info-item\",\"priceInfoItem\":\"src-components-payment-Checkout-module__price-info-item\",\"price-info-item-main\":\"src-components-payment-Checkout-module__price-info-item-main\",\"priceInfoItemMain\":\"src-components-payment-Checkout-module__price-info-item-main\",\"price-info-item-title\":\"src-components-payment-Checkout-module__price-info-item-title\",\"priceInfoItemTitle\":\"src-components-payment-Checkout-module__price-info-item-title\",\"invoice-info\":\"src-components-payment-Checkout-module__invoice-info\",\"invoiceInfo\":\"src-components-payment-Checkout-module__invoice-info\",\"checkout-info-item\":\"src-components-payment-Checkout-module__checkout-info-item\",\"checkoutInfoItem\":\"src-components-payment-Checkout-module__checkout-info-item\",\"checkout-info-item-icon\":\"src-components-payment-Checkout-module__checkout-info-item-icon\",\"checkoutInfoItemIcon\":\"src-components-payment-Checkout-module__checkout-info-item-icon\",\"provider\":\"src-components-payment-Checkout-module__provider\",\"stripe\":\"src-components-payment-Checkout-module__stripe\",\"smartglocal\":\"src-components-payment-Checkout-module__smartglocal\",\"checkout-info-item-info-title\":\"src-components-payment-Checkout-module__checkout-info-item-info-title\",\"checkoutInfoItemInfoTitle\":\"src-components-payment-Checkout-module__checkout-info-item-info-title\",\"checkout-info-item-info-data\":\"src-components-payment-Checkout-module__checkout-info-item-info-data\",\"checkoutInfoItemInfoData\":\"src-components-payment-Checkout-module__checkout-info-item-info-data\",\"tos-checkbox\":\"src-components-payment-Checkout-module__tos-checkbox\",\"tosCheckbox\":\"src-components-payment-Checkout-module__tos-checkbox\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { LangCode, Price } from '../../types';\nimport type { ApiChat, ApiWebDocument } from '../../api/types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\n\nimport Checkbox from '../ui/Checkbox';\nimport Skeleton from '../ui/Skeleton';\nimport SafeLink from '../common/SafeLink';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  chat?: ApiChat;\n  invoiceContent?: {\n    title?: string;\n    text?: string;\n    photo?: ApiWebDocument;\n    isRecurring?: boolean;\n    recurringTermsUrl?: string;\n  };\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n  };\n  prices?: Price[];\n  totalPrice?: number;\n  shippingPrices?: Price[];\n  currency: string;\n  isTosAccepted?: boolean;\n  onAcceptTos?: (isAccepted: boolean) => void;\n};\n\nconst Checkout: FC<OwnProps> = ({\n  chat,\n  invoiceContent,\n  prices,\n  shippingPrices,\n  checkoutInfo,\n  currency,\n  totalPrice,\n  isTosAccepted,\n  onAcceptTos,\n}) => {\n  const lang = useLang();\n\n  const {\n    photo, title, text, isRecurring, recurringTermsUrl,\n  } = invoiceContent || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = lang('PaymentCheckoutAcceptRecurrent', chat?.title);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text=\"\"\n          isRtl={isRtl}\n        >\n          {langStringSplit[1]}\n        </SafeLink>\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, lang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && <img className={styles.checkoutPicture} src={photoUrl} alt=\"\" />}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {text && <div className={styles.checkoutDescription}>{renderText(text, ['br', 'links', 'emoji'])}</div>}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {prices && prices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang.code, lang('Checkout.TotalAmount'), totalPrice, currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {paymentMethod && renderCheckoutItem('icon-card', paymentMethod, lang('PaymentCheckoutMethod'))}\n        {paymentProvider && renderCheckoutItem(\n          buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n          paymentProvider,\n          lang('PaymentCheckoutProvider'),\n        )}\n        {shippingAddress && renderCheckoutItem('icon-location', shippingAddress, lang('PaymentShippingAddress'))}\n        {name && renderCheckoutItem('icon-user', name, lang('PaymentCheckoutName'))}\n        {phone && renderCheckoutItem('icon-phone', phone, lang('PaymentCheckoutPhoneNumber'))}\n        {shippingMethod && renderCheckoutItem('icon-truck', shippingMethod, lang('PaymentCheckoutShippingMethod'))}\n        {isRecurring && renderTos(recurringTermsUrl!)}\n      </div>\n    </div>\n  );\n};\n\nfunction renderPaymentItem(\n  langCode: LangCode | undefined, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(value, currency, langCode)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem(icon: string, title: string, data: string) {\n  return (\n    <div className={styles.checkoutInfoItem}>\n      <i className={buildClassName(icon, styles.checkoutInfoItemIcon)}> </i>\n      <div className={styles.checkoutInfoItemInfo}>\n        <div className={styles.checkoutInfoItemInfoTitle}>\n          {title}\n        </div>\n        <p className={styles.checkoutInfoItemInfoData}>\n          {data}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(Checkout);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport InputText from '../ui/InputText';\nimport useLang from '../../hooks/useLang';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useState, useRef, useEffect,\n} from '../../lib/teact/teact';\n\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\nimport { detectCardType, CardType } from '../common/helpers/detectCardType';\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 23;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, memo, useRef, useEffect,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\n\nimport type { FormState, FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport useLang from '../../hooks/useLang';\n\nimport InputText from '../ui/InputText';\nimport Checkbox from '../ui/Checkbox';\nimport Select from '../ui/Select';\nimport ExpiryInput from './ExpiryInput';\nimport CardInput from './CardInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const lang = useLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber}\n        />\n        { needCardholderName && (\n          <InputText\n            label={lang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry}\n          />\n          <InputText\n            label={lang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv}\n            teactExperimentControlled\n          />\n        </section>\n        { needCountry || needZip ? (\n          <h5>{lang('PaymentBillingAddress')}</h5>\n        ) : undefined }\n        { needCountry && (\n          <Select\n            label={lang('PaymentShippingCountry')}\n            placeholder={lang('PaymentShippingCountry')}\n            onChange={handleCountryChange}\n            value={state.billingCountry}\n            hasArrow={Boolean(true)}\n            id=\"billing-country\"\n            error={formErrors.billingCountry}\n            tabIndex={0}\n            ref={selectCountryRef}\n          >\n            {\n              countryList.map(({ defaultName, name }) => (\n                <option\n                  value={defaultName}\n                  className=\"county-item\"\n                  selected={defaultName === state.billingCountry}\n                >\n                  {defaultName || name}\n                </option>\n              ))\n            }\n          </Select>\n        ) }\n        { needZip && (\n          <InputText\n            label={lang('PaymentShippingZipPlaceholder')}\n            onChange={handleBillingPostCodeChange}\n            value={state.billingZip}\n            inputMode=\"text\"\n            tabIndex={0}\n            maxLength={12}\n            error={formErrors.billingZip}\n          />\n        )}\n        { canSaveCredentials && (\n          <Checkbox\n            label={lang('PaymentCardSavePaymentInformation')}\n            checked={state.saveCredentials}\n            tabIndex={0}\n            onChange={handleChangeSaveCredentials}\n          />\n        ) }\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n};\n\nconst ConfirmPayment: FC<OwnProps> = ({ url }) => {\n  const lang = useLang();\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { ApiChat, ApiCountry } from '../../api/types';\nimport type { ShippingOption, Price } from '../../types';\nimport { PaymentStep } from '../../types';\n\nimport { selectChat } from '../../global/selectors';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport buildClassName from '../../util/buildClassName';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useLang from '../../hooks/useLang';\n\nimport ShippingInfo from './ShippingInfo';\nimport Shipping from './Shipping';\nimport Checkout from './Checkout';\nimport PaymentInfo from './PaymentInfo';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Transition from '../ui/Transition';\nimport Spinner from '../ui/Spinner';\nimport ConfirmPayment from './ConfirmPayment';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  nameRequested?: boolean;\n  shippingAddressRequested?: boolean;\n  phoneRequested?: boolean;\n  emailRequested?: boolean;\n  flexible?: boolean;\n  phoneToProvider?: boolean;\n  emailToProvider?: boolean;\n  currency?: string;\n  prices?: Price[];\n  isProviderError: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n};\n\ntype GlobalStateProps = Pick<GlobalState['payment'], (\n  'step' | 'shippingOptions' |\n  'savedInfo' | 'canSaveCredentials' | 'nativeProvider' | 'passwordMissing' | 'invoiceContent' |\n  'error'\n)>;\n\nconst PaymentModal: FC<OwnProps & StateProps & GlobalStateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  chat,\n  shippingOptions,\n  savedInfo,\n  canSaveCredentials,\n  nameRequested,\n  shippingAddressRequested,\n  phoneRequested,\n  emailRequested,\n  phoneToProvider,\n  emailToProvider,\n  currency,\n  passwordMissing,\n  isProviderError,\n  invoiceContent,\n  nativeProvider,\n  prices,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n}) => {\n  const {\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n  } = getActions();\n\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const lang = useLang();\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  useEffect(() => {\n    if (step || error) {\n      setIsLoading(false);\n    }\n  }, [step, error]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.message,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [savedInfo, paymentDispatch, countryList]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(prices, shippingOptions, paymentState.shipping);\n  }, [step, paymentState.shipping, prices, shippingOptions]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.description || 'Error'}</h4>\n        <p>{error.description || 'Error'}</p>\n        <Button\n          isText\n          onClick={clearPaymentError}\n        >\n          {lang('OK')}\n        </Button>\n      </Modal>\n    );\n  }\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(shippingAddressRequested)}\n            needEmail={Boolean(emailRequested || emailToProvider)}\n            needPhone={Boolean(phoneRequested || phoneToProvider)}\n            needName={Boolean(nameRequested)}\n            countryList={countryList}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={currency!}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!passwordMissing && canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList}\n          />\n        );\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            chat={chat}\n            prices={prices}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoiceContent={invoiceContent}\n            checkoutInfo={checkoutInfo}\n            currency={currency!}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  const handleButtonClick = useCallback(() => {\n    setIsLoading(true);\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        validateRequest();\n        break;\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.PaymentInfo);\n        break;\n      case PaymentStep.PaymentInfo:\n        sendCredentials();\n        break;\n      case PaymentStep.Checkout:\n        sendForm();\n        break;\n    }\n  }, [step, validateRequest, setStep, sendCredentials, sendForm]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n  }, [paymentDispatch]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        return lang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return lang('PaymentShippingMethod');\n      case PaymentStep.PaymentInfo:\n        return lang('PaymentCardInfo');\n      case PaymentStep.Checkout:\n        return lang('PaymentCheckout');\n      case PaymentStep.ConfirmPayment:\n        return lang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, lang]);\n\n  const buttonText = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return lang('Checkout.PayPrice', formatCurrency(totalPrice, currency!, lang.code));\n      default:\n        return lang('Next');\n    }\n  }, [step, lang, currency, totalPrice]);\n\n  const isSubmitDisabled = isLoading\n    || Boolean(step === PaymentStep.Checkout && invoiceContent?.isRecurring && !isTosAccepted);\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isOpen}\n        onClose={onClose}\n      >\n        <p>\n          Sorry, Telegram WebZ doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <Button\n          isText\n          onClick={onClose}\n        >\n          {lang('OK')}\n        </Button>\n      </Modal>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoiceContent?.isRecurring && 'recurring')}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={onClose}\n          ariaLabel=\"Close\"\n        >\n          <i className=\"icon-close\" />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition name=\"slide\" activeKey={step}>\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps & GlobalStateProps => {\n    const {\n      step,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      invoice,\n      invoiceContent,\n      nativeProvider,\n      nativeParams,\n      passwordMissing,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n    } = global.payment;\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId) : undefined;\n    const isProviderError = Boolean(invoice && (!nativeProvider || !SUPPORTED_PROVIDERS.has(nativeProvider)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const {\n      nameRequested,\n      phoneRequested,\n      emailRequested,\n      shippingAddressRequested,\n      flexible,\n      phoneToProvider,\n      emailToProvider,\n      currency,\n      prices,\n    } = (invoice || {});\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      nativeProvider,\n      passwordMissing,\n      nameRequested,\n      shippingAddressRequested,\n      phoneRequested,\n      emailRequested,\n      flexible,\n      phoneToProvider,\n      emailToProvider,\n      currency,\n      prices,\n      isProviderError,\n      invoiceContent,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl,\n      countryList: global.countryList.general,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(prices: Price[] = [], shippingOptions: ShippingOption[] | undefined, shippingOption: string) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = 0;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = `${cardTypeText} *${state.cardNumber.slice(-4)}`;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nfunction getCredentials(paymentState: FormState) {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { Price } from '../../types';\nimport type { ApiShippingAddress, ApiWebDocument } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkout from './Checkout';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './PaymentModal.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  prices?: Price[];\n  shippingPrices: any;\n  totalAmount?: number;\n  currency?: string;\n  info?: {\n    shippingAddress?: ApiShippingAddress;\n    phone?: string;\n    name?: string;\n  };\n  photo?: ApiWebDocument;\n  text?: string;\n  title?: string;\n  credentialsTitle?: string;\n  shippingMethod?: string;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  prices,\n  shippingPrices,\n  totalAmount,\n  currency,\n  info,\n  photo,\n  text,\n  title,\n  credentialsTitle,\n  shippingMethod,\n}) => {\n  const lang = useLang();\n  const checkoutInfo = useMemo(() => {\n    return getCheckoutInfo(credentialsTitle, info, shippingMethod);\n  }, [info, shippingMethod, credentialsTitle]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isOpen}\n      onClose={onClose}\n    >\n      <div>\n        <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className=\"close-button\"\n            color=\"translucent\"\n            round\n            size=\"smaller\"\n            onClick={onClose}\n            ariaLabel=\"Close\"\n          >\n            <i className=\"icon-close\" />\n          </Button>\n          <h3> {lang('PaymentReceipt')} </h3>\n        </div>\n        <div className=\"receipt-content custom-scroll\">\n          <Checkout\n            prices={prices}\n            shippingPrices={shippingPrices}\n            totalPrice={totalAmount}\n            invoiceContent={{\n              photo,\n              text,\n              title,\n            }}\n            checkoutInfo={checkoutInfo}\n            currency={currency!}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = global.payment;\n    const {\n      currency,\n      prices,\n      info,\n      totalAmount,\n      credentialsTitle,\n      shippingPrices,\n      shippingMethod,\n      photo,\n      text,\n      title,\n    } = (receipt || {});\n\n    return {\n      currency,\n      prices,\n      info,\n      totalAmount,\n      credentialsTitle,\n      shippingPrices,\n      shippingMethod,\n      photo,\n      text,\n      title,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?:\n  { phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../util/environment';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport useTimeout from '../../hooks/useTimeout';\nimport useFlag from '../../hooks/useFlag';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\nconst STICKER_SIZE = IS_SINGLE_COLUMN_LAYOUT ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : STICKER_SIZE}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : STICKER_SIZE}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useState, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport { DEBUG } from '../../config';\nimport { blobToFile, blobToDataUri } from '../../util/files';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\nimport Modal from './Modal';\nimport Loading from './Loading';\n\nimport './CropModal.scss';\n\n// Change to 'base64' to get base64-encoded string\nconst cropperResultOptions: Croppie.ResultOptions & { type: 'blob' } = {\n  type: 'blob',\n  quality: 1,\n  format: 'jpeg',\n  circle: false,\n  size: { width: 1024, height: 1024 },\n};\n\ntype ICroppie = typeof import('croppie');\nlet Croppie: ICroppie;\nlet croppiePromise: Promise<{ default: ICroppie }>;\n\nasync function ensureCroppie() {\n  if (!croppiePromise) {\n    croppiePromise = import('../../lib/croppie') as unknown as Promise<{ default: ICroppie }>;\n    Croppie = (await croppiePromise).default;\n  }\n\n  return croppiePromise;\n}\n\nlet cropper: Croppie;\n\nasync function initCropper(imgFile: File) {\n  try {\n    const cropContainer = document.getElementById('avatar-crop');\n    if (!cropContainer) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = cropContainer;\n\n    cropper = new Croppie(cropContainer, {\n      enableZoom: true,\n      boundary: {\n        width: offsetWidth,\n        height: offsetHeight,\n      },\n      viewport: {\n        width: offsetWidth - 16,\n        height: offsetHeight - 16,\n        type: 'circle',\n      },\n    });\n\n    const dataUri = await blobToDataUri(imgFile);\n    await cropper.bind({ url: dataUri });\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n}\n\ntype OwnProps = {\n  file?: File;\n  onChange: (file: File) => void;\n  onClose: () => void;\n};\n\nconst CropModal: FC<OwnProps> = ({ file, onChange, onClose }: OwnProps) => {\n  const [isCroppieReady, setIsCroppieReady] = useState(false);\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    if (!isCroppieReady) {\n      ensureCroppie().then(() => setIsCroppieReady(true));\n\n      return;\n    }\n\n    initCropper(file);\n  }, [file, isCroppieReady]);\n\n  const lang = useLang();\n\n  const handleCropClick = useCallback(async () => {\n    if (!cropper) {\n      return;\n    }\n\n    const result: Blob | string = await cropper.result(cropperResultOptions);\n    const croppedImg = typeof result === 'string' ? result : blobToFile(result, 'avatar.jpg');\n\n    onChange(croppedImg);\n  }, [onChange]);\n\n  return (\n    <Modal\n      isOpen={Boolean(file)}\n      onClose={onClose}\n      title=\"Drag to reposition\"\n      className=\"CropModal\"\n      hasCloseButton\n    >\n      {isCroppieReady ? (\n        <div id=\"avatar-crop\" />\n      ) : (\n        <Loading />\n      )}\n      <Button\n        className=\"confirm-button\"\n        round\n        color=\"primary\"\n        onClick={handleCropClick}\n        ariaLabel={lang('CropImage')}\n      >\n        <i className=\"icon-check\" />\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(CropModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useState, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport CropModal from './CropModal';\n\nimport './AvatarEditable.scss';\n\ninterface OwnProps {\n  title?: string;\n  disabled?: boolean;\n  currentAvatarBlobUrl?: string;\n  onChange: (file: File) => void;\n}\n\nconst AvatarEditable: FC<OwnProps> = ({\n  title = 'Change your profile picture',\n  disabled,\n  currentAvatarBlobUrl,\n  onChange,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n  const [croppedBlobUrl, setCroppedBlobUrl] = useState<string | undefined>(currentAvatarBlobUrl);\n\n  useEffect(() => {\n    setCroppedBlobUrl(currentAvatarBlobUrl);\n  }, [currentAvatarBlobUrl]);\n\n  function handleSelectFile(event: ChangeEvent<HTMLInputElement>) {\n    const target = event.target as HTMLInputElement;\n    if (!target || !target.files || !target.files[0]) {\n      return;\n    }\n\n    setSelectedFile(target.files[0]);\n    target.value = '';\n  }\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n\n    if (croppedBlobUrl) {\n      URL.revokeObjectURL(croppedBlobUrl);\n    }\n    setCroppedBlobUrl(URL.createObjectURL(croppedImg));\n  }, [croppedBlobUrl, onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const labelClassName = buildClassName(\n    croppedBlobUrl && 'filled',\n    disabled && 'disabled',\n  );\n\n  return (\n    <div className=\"AvatarEditable\">\n      <label\n        className={labelClassName}\n        role=\"button\"\n        tabIndex={0}\n        title={title}\n      >\n        <input\n          type=\"file\"\n          onChange={handleSelectFile}\n          accept=\"image/png, image/jpeg\"\n        />\n        <i className=\"icon-camera-add\" />\n        {croppedBlobUrl && <img src={croppedBlobUrl} alt=\"Avatar\" />}\n      </label>\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </div>\n  );\n};\n\nexport default memo(AvatarEditable);\n"],"names":["createGhost","source","origin","ghost","document","createElement","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","profileInfo","querySelector","cloneNode","isMessageImageFullyVisible","container","imageEl","messageListElement","imgOffsetTop","offsetTop","closest","id","includes","parentElement","scrollTop","offsetHeight","applyStyles","element","styles","Object","assign","style","getNodes","message","containerSelector","mediaSelector","getMessageHtmlId","mediaEls","querySelectorAll","mediaEl","length","applyShape","firstChild","objectFit","cache","Map","useBlurSync","dataUri","blurredRef","useRef","isChanged","useOnChange","current","undefined","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","delay","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","useEffect","onload","blurredDataUri","size","clear","set","window","setTimeout","useBlur","Boolean","memo","withGlobal","global","isDownloading","selectIsDownloading","isProtected","selectIsMessageProtected","mediaData","isVideo","fileName","isAvatar","canReport","onReport","onCloseMediaViewer","zoomLevelChange","setZoomLevelChange","onForward","downloadMessageMedia","cancelMessageMediaDownload","getActions","loadProgress","downloadProgress","useMediaWithLoadProgress","getMessageMediaHash","handleDownloadClick","useCallback","handleZoomOut","handleZoomIn","lang","useLang","MenuButton","useMemo","onTrigger","isOpen","Button","round","color","className","onClick","ariaLabel","IS_SINGLE_COLUMN_LAYOUT","DropdownMenu","trigger","positionX","MenuItem","icon","Math","href","download","ProgressSpinner","progress","noCross","renderDownloadButton","text","isHidden","isForVideo","isMultiline","setIsMultiline","useState","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","classNames","buildClassName","e","stopPropagation","dir","prop","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","PLAYBACK_RATES","bufferedRanges","bufferedProgress","currentTime","duration","fileSize","isForceMobileVersion","isPlayed","isFullscreenSupported","isFullscreen","isVisible","isBuffered","volume","isMuted","playbackRate","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","onPlayPause","setVisibility","onSeek","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","useFlag","seekerRef","isSeekingRef","isSeeking","timeout","body","remove","handleSeek","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","max","min","handleStartSeek","handleStopSeek","captureEvents","onCapture","onRelease","onDrag","volumeIcon","percentagePlayed","ref","map","start","end","renderSeekLine","ripple","IS_IOS","RangeSlider","bold","value","onChange","formatMediaDuration","renderTime","formatFileSize","Menu","positionY","autoClose","onClose","rate","disabled","url","isGif","posterData","posterSize","isMediaViewerOpen","noPlay","toggleControls","areControlsVisible","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","videoRef","setIsPlayed","IS_TOUCH_ENV","setCurrentTime","setFullscreen","exitFullscreen","elRef","setIsFullscreen","useLayoutEffect","listener","listenerEnter","listenerExit","video","PLATFORM_ENV","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","bufferingHandlers","useBuffering","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransition","shouldRenderPlayButton","playButtonClassNames","pause","safePlay","togglePlayState","useVideoCleanup","handleMouseMove","handleMouseOut","target","handleTimeUpdate","currentTarget","handleEnded","handleFullscreenChange","position","handleVolumeChange","newVolume","handleVolumeMuted","handlePlaybackRateChange","newPlaybackRate","togglePayingStateBySpace","key","preventDefault","wrapperStyle","videoStyle","onMouseMove","onMouseOut","autoPlay","playsInline","loop","muted","onPlay","onEnded","onDoubleClick","onTimeUpdate","join","square","ownProps","chatId","threadId","messageId","avatarOwnerId","profilePhotoIndex","mediaViewer","selectChatMessage","senderId","avatarOwner","selectUser","selectChat","selectScheduledMessage","props","isActive","animationLevel","isFooterHidden","onFooterClick","setIsFooterHidden","photo","getMessagePhoto","getMessageVideo","webPagePhoto","getMessageWebPagePhoto","webPageVideo","getMessageWebPageVideo","isDocumentPhoto","isMessageDocumentPhoto","isDocumentVideo","isMessageDocumentVideo","isPhoto","isVideoAvatar","hasVideoAvatar","isFromSharedMedia","isFromSearch","isGhostAnimation","getMediaHash","isFull","photos","avatarPhoto","getVideoAvatarMediaHash","getChatAvatarHash","pictogramBlobUrl","useMedia","ApiMediaFormat","previewMediaHash","previewBlobUrl","fullMediaBlobUrl","getMessageMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","getMessageMediaThumbDataUri","videoSize","getMessageFileSize","dimensions","getMessageDocument","mediaSize","getPhotoFullDimensions","getVideoDimensions","VIDEO_AVATAR_FULL_DIMENSIONS","AVATAR_FULL_DIMENSIONS","calculateMediaViewerDimensions","renderPhoto","textParts","renderMessageText","hasFooter","onContextMenu","imageSize","canDrag","Spinner","renderVideoPreview","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelAnimation","cancelZoomAnimation","SwipeDirection","getMessageId","selectMessage","rest","containerRef","activeSlideRef","transformRef","x","y","scale","lastTransformRef","swipeDirectionRef","isActiveRef","isReleasedRef","activeMessageId","setActiveMessageId","prevZoomLevelChange","usePrevious","hasZoomChanged","isMouseDown","setIsMouseDown","windowHeight","windowWidth","isResizing","useWindowSize","setTransform","selectMessageDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleToggleFooterVisibility","isFooter","pageY","pageX","useTimeout","lastTransform","lastDragOffset","lastZoomCenter","panDelta","initialContentRect","content","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","mId","offset","animateNumber","from","to","timing","onUpdate","changeSlideOnClick","handleKeyDown","calculateOffsetBoundaries","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","maxOffsetX","right","isBetween","clamp","minOffsetY","top","maxOffsetY","bottom","type","absX","abs","absY","s1","scaleFactor","x1","y1","k","Vx","Vy","dirX","cleanup","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","checkIfControlTarget","event","captureEvent","cancelDrag","dragOffsetX","dragOffsetY","touches","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","transform","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","nextMessageId","previousMessageId","getAnimationStyle","isRtl","toFixed","selector","matches","sender","isUserId","selectSender","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","forceSyncOnIOs","senderTitle","getSenderTitle","Avatar","user","chat","renderText","formatMediaDateTime","date","settings","byKey","chatMessages","collectionIds","isChatWithSelf","selectIsChatWithSelf","selectScheduledMessages","selectChatMessages","selectOutlyingIds","selectListedIds","currentSearch","selectCurrentMediaSearch","foundIds","resultsByType","media","openMediaViewer","openForwardMenu","singleMessageId","messageIds","getChatMediaMessageIds","selectedMediaMessageIndex","indexOf","animationKey","prevSenderId","headerAnimation","isReportModalOpen","openReportModal","closeReportModal","getMessageFileName","toggle","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","addListener","removeListener","prevMessage","prevOrigin","prevAvatarOwner","prevBestImageData","dispatchHeavyAnimationEvent","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","requestAnimationFrame","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","close","handleFooterClick","handleForward","fromChatId","forceOnHeavyAnimation","captureEscKeyListener","stopCurrentAudio","fromId","index","useHistoryBack","onBack","ShowTransition","Transition","activeKey","name","ReportModal","subject","currentUserId","chatOrUserIds","filterRef","filter","filterPlaceholder","loadMore","onFilterChange","onSelectChatOrUser","onCloseAnimationEnd","viewportIds","getMore","useInfiniteScroll","resetFilter","useInputFocusOnOpen","handleFilterChange","useKeyboardListNavigation","modalHeader","InputText","onKeyDown","placeholder","viewportOffset","Modal","header","InfiniteScroll","items","onLoadMore","withAbsolutePositioning","maxHeight","CHAT_HEIGHT_PX","i","ListItem","PrivateChatInfo","status","userId","GroupChatInfo","Loading","chats","byId","chatsById","listIds","orderedPinnedIds","switchBotInline","activeListIds","active","archivedListIds","archived","pinnedIds","contactIds","contactList","userIds","setForwardChatId","exitForwardMode","openChatWithText","resetSwitchBotInline","setFilter","isShown","markIsShown","unmarkIsShown","chatAndContactIds","priorityIds","unique","chatIds","getCanPostInChat","MAIN_THREAD_ID","usersById","getGlobal","users","sortChatIds","filterChatsByName","filterUsersByName","handleSelectUser","botUsername","query","handleClose","renderingChatAndContactIds","useCurrentOrPrev","getErrorHeader","error","isSlowMode","hasErrorKey","pick","dialogs","dismissDialog","acceptInviteConfirmation","sendMessage","showNotification","isModalOpen","openModal","closeModal","dialog","contactRequest","invite","hash","title","about","participantsCount","isChannel","isRequestNeeded","participantsText","joinText","requestToJoinText","renderInviteHeader","isText","renderInvite","contact","getReadableErrorText","notifications","dismissNotification","localId","action","actionText","Notification","onDismiss","toggleSafeLinkModal","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","ConfirmDialog","confirmLabel","confirmHandler","urlAuth","currentUser","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","request","bot","button","isWriteAllowed","handleLoginChecked","Checkbox","checked","label","getUserFullName","onCheck","MAX_SAFE_DATE","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","String","padStart","formatDay","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","unmarkTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","getHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","push","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleSubmit","handleChangeHours","replace","hours","Number","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","role","tabIndex","handleDateSelect","inputMode","onFocus","onBlur","historyCalendarSelectedAt","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","timestamp","valueOf","userStatus","selectUserStatus","serverTimeOffset","phoneCodeList","countryList","phoneCodes","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","getUserStatus","webApp","attachMenuBot","attachMenu","bots","selectCurrentChat","theme","selectTheme","isPaymentModalOpen","payment","paymentStatus","closeWebApp","sendWebViewData","prolongWebView","toggleBotInAttachMenu","openTelegramLink","openChat","openInvoice","setWebAppPaymentSlug","mainButton","setMainButton","isBackButtonVisible","setIsBackButtonVisible","backgroundColor","setBackgroundColor","extractCurrentThemeParams","bg_color","headerColor","setHeaderColor","buttonText","queryId","isSimple","handleEvent","eventType","eventData","slug","linkUrl","path_full","is_visible","themeParams","validateHexColor","newColor","color_key","data","button_color","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","reloadFrame","sendEvent","sendViewport","sendTheme","isSimpleView","onEvent","ignoreEventsRef","frame","once","contentWindow","postMessage","JSON","stringify","is_expanded","theme_params","sendCustomStyle","handleMessage","parse","scrollbarColor","getComputedStyle","getPropertyValue","err","useWebAppFrame","shouldShowMainButton","useInterval","peerId","handleMainButtonClick","handleSettingsButtonClick","handleRefreshClick","prevIsPaymentModalOpen","handleToggleClick","isEnabled","handleBackClick","openBotChat","MoreMenuButton","isMenuOpen","backButtonClassName","isAttachMenuBot","destructive","hasSettings","prevMainButtonColor","prevMainButtonTextColor","prevMainButtonIsActive","prevMainButtonText","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideButton","setShouldHideButton","buttonChangeTimeout","hasCloseButton","sandbox","allow","allowFullScreen","cancelBotTrustRequest","markBotTrusted","previousBot","previousType","currentBot","currentType","handleBotTrustAccept","closeBotAttachRequestModal","confirmBotAttachRequest","deleteFolderDialogId","closeDeleteChatFolderModal","deleteChatFolder","handleDeleteFolderMessage","confirmIsDestructive","leftValue","rightValue","floatingBadgeIcon","rightStyle","dangerouslySetInnerHTML","__html","COLOR_START","COLOR_END","description","colorStepProgress","lerp","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","useCanvasBlur","useMediaTransition","DeviceFrame","AnimatedCircleReaction","realIndex","isActivated","reaction","maxLength","handleClick","activateAnimation","mediaDataAround","aroundAnimation","isAnimated","animate","inanimate","isEffectEnded","markEffectEnded","unmarkEffectEnded","circleSize","angle","PI","totalAngle","cos","scaleNotFull","sin","handleClickEmoji","AnimatedSticker","tgsUrl","play","isLowPriority","noLoop","availableReactions","isIntervalPaused","pauseInterval","unpauseInterval","lastUnpauseTimeout","setOffset","setSize","renderedReactions","l","isPremium","slice","cycleRestrict","clientWidth","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","count","Array","fill","_","isLast","isPreLast","isFirst","isPreFirst","isInvisible","AnimatedCircleSticker","sticker","stickers","premium","renderedStickers","PREMIUM_FEATURE_TITLES","limits","reactions","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","PREMIUM_FEATURE_DESCRIPTIONS","PREMIUM_FEATURE_SECTIONS","PREMIUM_BOTTOM_VIDEOS","LIMITS_ORDER","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","LIMITS_DESCRIPTIONS","promo","initialSection","onClickSubscribe","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","handleLimitsScroll","scrollHeight","scrollContainer","fastSmoothScrollHorizontal","then","handleSelectSlide","async","onScroll","scrollLeft","scrollLeftOriginal","setProperty","toString","reverseIndex","ceil","prevElement","reverseElement","slide","section","defaultLimit","premiumLimit","videoSections","videos","thumbnail","isShiny","formatCurrency","monthlyAmount","currency","buttonClassName","PREMIUM_FEATURE_COLOR_ICONS","PremiumLimits","PremiumReactions","PremiumStickers","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","premiumModal","isClosing","isSuccess","fromUser","fromUserId","selectIsCurrentUserPremium","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","appConfig","premiumSlug","premiumInvoiceSlug","premiumBotUsername","dialogRef","closePremiumModal","requestConfetti","isHeaderHidden","setHeaderHidden","currentSection","setCurrentSection","handleClickWithStartParam","startParam","showConfetti","prevIsPremium","isClosed","PremiumLogo","renderTextWithEntities","statusText","statusEntities","LIMIT_DESCRIPTION","uploadMaxFileparts","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","closeLimitReachedModal","openPremiumModal","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SafeLink","isSchedule","selectCurrentMessageList","canDeleteForAll","selectAllowedMessageActions","contactName","getUserFirstOrLastName","getPrivateChatUserId","willDeleteForCurrentUserOnly","isChatBasicGroup","willDeleteForAll","isChatSuperGroup","album","deleteMessages","deleteScheduledMessages","handleDeleteMessageForAll","messages","shouldDeleteForAll","handleDeleteMessageForSelf","onEnter","isPrivateChat","isChatChannel","isGroup","isSuperGroup","canPinForAll","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","pinnedMessagesCount","onUnpin","selectedMessageIds","selectedMessages","selectCanDeleteSelectedMessages","exitMessageSelectMode","messageListType","canDelete","selectCanReportSelectedMessages","canDownload","selectCanDownloadSelectedMessages","hasProtectedMessage","selectHasProtectedMessage","isForwardModalOpen","forwardMessages","isModalShown","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","isDeleteModalOpen","openDeleteModal","closeDeleteModal","useHotkeys","useCopySelectedMessages","captureKeyboardListeners","onBackspace","onDelete","onEsc","handleCopy","handleDownload","prevSelectedMessagesCount","formattedMessagesCount","renderButton","seenByModal","memberIds","seenByUserIds","closeSeenByModal","renderingMemberIds","noStatusOrTyping","reactorModal","reactors","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","handleLoadMore","allReactions","concat","nextOffset","LoadMoreDirection","formatIntegerCompact","find","ReactionStaticEmoji","fullName","PremiumIcon","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","localEffectAnimation","keys","LOCAL_TGS_URLS","stopActiveEmojiInteraction","isHiding","startHiding","isPlaying","startPlaying","stop","handleCancelAnimation","dispatchHeavyAnimationStop","effectTgsUrl","startSize","isReversed","quality","IS_ANDROID","onLoad","onSelect","buttonRef","activeElement","privateChatUserId","isPinned","selectIsChatPinned","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canChangeFolder","chatFolders","orderedIds","withUsername","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","contextActions","useChatContextActions","handleDelete","handleChatFolderChange","useSelectWithEnter","avatarSize","withVideoAvatar","DeleteChatModal","runThrottled","cb","topUserIds","topPeers","recentlyFoundChatIds","globalSearch","onReset","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","useHorizontalScroll","shouldReplaceHistory","lastSyncTime","privateChatUser","searchQuery","mediaThumbnail","getMessageSticker","mediaBlobUrl","isRoundVideo","getMessageRoundVideo","isSavedMessages","isSelf","getChatTitle","isVerified","VerifiedIcon","fakeType","FakeIcon","Link","formatPastTimeShort","renderMessageSummary","renderSummary","searchDate","suggestions","match","suggestion","currentDate","latestYear","getSuggestionsFromDate","localContactIds","fetchingStatus","globalResults","localResults","globalChatIds","globalUserIds","localChatIds","localUserIds","byChatId","globalMessagesByChatId","dateSearchQuery","onSearchDateSelect","searchMessagesGlobal","setGlobalSearchChatId","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","handleChatClick","handlePickerItemClick","startsWith","MEMO_EMPTY_ARRAY","contactIdsWithMe","foundContactIds","foundMessages","split","sort","a","b","handleClickShowMoreLocal","handleClickShowMoreGlobal","nothingFound","noScrollRestoreOnTop","noFastList","NothingFound","PickerSelectedItem","chatOrUserId","clickArg","createMapStateToProps","isVoice","activeDownloads","isLoading","searchChatId","isChatProtected","CURRENT_TYPE","observe","observeIntersectionForMedia","useIntersectionObserver","rootRef","throttleMs","handleSelectMedia","canRenderContents","useAsyncRendering","SLIDE_TRANSITION_DURATION","isMediaGrid","isMessageList","itemSelector","Media","idPrefix","observeIntersection","handleMessageFocus","shouldDrawDateDivider","toYearMonth","formatMonthAndYear","WebLink","getSenderName","onMessageClick","Document","withDate","datetime","smaller","onDateClick","openAudioPlayer","handlePlayAudio","Audio","AudioOrigin","TABS","GlobalSearchContent","CHAT_TABS","TRANSITION_RENDER_COUNT","currentContent","setGlobalSearchContent","setGlobalSearchDate","activeTab","setActiveTab","parseDateString","handleSwitchTab","tab","handleSearchDateSelect","TabList","tabs","onSwitchTab","renderCount","INITIAL_STATE","currentPassword","password","hint","email","twoFaReducer","state","payload","currentScreen","editedFolderId","onSaveFilter","onScreenSelect","signOut","openDeleteChatFolderModal","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","amount","callback","currentAmountRef","useMultiClick","SettingsScreens","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","folderId","handleSignOutMessage","SettingsMenuButton","renderHeaderContent","sessionCount","activeSessions","orderedHashes","loadProfilePhotos","loadAuthorizations","profileId","ProfileInfo","forceShowSelf","ChatExtra","leftElement","withGradient","big","langName","LINK_PREFIX","LINK_PREFIX_REGEX","USERNAME_REGEX","runDebouncedForCheckUsername","currentUsername","asLink","isUsernameAvailable","checkUsername","username","setUsername","langPrefix","usernameSuccess","usernameError","test","handleUsernameChange","newUsername","isValid","isUsernameValid","success","readOnly","autoComplete","maxLengthIndicator","onInput","onKeyPress","onPaste","textareaRef","labelText","fullClassName","textarea","handleChange","htmlFor","ERROR_FIRST_NAME_MISSING","profileEdit","maxBioLength","selectCurrentLimit","currentFirstName","currentLastName","fullInfo","bio","currentBio","currentAvatarHash","loadCurrentUser","updateProfile","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","currentAvatarBlobUrl","ProfileEditProgress","isUsernameError","isSaveButtonShown","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","UsernameInput","FloatingActionButton","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","canAutoPlayGifs","canAutoPlayVideos","autoLoadFileMaxSizeMb","setSettingOption","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","handleCanAutoPlayGifsChange","handleCanAutoPlayVideosChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","isChecked","renderValue","renderContentSizeSlider","runThrottledForLoadRecommended","orderedFolderIds","foldersById","recommended","recommendedChatFolders","maxFolders","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","openLimitReachedModal","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","folder","ALL_FOLDER_ID","subtitle","getFolderDescriptionText","handleCreateFolderFromRecommended","canCreateNewFolder","AnimatedIcon","STICKER_SIZE_FOLDER_SETTINGS","pill","fluid","isBlocked","narrow","inactive","isStatic","secondaryIcon","multiline","handler","itemName","itemPluralName","ERROR_NO_TITLE","ERROR_NO_CHATS","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","dispatch","onAddIncludedChats","onAddExcludedChats","editChatFolder","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","selectedChatIds","includedChatIds","selectedChatTypes","includedChatTypes","selectChatFilters","excludedChatIds","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","Set","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","mode","folderUpdate","renderChats","visibleChatIds","isExpanded","leftChatsCount","clickHandler","chatType","INCLUDED_CHAT_TYPES","typeKey","EXCLUDED_CHAT_TYPES","renderChatType","isTouched","maxChats","selectedIds","filterValue","onSelectedIdsChange","onSelectedChatTypesChange","chatTypes","shouldMinimize","handleItemClick","newSelectedIds","splice","handleChatTypeClick","newSelectedChatTypes","selectedType","isMinimized","canClose","isSelected","withChatType","chatFilter","folderAllOrderedIds","useFolderManagerForOrderedIds","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","displayedIds","newFilter","handleSelectedIdsChange","ids","includeFilters","excludeFilters","handleSelectedChatTypesChange","newFilters","forEach","shownScreen","handleReset","handleEditFolder","handleAddIncludedChats","handleAddExcludedChats","STICKER_SIZE_PICKER_HEADER","stickerSet","isIntersecting","useIsIntersecting","mediaHash","lottieData","firstLetters","getFirstLetters","hasThumbnail","isVideos","IS_WEBM_SUPPORTED","firstSticker","isLottie","STICKER_SIZE_GENERAL_SETTINGS","StickerButton","noContextMenu","isCurrentUserPremium","ANIMATION_LEVEL_OPTIONS","TIME_FORMAT_OPTIONS","shouldUseSystemTheme","stickerSetIds","added","setIds","stickerSetsById","setsById","defaultReaction","messageTextSize","messageSendKeyCombo","shouldSuggestStickers","shouldLoopStickers","timeFormat","stickerSettingsRef","observeIntersectionForCovers","setSticker","APPEARANCE_THEME_OPTIONS","KEYBOARD_SEND_OPTIONS","subLabel","IS_MAC_OS","handleAnimationLevelChange","newLevel","handleMessageTextSizeChange","newSize","documentElement","floor","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","switchTheme","ANIMATION_LEVEL_MAX","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleStickerSetClick","handleMessageSendComboChange","newCombo","handleSuggestStickersChange","newValue","handleShouldLoopStickersChange","stickerSets","installedDate","RadioGroup","options","selected","fromSticker","wallpaper","localMediaHash","thumbRef","isLoadAllowed","setIsLoadAllowed","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","handleSelect","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","background","isBlurred","themes","loadedWallpapers","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","files","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","handleResetToDefault","patternColor","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","isDragging","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","ctx","offsetWidth","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","hasPrivateChatsNotifications","hasPrivateChatsMessagePreview","hasGroupNotifications","hasGroupMessagePreview","hasBroadcastNotifications","hasBroadcastMessagePreview","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","handleSettingsChange","peerType","setting","currentIsSilent","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","privacy","blocked","passcode","hasPasscode","blockedCount","totalCount","webAuthCount","activeWebSessions","privacyPhoneNumber","privacyLastSeen","lastSeen","privacyProfilePhoto","profilePhoto","privacyForwarding","forwards","privacyGroupChats","chatInvite","privacyPhoneCall","phoneCall","privacyPhoneP2P","phoneP2P","loadPrivacySettings","loadBlockedContacts","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","updateGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","getVisibilityValue","visibility","blockCount","blockChatIds","blockUserIds","allowCount","allowChatIds","allowUserIds","total","exceptionString","languages","langCode","nativeName","pluralCode","stringsCount","translatedCount","translationsUrl","language","loadLanguages","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","setLanguage","currentLangCode","navigator","toLowerCase","shortLangCode","substr","buildOptions","loadingOption","getPrivacyKey","screen","privacySettings","setPrivacyVisibility","visibilityOptions","exceptionLists","shouldShowDenied","shouldShowAllowed","privacyKey","headerText","descriptionText","allowedContactsScreen","deniedContactsScreen","allowedCount","reduce","result","membersCount","handleVisibilityChange","getSessionIcon","session","platform","device","deviceModel","systemVersion","byHash","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","formatDateTimeToString","dateActive","appName","appVersion","ip","region","country","getLocation","Switcher","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","sessionHashes","sessionHash","terminateWebAuthorization","renderingBot","browser","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","blockedIds","userSearch","setUserSearchQuery","blockContact","filteredContactIds","availableContactIds","contactId","firstId","secondId","secondName","localeCompare","handleRemoveUser","accessHash","chatsByIds","usersByIds","unblockContact","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","isPrivate","noVideo","renderContact","AnimatedIconWithPreview","previewUrl","lockPreviewUrl","shouldDisablePasswordManager","expectedPassword","clearError","validationError","setValidationError","shouldShowPassword","setShouldShowPassword","newPassword","handleClearError","PasswordMonkey","isBig","isPasswordVisible","PasswordForm","shouldResetValue","onChangePasswordVisibility","onStart","FOCUS_DELAY_TIMEOUT_MS","animatedEmoji","selectAnimatedEmoji","shouldConfirm","setValue","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleInputChange","handleSkip","handleSkipConfirm","AnimatedIconFromSticker","STICKER_SIZE_TWO_FA","codeLength","twoFaSettings","waitingEmailCodeLength","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleStartWizard","handleNewPassword","handleNewPasswordConfirm","handleNewPasswordHint","handleNewPasswordEmail","onSuccess","handleChangePasswordCurrent","handleChangePasswordNew","handleChangePasswordConfirm","handleChangePasswordHint","handleTurnOff","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","getCurrentPrivacySettings","isAllowList","setPrivacySettings","selectedContactIds","setSearchQuery","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","handleSelectedContactIdsChange","contactsIds","Picker","itemIds","searchInputId","selectedReaction","setDefaultReaction","isInactive","STICKER_SIZE_PASSCODE","fullReset","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","currentPasscode","decryptSession","nonInteractive","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","foldersState","foldersDispatch","shouldSkipTransition","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","forceReturnToChatList","handleSaveFilter","renderCurrentSection","isScreenActive","isFrom","currentKey","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","values","SettingsGeneralBackgroundColor","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","isDeleteFolderDialogOpen","setIsDeleteFolderDialogOpen","closeDeleteFolderConfirmation","ComponentsScreens","copyTextToClipboard","currentTab","setCurrentTab","lastMessage","replyToMessageId","isOutgoing","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","currentChatId","currentThreadId","draft","selectDraft","canScrollDown","lastMessageOutgoingStatus","selectOutgoingStatus","orderDiff","animationType","focusLastMessage","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","typingStatus","isAction","isActionMessage","useEnsureMessage","actionTargetUsers","ChatAnimationTypes","fastRaf","lastMessage1","LastMessageMeta","outgoingStatus","TypingStatus","isChat","renderActionMessageText","asTextWithSpoilers","renderLastMessageOrTyping","isDialogOpen","setIsDialogOpen","closeConfirmation","teactOrderKey","statusesById","userStatusesById","openNewContactDialog","filteredIds","sortUserIds","creationProgress","creationError","chatCreation","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","chatTooManyUsersError","ChatCreationProgress","handleTitleChange","handleDescriptionChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","onContentChange","newChatMemberIds","setNewChatMemberIds","isStepActive","isSearching","selectedMemberIds","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","canBeInvitedToGroup","isUserBot","handleNextStep","ChatList","folderType","folderOrderedIds","editChatFolders","initialSelectedFolderIds","pinnedChatIds","selectedFolderIds","setSelectedFolderIds","folders","idsToRemove","idsToAdd","CheckboxGroup","getCopyLabel","hasSelection","scrollLockEl","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","getTouchY","changedTouches","clientY","preventDefaultForScrollKeys","HTMLElement","tagName","getAttribute","isTextBox","disableScrolling","el","_excludedClosestSelector","passive","onkeydown","enableScrolling","REACTION_SIZE","IS_COMPACT_MENU","cn","createClassNameBuilder","previewIndex","onSendReaction","isReady","selectAnimation","activate","deactivate","isAnimationLoaded","markAnimationLoaded","shouldRenderAnimated","animatedClassNames","shouldRenderStatic","staticClassNames","onMouseEnter","enabledReactions","itemsScrollRef","isHorizontalScrollEnabled","enableHorizontalScroll","handleWheel","onWheelCapture","onTouchMove","r","anchor","canSendNow","canReschedule","canReply","canEdit","canPin","canUnpin","canForward","canFaveSticker","canUnfaveSticker","canCopy","canCopyLink","canSelect","canSaveGif","canRevote","canClosePoll","canShowSeenBy","canShowReactionsCount","canRemoveReaction","canShowReactionList","seenByRecentUsers","onReply","onEdit","onPin","onFaveSticker","onUnfaveSticker","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onCopyMessages","onAboutAds","onSponsoredHide","menuRef","scrollableRef","noReactions","withReactions","isSponsoredMessage","markIsReady","unmarkIsReady","handleAfterCopy","copyOptions","afterEffect","getMessageText","getMessageContact","canImageBeCopied","hasMessageLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","selection","getSelection","Promise","resolve","mediaLoader","copyImageToClipboard","anchorNode","parentNode","getMessageIdsForSelectedText","clipboardText","getMessageTextWithSpoilers","getMessageCopyOptions","getTriggerElement","getRootElement","getMenuElement","getLayout","extraHeightAudioPlayer","pinnedElement","extraHeightPinned","extraPaddingX","extraTopPadding","marginSides","extraMarginTop","handleRemoveReaction","transformOriginX","transformOriginY","menuStyle","withScroll","useContextMenuPosition","bubbleStyle","option","START_SIZE","selectActiveDownloadIds","seenByExpiresAt","seenByMaxChatMembers","noOptions","isScheduled","isLocal","isMessageLocal","isChatGroup","isOwnMessage","areReactionsEmpty","canSeeList","some","isChosen","canCopyNumber","isForbidden","hasFullInfo","SERVICE_NOTIFICATIONS_USER_ID","chatUsername","setReplyingToId","setEditingId","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","loadSeenBy","openSeenByModal","sendReaction","openReactorListModal","loadFullChat","copyMessagesByIds","saveGif","cancelPollVote","closePoll","setIsMenuOpen","setIsDeleteModalOpen","setIsReportModalOpen","isPinModalOpen","setIsPinModalOpen","isCalendarOpen","openCalendar","closeCalendar","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","recentReactions","msg","handleReport","closeMenu","closePinModal","handleCloseCalendar","handleReply","handleEdit","handlePin","handleUnpin","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","params","childMessageIds","withShift","handleScheduledMessageSend","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleRescheduleMessage","scheduledAt","handleCopyMessages","handleCopyLink","handleCopyNumber","handleSaveGif","gif","handleSendReaction","reportMessageIds","scheduledMaxDate","getDayStartAt","handleAboutAdsOpen","handleSponsoredHide","stickerSetShortName","currentMessageList","sendOptions","getAllowedAttachmentOptions","canSendStickers","canScheduleUntilOnline","selectCanScheduleUntilOnline","shouldSchedule","selectShouldSchedule","selectStickerSet","stickerSetId","selectStickerSetByShortName","loadStickers","toggleStickerSet","requestCalendar","calendar","useSchedule","stickerSetAccessHash","isScheduleRequested","isPreloadedGlobally","handleButtonClick","STICKER_SIZE_MODAL","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","canReportChat","chatBot","REPLIES_USER_ID","selectChatBot","canDeleteChat","getCanDeleteChat","hasLinkedChat","linkedChatId","botCommands","botInfo","commands","withExtraActions","canStartBot","canRestartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canLeave","canEnterVoiceChat","canCreateVoiceChat","onSubscribeChannel","onSearchClick","updateChatMutedState","enterMessageSelectMode","sendBotCommand","restartBot","joinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","requestCall","toggleStatistics","handleStartBot","command","handleRestartBot","handleToggleMuteClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleSearch","handleStatisticsClick","handleSelectMessages","botButtons","cmd","Portal","runDebouncedForSearch","selectCurrentTextSearch","isHistoryCalendarOpen","setLocalTextSearchQuery","searchTextMessagesLocal","closeLocalTextSearch","openHistoryCalendar","focusedIndex","setFocusedIndex","visualViewport","mainEl","pageTop","input","div","contentEditable","blur","handleMessageSearchQueryChange","newQuery","handleUp","newFocusIndex","handleDown","SearchInput","findInViewport","selectorOrElements","margin","isDense","shouldContainBottom","isHorizontal","viewportY1","viewportY2","allElements","visibleIndexes","isFound","y2","setTooltipItemVisible","first","isFullyVisible","fastSmoothScroll","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","newIndex","handleArrowKey","handleItemSelect","item","isSelectionOutOfRange","onUp","onDown","onLeft","onRight","onTab","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","member","selectedMentionIndex","prevChatMembers","renderedChatMembers","attachments","caption","canShowCustomSendMenu","captionLimit","groupChatMembers","recentEmojis","baseEmojiKeywords","emojiKeywords","addRecentEmoji","onCaptionUpdate","onFileAppend","onClear","onSendSilent","onSendScheduled","captionRef","useStateRef","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isHovered","markHovered","unmarkHovered","isQuick","every","quick","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","insertEmoji","useEmojiTooltip","isContextMenuOpen","isCustomSendMenuOpen","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","sendAttachments","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","newFiles","file","CONTENT_TYPES_WITH_PREVIEW","areAllPhotos","SUPPORTED_IMAGE_CONTENT_TYPES","mimeType","areAllVideos","SUPPORTED_VIDEO_CONTENT_TYPES","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","leftChars","isOpenToBottom","onSendSchedule","renderHeader","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","attachment","File","filename","extension","getFileExtension","previewData","emojis","onEmojiSelect","MessageInput","isAttachmentModalInput","html","editableInputId","canAutoFocus","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","solutionRef","question","setQuestion","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","focusInput","solutionEl","innerHTML","addNewOption","newOptions","list","scrollTo","behavior","handleCreate","questionTrimmed","substring","optionsTrimmed","o","summary","answers","correct","isPublic","multipleChoice","quiz","entities","parseMessageInput","correctAnswers","solutionEntities","updateOption","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","keyCode","handleQuestionChange","getQuestionError","getOptionsError","renderOptions","renderQuizNoOptionError","hidden","emoji","native","image","isLoaded","LOADED_EMOJIS","onMouseDown","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","category","allEmojis","useOnIntersect","emojisPerRow","RECENT_SYMBOL_SET_ID","displayedEmoji","ICONS_BY_CATEGORY","recent","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","headerRef","categories","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","entries","entry","intersectingWithIndexes","newLeft","HEADER_BUTTON_WIDTH","allCategories","themeCategories","unshift","exec","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","handleEmojiSelect","MENU_TRANSITION_DURATION","containerClassName","faded","STICKER_MARGIN","loadAndPlay","favoriteStickers","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","clearRecentStickers","isConfirmModalOpen","openConfirmModal","closeConfirmModal","handleClearRecent","stickersPerRow","STICKER_SIZE_PICKER","favoriteStickerIdsSet","isRecent","noAnimate","onUnfaveClick","FAVORITE_SYMBOL_SET_ID","has","onFaveClick","onRemoveRecentClick","canViewSet","stickerSetIntersections","favorite","recentStickers","addedSetIds","shouldPlay","loadRecentStickers","addRecentSticker","removeRecentSticker","activeSetIndex","setActiveSetIndex","sendMessageAction","useSendMessageAction","areAddedLoaded","allSets","defaultSets","existingAddedSetIds","pickTruthy","premiumStickers","hasEffect","flat","PREMIUM_STICKER_SET_ID","fullSet","CHAT_STICKER_SET_ID","noPopulatedSets","stickerSetEl","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleRemoveRecentSticker","onUnsaveClick","videoData","shouldRenderVideo","isVideoReady","contextMenuPosition","handleBeforeContextMenu","handleUnsaveClick","handleContextDelete","handleSendQuiet","handleSendScheduled","handleMouseDown","preventMessageInputBlurWithBubbling","preload","gifs","saved","canSendGifs","onGifSelect","loadSavedGifs","debounceMs","shouldUnsave","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","Emoji","Stickers","GIFs","onRemoveSymbol","onSearchOpen","handleSearchOpen","isLeftColumnShown","setRecentEmojis","handleMouseEnter","handleMouseLeave","useMouseInside","recentEmojisRef","renderContent","onMouseLeave","noCloseOnBackdrop","noCompact","withAvatar","botCommand","handleSendCommand","selectedCommandIndex","prevCommands","renderedCommands","chatBotCommand","forEmoji","clearStickersForEmoji","prevStickers","displayedStickers","listEmojis","usePrevDuringAnimation","handleSelectEmoji","selectedIndex","setItemVisible","thumbUrl","thumbnailDataUrl","decoding","webThumbnail","isForGallery","inlineResult","_gif","STICKER_SIZE_INLINE_BOT_RESULT","isGallery","inlineBotResults","switchPm","onSelectResult","startBot","handleSendPm","param","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","selectedSendAsId","sendAsIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","messagesById","viewportResults","senderUser","senderChat","forwardInfo","isChannelPost","foundResult","isOnTop","preloadBackwards","selectShouldLoopStickers","isSomeModalOpen","onModalToggle","isAdded","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleAddClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","featuredIds","loadFeaturedStickers","setIsModalOpen","selectCurrentGifSearch","isChatWithBot","selectIsChatWithBot","canPostInChat","searchMoreGifs","setGifSearchQuery","handleGifClick","hasResults","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","isMessage","statistics","period","formatFullDate","row","cell","field","formatInteger","percentage","change","isChangeNegative","renderOverviewItemValue","toggleMessageStatistics","views","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","selectStatistics","dcId","statisticsDcId","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","ensureLovelyChart","zoomToken","create","children","callApi","zoomOutLabel","recentTopMessages","openChatByUsername","GRAPH_TITLES","viewsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","publicForwards","publicForwardsData","answer","voters","offsets","pollResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","setIsLoading","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","renderViewMoreButton","getMessagePoll","resultsByOption","buildCollectionByKey","management","deleteContact","closeManagement","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isNotificationsEnabled","setIsNotificationsEnabled","ManagementProgress","handleNotificationChange","handleDeleteContact","withFullInfo","GROUP_TITLE_EMPTY","hasLinkedChannel","isBasicGroup","invites","canChangeInfo","isCreator","getHasAdminRight","canBanUsers","canInvite","exportedInvites","availableReactionsCount","isChannelsPremiumLimitReached","limitReachedModal","togglePreHistoryHidden","updateChat","deleteChat","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","imageHash","isPublicGroup","isPreHistoryHiddenCheckboxRef","isRevoked","handleClickEditType","ManagementScreens","handleClickDiscussion","handleClickReactions","handleClickPermissions","handleClickAdministrators","handleClickInvites","handleClickRequests","handleSetPhoto","handleAboutChange","handleUpdateGroup","trimmedTitle","trimmedAbout","handleClickMembers","handleTogglePreHistory","isPreHistoryHidden","enabledReactionsCount","enabledPermissionsCount","defaultBannedRights","sendStickers","sendGifs","adminsCount","adminMembers","handleDeleteGroup","joinRequests","onChatMemberSelect","updateChatDefaultBannedRights","permissions","setPermissions","havePermissionChanged","setHavePermissionChanged","handleRemovedUsersClick","handleAddExceptionClick","handleExceptionMemberClick","promotedByUserId","handlePermissionChange","getUpdatedPermissionValue","p","handleSavePermissions","bannedRights","removedUsersCount","kickedMembers","exceptionMembers","members","getMemberExceptions","langKey","getLangKeyForBannedRightKey","translatedString","sendMessages","blocking","sendMedia","sendPolls","embedLinks","inviteUsers","pinMessages","changeInfo","loadMoreMembers","deleteChatMember","usersId","availableMemberIds","acc","isAdmin","isOwner","canDeleteMembers","updateChatMemberBannedRights","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","removedMembers","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","CHANNEL_TITLE_EMPTY","isSignaturesShown","toggleSignatures","handleUpdateChannel","handleToggleSignatures","handleClickSubscribers","handleDeleteChannel","selectManagement","maxPublicLinks","checkPublicLink","updatePublicLink","updatePrivateLink","toggleIsProtected","privateLink","inviteLink","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","canUpdate","handleOptionChange","radioGroup","handleForwardingOptionChange","handleSave","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","forDiscussionIds","linkedChat","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","channelId","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","STICKER_SIZE_DISCUSSION_GROUPS","teactFastList","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","isButtonsInOneRow","isPromotedByCurrentUser","isFormFullyDisabled","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","selectedChatMember","handleBanFromGroup","viewMessages","getControlIsDisabled","handleRecentActionsClick","handleAdminMemberClick","handleAddAdminClick","getMemberStatus","promotedByUser","defaultRights","adminRights","isNewAdmin","selectedUserId","updateChatAdmin","setIsTouched","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedAdminMember","handleDismissAdmin","memberStatus","handleCustomTitleChange","postMessages","editMessages","banUsers","addAdmins","manageCall","anonymous","noAdmins","adminIds","shouldUseSearchResults","listedIds","noScrollRestore","memberId","inviteComparator","i1","i2","isPermanent","i1IsPermanent","usage","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","setEditingExportedInvite","editExportedChatInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","expireDate","getServerTime","MILLISECONDS_IN_DAY","primaryInvite","primaryInviteLink","link","temporalInvites","revokeInvite","usageLimit","askToRevoke","handleRevoke","handleCreateNewClick","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","deleteInvite","askToDelete","copyLink","handleCopyPrimaryClicked","prepareUsageText","requested","diff","formatCountdown","getInviteIconClass","prepareContextActions","actions","editInvite","PrimaryLinkMenuButton","STICKER_SIZE_INVITES","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","exportChatInvite","isCalendarOpened","setIsRequestNeeded","customExpireDate","setCustomExpireDate","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleExpireDateChange","handleSaveClick","n","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","handleSaveReactions","availableActiveReactions","handleReactionChange","newEnabledReactions","inviteInfo","importers","requesters","loadChatInviteImporters","loadChatInviteRequesters","adminId","isExpired","handleCopyClicked","importer","renderImporters","requester","renderRequesters","hideChatJoinRequest","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","STICKER_SIZE_JOIN_REQUESTS","managementType","selectCurrentManagementType","VISA","MASTERCARD1","MASTERCARD2","CardType","cards","Default","Visa","Mastercard","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","reducer","iso2","defaultName","useFocusAfterAnimation","animationDuration","hasArrow","needEmail","needPhone","needName","needAddress","phoneRef","selectCountryRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handleCountryChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","shippingOptions","handleShippingSelect","renderPaymentItem","main","renderCheckoutItem","invoiceContent","prices","shippingPrices","checkoutInfo","totalPrice","isTosAccepted","onAcceptTos","isRecurring","recurringTermsUrl","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","getWebDocumentHash","Skeleton","forceAspectRatio","langStringSplit","renderTosLink","endsWith","parts","formatCardExpiry","teactExperimentControlled","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","getCardIcon","canSaveCredentials","needCardholderName","needCountry","needZip","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleBillingPostCodeChange","handleChangeSaveCredentials","SUPPORTED_PROVIDERS","step","savedInfo","invoice","nativeProvider","nativeParams","passwordMissing","confirmPaymentUrl","inputInvoice","isProviderError","nameRequested","phoneRequested","emailRequested","shippingAddressRequested","flexible","phoneToProvider","emailToProvider","general","validateRequestedInfo","sendPaymentForm","setPaymentStep","sendCredentialsInfo","clearPaymentError","paymentState","paymentDispatch","setIsTosAccepted","canRenderFooter","PaymentStep","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","shippingOption","getShippingPrices","totalPrices","cur","getTotalPrice","detectCardTypeText","findShippingOption","getCheckoutInfo","validateRequest","requestInfo","getRequestInfo","sendCredentials","credentials","expiryMonth","expiryYear","zip","getCredentials","sendForm","shippingOptionId","setStep","nextStep","handleModalClose","isSubmitDisabled","currentStep","renderModalContent","renderError","optionId","receipt","info","totalAmount","credentialsTitle","fullAddress","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","STICKER_SIZE","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","handleFirstMonkeyLoad","playSegment","cropperResultOptions","format","circle","Croppie","croppiePromise","cropper","isCroppieReady","setIsCroppieReady","imgFile","cropContainer","enableZoom","boundary","viewport","blobToDataUri","bind","DEBUG","console","initCropper","ensureCroppie","handleCropClick","croppedImg","blobToFile","selectedFile","setSelectedFile","croppedBlobUrl","setCroppedBlobUrl","handleAvatarCrop","URL","revokeObjectURL","createObjectURL","labelClassName","accept"],"sourceRoot":""}